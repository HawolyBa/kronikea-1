{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\hooks\\\\userHooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport { auth, db } from \"../redux/fbConfig\";\nvar authContext = /*#__PURE__*/createContext();\nexport function ProvideAuth(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, children);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1]; // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n\n\n  var signin = function signin(email, password) {\n    return auth.signInWithEmailAndPassword(email, password).then(function (response) {\n      setUser(response.user);\n      return response.user;\n    })[\"catch\"](function (err) {\n      if (err.code === \"auth/wrong-password\") {\n        setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n          password: err.message\n        }));\n      } else if (err.code === \"auth/user-not-found\") {\n        setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n          email: err.message\n        }));\n      }\n    });\n  };\n\n  var signup = function signup(email, password, username) {\n    return auth.createUserWithEmailAndPassword(email, password).then(function (response) {\n      setUser(response.user);\n      db.collection(\"users\").doc(response.user.uid).set({\n        username: username,\n        likesCount: 0,\n        twitter: \"\",\n        facebook: \"\",\n        instagram: \"\",\n        deviantart: \"\",\n        biography: \"\",\n        badges: [],\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        image: \"\",\n        suspended: false\n      }).then(function () {\n        setUser(_objectSpread(_objectSpread({}, user), {}, {\n          username: username\n        }));\n      });\n      return response.user;\n    });\n  };\n\n  var signout = function signout() {\n    return auth.signOut().then(function () {\n      setUser(false);\n    });\n  };\n\n  var sendPasswordResetEmail = function sendPasswordResetEmail(email) {\n    return auth.sendPasswordResetEmail(email).then(function () {\n      return true;\n    });\n  };\n\n  var confirmPasswordReset = function confirmPasswordReset(code, password) {\n    return auth.confirmPasswordReset(code, password).then(function () {\n      return true;\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n\n        if (user.uid) {\n          var username = \"\";\n          setIsLoading(false);\n          db.collection(\"users\").doc(user.uid).onSnapshot(function (doc) {\n            username = doc.data().username;\n            setUser(_objectSpread(_objectSpread({}, user), {}, {\n              username: username,\n              image: doc.data().image\n            }));\n          });\n        }\n      } else {\n        setUser(false);\n        setIsLoading(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []); // Return the user object and auth methods\n\n  return {\n    isLoading: isLoading,\n    errors: errors,\n    user: user,\n    signin: signin,\n    signup: signup,\n    signout: signout,\n    sendPasswordResetEmail: sendPasswordResetEmail,\n    confirmPasswordReset: confirmPasswordReset\n  };\n}\n\n_s3(useProvideAuth, \"dfjwXgDqE9EiXuHbLtFI7H+KTRc=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/userHooks.js"],"names":["React","useState","useEffect","useContext","createContext","firebase","auth","db","authContext","ProvideAuth","children","useProvideAuth","useAuth","user","setUser","isLoading","setIsLoading","errors","setErrors","signin","email","password","signInWithEmailAndPassword","then","response","err","code","message","signup","username","createUserWithEmailAndPassword","collection","doc","uid","set","likesCount","twitter","facebook","instagram","deviantart","biography","badges","createdAt","firestore","FieldValue","serverTimestamp","image","suspended","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","unsubscribe","onAuthStateChanged","onSnapshot","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth, db } from \"../redux/fbConfig\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Wrap any Firebase methods we want to use making sure ...\r\n  // ... to save the user to state.\r\n  const signin = (email, password) => {\r\n    return auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        return response.user;\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === \"auth/wrong-password\") {\r\n          setErrors({ ...errors, password: err.message });\r\n        } else if (err.code === \"auth/user-not-found\") {\r\n          setErrors({ ...errors, email: err.message });\r\n        }\r\n      });\r\n  };\r\n\r\n  const signup = (email, password, username) => {\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        db.collection(\"users\")\r\n          .doc(response.user.uid)\r\n          .set({\r\n            username,\r\n            likesCount: 0,\r\n            twitter: \"\",\r\n            facebook: \"\",\r\n            instagram: \"\",\r\n            deviantart: \"\",\r\n            biography: \"\",\r\n            badges: [],\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            image: \"\",\r\n            suspended: false,\r\n          })\r\n          .then(() => {\r\n            setUser({ ...user, username: username });\r\n          });\r\n        return response.user;\r\n      });\r\n  };\r\n\r\n  const signout = () => {\r\n    return auth.signOut().then(() => {\r\n      setUser(false);\r\n    });\r\n  };\r\n\r\n  const sendPasswordResetEmail = (email) => {\r\n    return auth.sendPasswordResetEmail(email).then(() => {\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const confirmPasswordReset = (code, password) => {\r\n    return auth.confirmPasswordReset(code, password).then(() => {\r\n      return true;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n        if (user.uid) {\r\n          let username = \"\";\r\n          setIsLoading(false);\r\n          db.collection(\"users\")\r\n            .doc(user.uid)\r\n            .onSnapshot((doc) => {\r\n              username = doc.data().username;\r\n              setUser({ ...user, username, image: doc.data().image });\r\n            });\r\n        }\r\n      } else {\r\n        setUser(false);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Return the user object and auth methods\r\n  return {\r\n    isLoading,\r\n    errors,\r\n    user,\r\n    signin,\r\n    signup,\r\n    signout,\r\n    sendPasswordResetEmail,\r\n    confirmPasswordReset,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}