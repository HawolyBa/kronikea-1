{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\"; //import Loader from \"../../components/common/Loader\";\n\nimport StoryForm from \"../../components/forms/StoryForm\";\nimport RedirectAuth from \"../../components/hoc/RedirectAuth\";\n\nconst NewStory = props => {\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const [mature, setMature] = React.useState(false);\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      mature\n    });\n  }, [mature]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      public: visibility\n    });\n  }, [visibility]);\n\n  const submit = values => {\n    delete values.currentChar;\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\"\n    }));\n  };\n\n  return __jsx(RedirectAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(StoryForm, {\n    type: \"add\",\n    submit: submit,\n    characters: props.characters,\n    loading: props.loading,\n    storyId: props.storyId,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  confirmMessage: state.stories.message,\n  storyId: state.stories.storyId,\n  loading: state.stories.loadingStory\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  addStory\n})(NewStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Form","connect","useRouter","useAuth","getUserCharacters","addStory","StoryForm","RedirectAuth","NewStory","props","auth","form","useForm","router","mature","setMature","useState","visibility","setVisibility","useEffect","user","setFieldsValue","public","submit","values","currentChar","authorName","username","banner","getFieldValue","characters","loading","storyId","mapStateToProps","state","userCharacters","confirmMessage","stories","message","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\n//import Loader from \"../../components/common/Loader\";\r\nimport StoryForm from \"../../components/forms/StoryForm\";\r\nimport RedirectAuth from \"../../components/hoc/RedirectAuth\";\r\n\r\nconst NewStory = (props) => {\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ mature });\r\n  }, [mature]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    props.addStory({\r\n      ...values,\r\n      authorName: auth.user.username,\r\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <RedirectAuth>\r\n      <StoryForm\r\n        type=\"add\"\r\n        submit={submit}\r\n        characters={props.characters}\r\n        loading={props.loading}\r\n        storyId={props.storyId}\r\n        form={form}\r\n        mature={mature}\r\n        setMature={setMature}\r\n        visibility={visibility}\r\n        setVisibility={setVisibility}\r\n      />\r\n    </RedirectAuth>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}