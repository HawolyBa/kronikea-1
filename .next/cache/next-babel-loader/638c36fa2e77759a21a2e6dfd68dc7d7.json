{"ast":null,"code":"export const capitalizeFirstLetter = string => string.charAt(0).toUpperCase() + string.slice(1);\nexport const arr_diff = (a1, a2) => {\n  let a = [],\n      diff = [];\n\n  for (let i = 0; i < a1.length; i++) {\n    a[a1[i]] = true;\n  }\n\n  for (let i = 0; i < a2.length; i++) {\n    if (a[a2[i]]) {\n      delete a[a2[i]];\n    } else {\n      a[a2[i]] = true;\n    }\n  }\n\n  for (let k in a) {\n    diff.push(k);\n  }\n\n  return diff;\n};\nexport const onlyUnique = (value, index, self) => {\n  return self.indexOf(value) === index;\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/utils/helpers.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","arr_diff","a1","a2","a","diff","i","length","k","push","onlyUnique","value","index","self","indexOf"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,MAAD,IACnCA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAD5B;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AAClC,MAAIC,CAAC,GAAG,EAAR;AAAA,MACEC,IAAI,GAAG,EADT;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClCF,IAAAA,CAAC,CAACF,EAAE,CAACI,CAAD,CAAH,CAAD,GAAW,IAAX;AACD;;AAED,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIF,CAAC,CAACD,EAAE,CAACG,CAAD,CAAH,CAAL,EAAc;AACZ,aAAOF,CAAC,CAACD,EAAE,CAACG,CAAD,CAAH,CAAR;AACD,KAFD,MAEO;AACLF,MAAAA,CAAC,CAACD,EAAE,CAACG,CAAD,CAAH,CAAD,GAAW,IAAX;AACD;AACF;;AAED,OAAK,IAAIE,CAAT,IAAcJ,CAAd,EAAiB;AACfC,IAAAA,IAAI,CAACI,IAAL,CAAUD,CAAV;AACD;;AAED,SAAOH,IAAP;AACD,CArBM;AAuBP,OAAO,MAAMK,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwB;AAChD,SAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACD,CAFM","sourcesContent":["export const capitalizeFirstLetter = (string) =>\r\n  string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\nexport const arr_diff = (a1, a2) => {\r\n  let a = [],\r\n    diff = [];\r\n\r\n  for (let i = 0; i < a1.length; i++) {\r\n    a[a1[i]] = true;\r\n  }\r\n\r\n  for (let i = 0; i < a2.length; i++) {\r\n    if (a[a2[i]]) {\r\n      delete a[a2[i]];\r\n    } else {\r\n      a[a2[i]] = true;\r\n    }\r\n  }\r\n\r\n  for (let k in a) {\r\n    diff.push(k);\r\n  }\r\n\r\n  return diff;\r\n};\r\n\r\nexport const onlyUnique = (value, index, self) => {\r\n  return self.indexOf(value) === index;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}