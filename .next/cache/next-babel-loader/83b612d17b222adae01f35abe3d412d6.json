{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\chapter\\\\Comments.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Comment, Tooltip, Avatar } from \"antd\";\nimport moment from \"moment\";\n\nconst Comments = ({\n  comments\n}) => {\n  const topComments = comments.filter(comm => !comm.answer);\n  const responses = comments.filter(comm => comm.answer);\n  const allComments = topComments.map(comm => {\n    let res = [];\n    responses.forEach(response => {\n      if (response.commentAnsweredId === comm.id) {\n        res.push(response);\n      }\n    });\n    return _objectSpread(_objectSpread({}, comm), {}, {\n      responses: res\n    });\n  });\n  console.log(allComments);\n  return __jsx(\"section\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, comments.length, \" Comments\"), comments.map(comment => {\n    var _comment$responses;\n\n    return __jsx(Comment, {\n      key: comment.id,\n      actions: [__jsx(\"span\", {\n        key: \"comment-basic-reply-to\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"Reply \")],\n      author: __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, comment.username),\n      avatar: __jsx(Avatar, {\n        src: comment.userImage,\n        alt: comment.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }\n      }),\n      content: __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }\n      }, comment.content),\n      datetime: __jsx(Tooltip, {\n        title: typeof comment.createdAt === \"object\" ? moment.unix(comment.createdAt.seconds).format(\"YYYY-MM-DD HH:mm:ss\") : moment(comment.createdAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, typeof comment.createdAt === \"object\" ? moment.unix(comment.createdAt.seconds).fromNow() : moment(comment.createdAt).fromNow())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, (_comment$responses = comment.responses) === null || _comment$responses === void 0 ? void 0 : _comment$responses.map(c => __jsx(Comment, {\n      key: c.id,\n      actions: [__jsx(\"span\", {\n        key: \"comment-basic-reply-to\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, \"Reply \")],\n      author: __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }\n      }, c.username),\n      avatar: __jsx(Avatar, {\n        src: c.userImage,\n        alt: c.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }),\n      content: __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }\n      }, c.content),\n      datetime: __jsx(Tooltip, {\n        title: typeof c.createdAt === \"object\" ? moment.unix(c.createdAt.seconds).format(\"YYYY-MM-DD HH:mm:ss\") : moment(c.createdAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, typeof c.createdAt === \"object\" ? moment.unix(c.createdAt.seconds).fromNow() : moment(c.createdAt).fromNow())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/chapter/Comments.js"],"names":["Comment","Tooltip","Avatar","moment","Comments","comments","topComments","filter","comm","answer","responses","allComments","map","res","forEach","response","commentAnsweredId","id","push","console","log","length","comment","username","userImage","content","createdAt","unix","seconds","format","fromNow","c"],"mappings":"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","sourcesContent":["import { Comment, Tooltip, Avatar } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst Comments = ({ comments }) => {\r\n  const topComments = comments.filter((comm) => !comm.answer);\r\n  const responses = comments.filter((comm) => comm.answer);\r\n  const allComments = topComments.map((comm) => {\r\n    let res = [];\r\n    responses.forEach((response) => {\r\n      if (response.commentAnsweredId === comm.id) {\r\n        res.push(response);\r\n      }\r\n    });\r\n    return { ...comm, responses: res };\r\n  });\r\n  console.log(allComments);\r\n  return (\r\n    <section className=\"comments\">\r\n      <h3>{comments.length} Comments</h3>\r\n      {comments.map((comment) => (\r\n        <Comment\r\n          key={comment.id}\r\n          actions={[<span key=\"comment-basic-reply-to\">Reply </span>]}\r\n          author={<a>{comment.username}</a>}\r\n          avatar={<Avatar src={comment.userImage} alt={comment.username} />}\r\n          content={<p>{comment.content}</p>}\r\n          datetime={\r\n            <Tooltip\r\n              title={\r\n                typeof comment.createdAt === \"object\"\r\n                  ? moment\r\n                      .unix(comment.createdAt.seconds)\r\n                      .format(\"YYYY-MM-DD HH:mm:ss\")\r\n                  : moment(comment.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\r\n              }\r\n            >\r\n              <span>\r\n                {typeof comment.createdAt === \"object\"\r\n                  ? moment.unix(comment.createdAt.seconds).fromNow()\r\n                  : moment(comment.createdAt).fromNow()}\r\n              </span>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          {comment.responses?.map((c) => (\r\n            <Comment\r\n              key={c.id}\r\n              actions={[<span key=\"comment-basic-reply-to\">Reply </span>]}\r\n              author={<a>{c.username}</a>}\r\n              avatar={<Avatar src={c.userImage} alt={c.username} />}\r\n              content={<p>{c.content}</p>}\r\n              datetime={\r\n                <Tooltip\r\n                  title={\r\n                    typeof c.createdAt === \"object\"\r\n                      ? moment\r\n                          .unix(c.createdAt.seconds)\r\n                          .format(\"YYYY-MM-DD HH:mm:ss\")\r\n                      : moment(c.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\r\n                  }\r\n                >\r\n                  <span>\r\n                    {typeof c.createdAt === \"object\"\r\n                      ? moment.unix(c.createdAt.seconds).fromNow()\r\n                      : moment(c.createdAt).fromNow()}\r\n                  </span>\r\n                </Tooltip>\r\n              }\r\n            />\r\n          ))}\r\n        </Comment>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}