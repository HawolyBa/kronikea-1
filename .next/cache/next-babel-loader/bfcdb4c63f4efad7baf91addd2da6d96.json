{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\auth\\\\Register.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Form, Input } from \"antd\";\n\nconst Register = ({\n  email,\n  password,\n  confirmPassword,\n  username,\n  setEmail,\n  setUsername,\n  setPassword,\n  setConfirmPassword,\n  handleClick,\n  signup,\n  auth\n}) => {\n  const [form] = Form.useForm();\n\n  const submit = values => {};\n\n  return __jsx(\"div\", {\n    className: \"inner-auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Welcome to Kronikea\"), __jsx(Form, {\n    onFinish: submit,\n    layout: \"vertical\",\n    form: form,\n    initialValues: {\n      password: \"\",\n      email: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"email\",\n    label: \"Email Address\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"This is not valid E-mail!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), auth.errors.email && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, auth.errors.email))), __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    label: \"Username\",\n    rules: [{\n      required: true,\n      message: \"A username is required\"\n    }, {\n      max: 15,\n      type: \"string\",\n      message: \"Your username cannot exceed 15 characters\"\n    }, {\n      min: 4,\n      type: \"string\",\n      message: \"Your username needs to be at least 4 characters long\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), auth.errors.username && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, auth.errors.username))), __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: \"A password is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), auth.errors.password && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, auth.errors.password))), __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"confirmpassword\",\n    label: \"Confirm Password\",\n    rules: [{\n      required: true,\n      message: \"Please confirm your password!\"\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(_, value) {\n        if (!value || getFieldValue(\"password\") === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(new Error(\"The two passwords that you entered do not match!\"));\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })), auth.errors.confirmPassword && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, auth.errors.confirmPassword)))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"login-btn custom-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Register\"))), __jsx(\"p\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, \"Already have an account ? Login here\"));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/auth/Register.js"],"names":["React","Row","Col","Form","Input","Register","email","password","confirmPassword","username","setEmail","setUsername","setPassword","setConfirmPassword","handleClick","signup","auth","form","useForm","submit","values","required","type","message","errors","max","min","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Form, Input } from \"antd\";\r\n\r\nconst Register = ({\r\n  email,\r\n  password,\r\n  confirmPassword,\r\n  username,\r\n  setEmail,\r\n  setUsername,\r\n  setPassword,\r\n  setConfirmPassword,\r\n  handleClick,\r\n  signup,\r\n  auth,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const submit = (values) => {};\r\n\r\n  return (\r\n    <div className=\"inner-auth\">\r\n      <h2>Welcome to Kronikea</h2>\r\n      <Form\r\n        onFinish={submit}\r\n        layout=\"vertical\"\r\n        form={form}\r\n        initialValues={{ password: \"\", email: \"\" }}\r\n      >\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"email\",\r\n                  message: \"This is not valid E-mail!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            {auth.errors.email && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.email}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A username is required\",\r\n                },\r\n                {\r\n                  max: 15,\r\n                  type: \"string\",\r\n                  message: \"Your username cannot exceed 15 characters\",\r\n                },\r\n                {\r\n                  min: 4,\r\n                  type: \"string\",\r\n                  message:\r\n                    \"Your username needs to be at least 4 characters long\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            {auth.errors.username && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.username}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A password is required\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            {auth.errors.password && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.password}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"confirmpassword\"\r\n              label=\"Confirm Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please confirm your password!\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      )\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            {auth.errors.confirmPassword && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.confirmPassword}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <button type=\"submit\" className=\"login-btn custom-btn\">\r\n          <span>Register</span>\r\n        </button>\r\n      </Form>\r\n      {/* <form className=\"auth-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              className=\"form-input\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n            />\r\n            <div className=\"input-group__icon\">\r\n              <ion-icon name=\"mail\"></ion-icon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              value={username}\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n            />\r\n            <div className=\"input-group__icon\">\r\n              <ion-icon name=\"person\"></ion-icon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              className=\"form-input\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n            />\r\n            <div className=\"input-group__icon\">\r\n              <ion-icon name=\"key\"></ion-icon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n              className=\"form-input\"\r\n              type=\"password\"\r\n              id=\"confirm-password\"\r\n            />\r\n            <div className=\"input-group__icon\">\r\n              <ion-icon name=\"key\"></ion-icon>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-btn custom-btn\" onClick={signup}>\r\n          <span>Create account</span>\r\n        </div>\r\n      </form> */}\r\n      <p onClick={handleClick}>Already have an account ? Login here</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}