{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Result, Button, Form } from \"antd\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport Loader from \"../../../../components/common/Loader\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\n\nconst NewChapter = props => {\n  const router = useRouter();\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  const {\n    characters,\n    storyExists,\n    loading,\n    story\n  } = props;\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  const [value, setValue] = React.useState([]);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n  }, []);\n\n  const submit = values => {\n    console.log(values);\n  };\n\n  return !loading ? storyExists ? story.authorId === auth.user.uid ? __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: newValue => setValue(newValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Editable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })))) : __jsx(Result, {\n    status: \"403\",\n    title: \"403\",\n    subTitle: \"Sorry, you are not authorized to access this page.\",\n    extra: __jsx(Button, {\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }, \"Back Home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : __jsx(Result, {\n    status: \"404\",\n    title: \"404\",\n    subTitle: \"Sorry, the page you visited does not exist.\",\n    extra: __jsx(Button, {\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, \"Back Home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }) : __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  story: state.stories.story\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  getStory\n})(NewChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","connect","Result","Button","Form","createEditor","Slate","Editable","withReact","useRouter","useAuth","getStory","getUserCharacters","Loader","ChapterForm","NewChapter","props","router","auth","form","useForm","characters","storyExists","loading","story","editor","useMemo","value","setValue","useState","useEffect","user","query","id","submit","values","console","log","authorId","uid","newValue","mapStateToProps","state","userCharacters","stories"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Result, Button, Form } from \"antd\";\r\nimport { createEditor } from \"slate\";\r\nimport { Slate, Editable, withReact } from \"slate-react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport { getStory } from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\nimport Loader from \"../../../../components/common/Loader\";\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\n\r\nconst NewChapter = (props) => {\r\n  const router = useRouter();\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const { characters, storyExists, loading, story } = props;\r\n  const editor = React.useMemo(() => withReact(createEditor()), []);\r\n\r\n  const [value, setValue] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n  }, []);\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return !loading ? (\r\n    storyExists ? (\r\n      story.authorId === auth.user.uid ? (\r\n        <div className=\"custom-form\">\r\n          <div className=\"inner\">\r\n            <h2 className=\"side-heading\">Add a new chapter</h2>\r\n            <ChapterForm submit={submit} form={form} />\r\n            <Slate\r\n              editor={editor}\r\n              value={value}\r\n              onChange={(newValue) => setValue(newValue)}\r\n            >\r\n              <Editable />\r\n            </Slate>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Result\r\n          status=\"403\"\r\n          title=\"403\"\r\n          subTitle=\"Sorry, you are not authorized to access this page.\"\r\n          extra={<Button type=\"primary\">Back Home</Button>}\r\n        />\r\n      )\r\n    ) : (\r\n      <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={<Button type=\"primary\">Back Home</Button>}\r\n      />\r\n    )\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  story: state.stories.story,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserCharacters,\r\n  getStory,\r\n})(NewChapter);\r\n"]},"metadata":{},"sourceType":"module"}