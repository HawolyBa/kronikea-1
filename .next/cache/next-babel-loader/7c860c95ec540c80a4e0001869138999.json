{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Tags.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Tag, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar Tags = function Tags() {\n  _s();\n\n  var inputButton = React.useRef(null);\n  var editInputButton = React.useRef(null);\n\n  var _React$useState = React.useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tags = _React$useState2[0],\n      setTags = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputVisible = _React$useState4[0],\n      setInputVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputValue = _React$useState6[0],\n      setInputValue = _React$useState6[1];\n\n  var _React$useState7 = React.useState(-1),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      editInputIndex = _React$useState8[0],\n      setEditInputIndex = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      editInputValue = _React$useState10[0],\n      setEditInputValue = _React$useState10[1];\n\n  var handleClose = function handleClose(removedTag) {\n    return setTags(tags.filter(function (tag) {\n      return tags !== removedTag;\n    }));\n  };\n\n  var showInput = function showInput() {\n    setInputVisible(true);\n    console.log(editInputButton.focus()); //inputButton.current.focus();\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    return setInputValue(e.target.value);\n  };\n\n  var handleInputConfirm = function handleInputConfirm() {\n    var newTags = tags;\n\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [].concat(_toConsumableArray(newTags), [inputValue]);\n    }\n\n    setTags(tags);\n    setInputValue(\"\");\n    setInputVisible(false);\n  };\n\n  var handleEditInputChange = function handleEditInputChange(e) {\n    return setEditInputValue(e.target.value);\n  };\n\n  var handleEditInputConfirm = function handleEditInputConfirm() {\n    var newTags = _toConsumableArray(tags);\n\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  return __jsx(React.Fragment, null, tags === null || tags === void 0 ? void 0 : tags.map(function (tag, i) {\n    if (editInputIndex === i) {\n      return __jsx(\"input\", {\n        key: i,\n        onChange: handleEditInputChange,\n        onBlur: handleEditInputConfirm,\n        onPressEnter: handleEditInputConfirm,\n        value: editInputValue,\n        ref: editInputButton,\n        className: \"form-input\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      });\n    }\n\n    var isLongTag = tag.length > 20;\n\n    var TagElem = __jsx(Tag, {\n      onClose: function onClose() {\n        return handleClose(tag);\n      },\n      closable: i !== 0,\n      key: tag,\n      className: \"edit-tag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      onDoubleClick: function onDoubleClick(e) {\n        if (i !== 0) {\n          setEditInputIndex(i);\n          setEditInputValue(tag);\n          editInputButton.focus();\n          e.preventDefault();\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag));\n\n    return isLongTag ? __jsx(Tooltip, {\n      title: tag,\n      key: tag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, TagElem) : TagElem;\n  }), inputVisible && __jsx(\"input\", {\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onPressEnter: handleInputConfirm,\n    value: inputValue,\n    type: \"text\",\n    ref: inputButton,\n    className: \"form-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: showInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), \" New Tag\"));\n};\n\n_s(Tags, \"Tk7UyboWwRYGMOiPKcNApuvmCyw=\");\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Tags.js"],"names":["Tag","Tooltip","PlusOutlined","Tags","inputButton","React","useRef","editInputButton","useState","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","handleClose","removedTag","filter","tag","showInput","console","log","focus","handleInputChange","e","target","value","handleInputConfirm","newTags","indexOf","handleEditInputChange","handleEditInputConfirm","map","i","isLongTag","length","TagElem","preventDefault","slice"],"mappings":"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","sourcesContent":["import { Tag, Tooltip } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Tags = () => {\r\n  const inputButton = React.useRef(null);\r\n  const editInputButton = React.useRef(null);\r\n  const [tags, setTags] = React.useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]);\r\n  const [inputVisible, setInputVisible] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [editInputIndex, setEditInputIndex] = React.useState(-1);\r\n  const [editInputValue, setEditInputValue] = React.useState(\"\");\r\n\r\n  const handleClose = (removedTag) =>\r\n    setTags(tags.filter((tag) => tags !== removedTag));\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n    console.log(editInputButton.focus());\r\n    //inputButton.current.focus();\r\n  };\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n  const handleInputConfirm = () => {\r\n    let newTags = tags;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      newTags = [...newTags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    setInputValue(\"\");\r\n    setInputVisible(false);\r\n  };\r\n\r\n  const handleEditInputChange = (e) => setEditInputValue(e.target.value);\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setTags(newTags);\r\n    setEditInputIndex(-1);\r\n    setEditInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tags?.map((tag, i) => {\r\n        if (editInputIndex === i) {\r\n          return (\r\n            <input\r\n              key={i}\r\n              onChange={handleEditInputChange}\r\n              onBlur={handleEditInputConfirm}\r\n              onPressEnter={handleEditInputConfirm}\r\n              value={editInputValue}\r\n              ref={editInputButton}\r\n              className=\"form-input\"\r\n            />\r\n          );\r\n        }\r\n        const isLongTag = tag.length > 20;\r\n        const TagElem = (\r\n          <Tag\r\n            onClose={() => handleClose(tag)}\r\n            closable={i !== 0}\r\n            key={tag}\r\n            className=\"edit-tag\"\r\n          >\r\n            <span\r\n              onDoubleClick={(e) => {\r\n                if (i !== 0) {\r\n                  setEditInputIndex(i);\r\n                  setEditInputValue(tag);\r\n                  editInputButton.focus();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n            >\r\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {TagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          TagElem\r\n        );\r\n      })}\r\n      {inputVisible && (\r\n        <input\r\n          onChange={handleInputChange}\r\n          onBlur={handleInputConfirm}\r\n          onPressEnter={handleInputConfirm}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          ref={inputButton}\r\n          className=\"form-input\"\r\n        />\r\n      )}\r\n      {!inputVisible && (\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined /> New Tag\r\n        </Tag>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}