{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Select.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Col, Popover, Select, Form } from \"antd\";\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\nvar Option = Select.Option;\n\nvar SelectGroup = function SelectGroup(_ref) {\n  var xs = _ref.xs,\n      lg = _ref.lg,\n      sm = _ref.sm,\n      md = _ref.md,\n      name = _ref.name,\n      options = _ref.options,\n      info = _ref.info,\n      value = _ref.value,\n      onChangeFunc = _ref.onChangeFunc,\n      storyInfo = _ref.storyInfo,\n      type = _ref.type;\n  return __jsx(Col, {\n    xs: xs,\n    sm: sm,\n    md: md,\n    lg: lg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    label: info ? __jsx(React.Fragment, null, \"capitalizeFirstLetter(name)\", __jsx(Popover, {\n      title: info,\n      trigger: \"click\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, __jsx(\"ion-icon\", {\n      name: \"information-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }))) : capitalizeFirstLetter(name),\n    colon: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"genre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), type === \"multiple\" ? __jsx(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    value: value,\n    onChange: function onChange(val) {\n      return onChangeFunc(_objectSpread(_objectSpread({}, storyInfo), {}, _defineProperty({}, name, val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (option) {\n    return __jsx(Option, {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, option.name);\n  })) : __jsx(Select, {\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    value: value,\n    onChange: function onChange(val) {\n      return onChangeFunc(_objectSpread(_objectSpread({}, storyInfo), {}, _defineProperty({}, name, val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (option) {\n    return __jsx(Option, {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, option.name);\n  })))));\n};\n\n_c = SelectGroup;\nexport default SelectGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectGroup\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Select.js"],"names":["Col","Popover","Select","Form","capitalizeFirstLetter","Option","SelectGroup","xs","lg","sm","md","name","options","info","value","onChangeFunc","storyInfo","type","width","val","sort","a","b","keyA","keyB","map","option","textTransform"],"mappings":"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","sourcesContent":["import { Col, Popover, Select, Form } from \"antd\";\r\n\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectGroup = ({\r\n  xs,\r\n  lg,\r\n  sm,\r\n  md,\r\n  name,\r\n  options,\r\n  info,\r\n  value,\r\n  onChangeFunc,\r\n  storyInfo,\r\n  type,\r\n}) => {\r\n  return (\r\n    <Col xs={xs} sm={sm} md={md} lg={lg}>\r\n      <Form.Item\r\n        label={\r\n          info ? (\r\n            <>\r\n              capitalizeFirstLetter(name)\r\n              <Popover title={info} trigger=\"click\">\r\n                <ion-icon name=\"information-circle\"></ion-icon>\r\n              </Popover>\r\n            </>\r\n          ) : (\r\n            capitalizeFirstLetter(name)\r\n          )\r\n        }\r\n        colon={false}\r\n      >\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"genre\"></label>\r\n          {type === \"multiple\" ? (\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={value}\r\n              onChange={(val) => onChangeFunc({ ...storyInfo, [name]: val })}\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          ) : (\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              value={value}\r\n              onChange={(val) => onChangeFunc({ ...storyInfo, [name]: val })}\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          )}\r\n        </div>\r\n      </Form.Item>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SelectGroup;\r\n"]},"metadata":{},"sourceType":"module"}