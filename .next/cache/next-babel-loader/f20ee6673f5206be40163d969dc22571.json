{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\ImageRow.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Form } from \"antd\";\nimport isImageUrl from \"is-image-url\";\nimport UploadImage from \"./UploadImage\";\n\nvar ImageRow = function ImageRow(_ref) {\n  _s();\n\n  var form = _ref.form,\n      itemImage = _ref.itemImage;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      linkVisible = _React$useState2[0],\n      setLinkVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      uploadVisible = _React$useState4[0],\n      setUploadVisible = _React$useState4[1];\n\n  var showLink = function showLink() {\n    form.setFieldsValue({\n      banner: null\n    });\n    setLinkVisible(true);\n    setUploadVisible(false);\n  };\n\n  var showUpload = function showUpload() {\n    form.setFieldsValue({\n      banner: null\n    });\n    setLinkVisible(false);\n    setUploadVisible(true);\n  };\n\n  return __jsx(React.Fragment, null, !uploadVisible && !linkVisible && __jsx(\"div\", {\n    className: \"upload-btns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: showUpload,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Upload a cover\"), __jsx(\"button\", {\n    onClick: showLink,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Submit a link to a cover\")), uploadVisible && __jsx(Row, {\n    align: \"bottom\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(UploadImage, {\n    form: form,\n    image: itemImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    onClick: showLink,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"OR Submit a link to a cover\"))), linkVisible && __jsx(Row, {\n    align: \"bottom\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    md: 12,\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    rules: [{\n      type: \"url\",\n      message: \"This field must be a valid url.\"\n    }, function () {\n      return {\n        validator: function validator(_, value) {\n          if (isImageUrl(value)) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(\"The link needs to be an image\"));\n        }\n      };\n    }],\n    label: \"Submit a link to your image\",\n    name: \"banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))), __jsx(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    onClick: showUpload,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Upload a cover\"))));\n};\n\n_s(ImageRow, \"TmHLsTLYevPxM24pOos9grSnNlA=\");\n\n_c = ImageRow;\nexport default ImageRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageRow\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/ImageRow.js"],"names":["React","Row","Col","Form","isImageUrl","UploadImage","ImageRow","form","itemImage","useState","linkVisible","setLinkVisible","uploadVisible","setUploadVisible","showLink","setFieldsValue","banner","showUpload","type","message","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Form } from \"antd\";\r\nimport isImageUrl from \"is-image-url\";\r\n\r\nimport UploadImage from \"./UploadImage\";\r\n\r\nconst ImageRow = ({ form, itemImage }) => {\r\n  const [linkVisible, setLinkVisible] = React.useState(false);\r\n  const [uploadVisible, setUploadVisible] = React.useState(false);\r\n\r\n  const showLink = () => {\r\n    form.setFieldsValue({ banner: null });\r\n    setLinkVisible(true);\r\n    setUploadVisible(false);\r\n  };\r\n\r\n  const showUpload = () => {\r\n    form.setFieldsValue({ banner: null });\r\n    setLinkVisible(false);\r\n    setUploadVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!uploadVisible && !linkVisible && (\r\n        <div className=\"upload-btns\">\r\n          <button onClick={showUpload} type=\"button\" className=\"upload-btn\">\r\n            Upload a cover\r\n          </button>\r\n\r\n          <button onClick={showLink} type=\"button\" className=\"upload-btn\">\r\n            Submit a link to a cover\r\n          </button>\r\n        </div>\r\n      )}\r\n      {uploadVisible && (\r\n        <Row align=\"bottom\" gutter={[24, 24]}>\r\n          <Col md={12} sm={24} xs={24}>\r\n            <UploadImage form={form} image={itemImage} />\r\n          </Col>\r\n          <Col md={12} sm={24} xs={24}>\r\n            <button onClick={showLink} type=\"button\" className=\"upload-btn\">\r\n              OR Submit a link to a cover\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {linkVisible && (\r\n        <Row align=\"bottom\" gutter={[24, 24]}>\r\n          <Col sm={24} xs={24} md={12} lg={12}>\r\n            <Form.Item\r\n              rules={[\r\n                {\r\n                  type: \"url\",\r\n                  message: \"This field must be a valid url.\",\r\n                },\r\n                () => ({\r\n                  validator(_, value) {\r\n                    if (isImageUrl(value)) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\"The link needs to be an image\")\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n              label=\"Submit a link to your image\"\r\n              name=\"banner\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col md={12} sm={24} xs={24}>\r\n            <button onClick={showUpload} type=\"button\" className=\"upload-btn\">\r\n              Upload a cover\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageRow;\r\n"]},"metadata":{},"sourceType":"module"}