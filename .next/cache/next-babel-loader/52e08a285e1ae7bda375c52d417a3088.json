{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../components/forms/CharacterForm\";\n\nvar newCharacter = function newCharacter(props) {\n  _s();\n\n  var characters = props.characters;\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibility = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      \"public\": visibility\n    });\n  }, [visibility]);\n\n  var onFailed = function onFailed() {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  var submit = function submit(values) {\n    console.log(values);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"new-character custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), __jsx(CharacterForm, {\n    submit: submit,\n    onFailed: onFailed,\n    form: form,\n    characters: characters,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(newCharacter, \"pL6o6Z6HDJ/dLc3jcvtzhjaaswk=\", false, function () {\n  return [useAuth, Form.useForm];\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters\n})(newCharacter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/new.js"],"names":["React","Form","message","connect","useAuth","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","newCharacter","props","characters","auth","useForm","form","useState","visibility","setVisibility","useEffect","user","uid","setFieldsValue","onFailed","window","scrollTo","error","submit","values","console","log","isLoading","mapStateToProps","state","userCharacters"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AAEA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,MACtBC,UADsB,GACPD,KADO,CACtBC,UADsB;AAE9B,MAAMC,IAAI,GAAGR,OAAO,EAApB;;AAF8B,sBAGfH,IAAI,CAACY,OAAL,EAHe;AAAA;AAAA,MAGvBC,IAHuB;;AAAA,wBAKMd,KAAK,CAACe,QAAN,CAAe,IAAf,CALN;AAAA;AAAA,MAKvBC,UALuB;AAAA,MAKXC,aALW;;AAO9BjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,QAAIN,IAAI,CAACO,IAAT,EAAe;AACbT,MAAAA,KAAK,CAACL,iBAAN,CAAwBO,IAAI,CAACO,IAAL,CAAUC,GAAlC;AACD;AACF,GAJD,EAIG,CAACR,IAAD,CAJH;AAMAZ,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpBJ,IAAAA,IAAI,CAACO,cAAL,CAAoB;AAAE,gBAAQL;AAAV,KAApB;AACD,GAFD,EAEG,CAACA,UAAD,CAFH;;AAIA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAtB,IAAAA,OAAO,CAACuB,KAAR,CAAc,uBAAd;AACD,GAHD;;AAKA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAIA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEf,IAAI,CAACkB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAElB,IAAI,CAACO,IAA9B;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEO,MADV;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,IAAI,EAAER,IAHR;AAIE,IAAA,UAAU,EAAEH,UAJd;AAKE,IAAA,UAAU,EAAEK,UALd;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF,CADF;AAmBD,CA7CD;;GAAMR,Y;UAESL,O,EACEH,IAAI,CAACY,O;;;AA4CtB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCrB,IAAAA,UAAU,EAAEqB,KAAK,CAACrB,UAAN,CAAiBsB;AADK,GAAZ;AAAA,CAAxB;;AAIA,eAAe9B,OAAO,CAAC4B,eAAD,EAAkB;AAAE1B,EAAAA,iBAAiB,EAAjBA;AAAF,CAAlB,CAAP,CAAgDI,YAAhD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../components/forms/CharacterForm\";\r\n\r\nconst newCharacter = (props) => {\r\n  const { characters } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <div className=\"new-character custom-form\">\r\n          <div className=\"inner\">\r\n            <h2 className=\"side-heading\">Add a new character</h2>\r\n            <CharacterForm\r\n              submit={submit}\r\n              onFailed={onFailed}\r\n              form={form}\r\n              characters={characters}\r\n              visibility={visibility}\r\n              setVisibility={setVisibility}\r\n            />\r\n          </div>\r\n        </div>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters })(newCharacter);\r\n"]},"metadata":{},"sourceType":"module"}