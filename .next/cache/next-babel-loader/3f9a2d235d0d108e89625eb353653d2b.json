{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Pagination as Paginate, Divider, Form } from \"antd\";\nimport { StoriesGrid } from \"./Grid\";\nimport SortInput from \"../profile/SortInput\";\n\nvar Pagination = function Pagination(_ref) {\n  _s();\n\n  var data = _ref.data,\n      xs = _ref.xs,\n      sm = _ref.sm,\n      lg = _ref.lg,\n      xl = _ref.xl,\n      md = _ref.md,\n      type = _ref.type,\n      gutter = _ref.gutter,\n      columnsCountBreakPoints = _ref.columnsCountBreakPoints,\n      itemType = _ref.itemType;\n\n  var _React$useState = React.useState({\n    currentPage: 1,\n    datasPerPage: 12\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pagination = _React$useState2[0],\n      setPagination = _React$useState2[1];\n\n  var currentPage = pagination.currentPage,\n      datasPerPage = pagination.datasPerPage;\n  var indexOfLastData = currentPage * datasPerPage;\n  var indexOfFirstData = indexOfLastData - datasPerPage;\n\n  var _React$useState3 = React.useState(data.slice(indexOfFirstData, indexOfLastData)),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentDatas = _React$useState4[0],\n      setCurrentDatas = _React$useState4[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _React$useState5 = React.useState(\"date-asc\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      value = _React$useState6[0],\n      setValue = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (value === \"date-asc\") {\n      setCurrentDatas(currentDatas.sort(function (a, b) {\n        return typeof a.createdAt === \"object\" ? new Date(a.createdAt.seconds * 1000) - new Date(b.createdAt.seconds * 1000) : new Date(a.createdAt) - new Date(b.createdAt);\n      }));\n    } else if (value === \"date-desc\") {\n      setCurrentDatas(currentDatas.sort(function (a, b) {\n        return typeof a.createdAt === \"object\" ? new Date(b.createdAt.seconds * 1000) - new Date(a.createdAt.seconds * 1000) : new Date(b.createdAt) - new Date(a.createdAt);\n      }));\n    } else if (value === \"name-desc\") {\n      setCurrentDatas(currentDatas.sort(function (a, b) {\n        var keyA = a.title,\n            keyB = b.title;\n        if (keyA > keyB) return -1;\n        if (keyA < keyB) return 1;\n        return 0;\n      }));\n    } else if (value === \"name-asc\") {\n      setCurrentDatas(currentDatas.sort(function (a, b) {\n        var keyA = a.title,\n            keyB = b.title;\n        if (keyA < keyB) return -1;\n        if (keyA > keyB) return 1;\n        return 0;\n      }));\n    }\n  }, [value]);\n\n  var handleClick = function handleClick(e) {\n    return setPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n      currentPage: Number(e)\n    }));\n  };\n\n  var renderDatas = itemType === \"stories\" ? __jsx(StoriesGrid, {\n    gutter: gutter,\n    type: type,\n    stories: currentDatas,\n    columnsCountBreakPoints: columnsCountBreakPoints,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }) : null;\n  var pageNumbers = [];\n\n  for (var i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"ctrl-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(Paginate, {\n    size: \"small\",\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: function showTotal(total, range) {\n      return \"\".concat(range[0], \"-\").concat(range[1], \" of \").concat(total, \" items\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), __jsx(SortInput, {\n    setValue: setValue,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), renderDatas, __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), __jsx(Paginate, {\n    size: \"small\",\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: function showTotal(total, range) {\n      return \"\".concat(range[0], \"-\").concat(range[1], \" of \").concat(total, \" items\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Pagination, \"xsXAOpLEJdDjMjoxV50RjGhpDgk=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Pagination.js"],"names":["React","Pagination","Paginate","Divider","Form","StoriesGrid","SortInput","data","xs","sm","lg","xl","md","type","gutter","columnsCountBreakPoints","itemType","useState","currentPage","datasPerPage","pagination","setPagination","indexOfLastData","indexOfFirstData","slice","currentDatas","setCurrentDatas","useForm","form","value","setValue","useEffect","sort","a","b","createdAt","Date","seconds","keyA","title","keyB","handleClick","e","Number","renderDatas","pageNumbers","i","Math","ceil","length","push","total","range"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Pagination as Paginate, Divider, Form } from \"antd\";\r\n\r\nimport { StoriesGrid } from \"./Grid\";\r\nimport SortInput from \"../profile/SortInput\";\r\n\r\nconst Pagination = ({\r\n  data,\r\n  xs,\r\n  sm,\r\n  lg,\r\n  xl,\r\n  md,\r\n  type,\r\n  gutter,\r\n  columnsCountBreakPoints,\r\n  itemType,\r\n}) => {\r\n  const [pagination, setPagination] = React.useState({\r\n    currentPage: 1,\r\n    datasPerPage: 12,\r\n  });\r\n  const { currentPage, datasPerPage } = pagination;\r\n  const indexOfLastData = currentPage * datasPerPage;\r\n  const indexOfFirstData = indexOfLastData - datasPerPage;\r\n  const [currentDatas, setCurrentDatas] = React.useState(\r\n    data.slice(indexOfFirstData, indexOfLastData)\r\n  );\r\n  const [form] = Form.useForm();\r\n  const [value, setValue] = React.useState(\"date-asc\");\r\n\r\n  React.useEffect(() => {\r\n    if (value === \"date-asc\") {\r\n      setCurrentDatas(\r\n        currentDatas.sort((a, b) => {\r\n          return typeof a.createdAt === \"object\"\r\n            ? new Date(a.createdAt.seconds * 1000) -\r\n                new Date(b.createdAt.seconds * 1000)\r\n            : new Date(a.createdAt) - new Date(b.createdAt);\r\n        })\r\n      );\r\n    } else if (value === \"date-desc\") {\r\n      setCurrentDatas(\r\n        currentDatas.sort((a, b) => {\r\n          return typeof a.createdAt === \"object\"\r\n            ? new Date(b.createdAt.seconds * 1000) -\r\n                new Date(a.createdAt.seconds * 1000)\r\n            : new Date(b.createdAt) - new Date(a.createdAt);\r\n        })\r\n      );\r\n    } else if (value === \"name-desc\") {\r\n      setCurrentDatas(\r\n        currentDatas.sort((a, b) => {\r\n          const keyA = a.title,\r\n            keyB = b.title;\r\n\r\n          if (keyA > keyB) return -1;\r\n          if (keyA < keyB) return 1;\r\n          return 0;\r\n        })\r\n      );\r\n    } else if (value === \"name-asc\") {\r\n      setCurrentDatas(\r\n        currentDatas.sort((a, b) => {\r\n          const keyA = a.title,\r\n            keyB = b.title;\r\n          if (keyA < keyB) return -1;\r\n          if (keyA > keyB) return 1;\r\n          return 0;\r\n        })\r\n      );\r\n    }\r\n  }, [value]);\r\n\r\n  const handleClick = (e) =>\r\n    setPagination({ ...pagination, currentPage: Number(e) });\r\n\r\n  const renderDatas =\r\n    itemType === \"stories\" ? (\r\n      <StoriesGrid\r\n        gutter={gutter}\r\n        type={type}\r\n        stories={currentDatas}\r\n        columnsCountBreakPoints={columnsCountBreakPoints}\r\n      />\r\n    ) : null;\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"ctrl-section\">\r\n        <Paginate\r\n          size=\"small\"\r\n          showQuickJumper\r\n          onChange={handleClick}\r\n          total={data.length}\r\n          pageSize={datasPerPage}\r\n          showTotal={(total, range) =>\r\n            `${range[0]}-${range[1]} of ${total} items`\r\n          }\r\n        />\r\n        <SortInput setValue={setValue} form={form} />\r\n      </div>\r\n      <div></div>\r\n      <Divider />\r\n      {renderDatas}\r\n      <Divider />\r\n      <Paginate\r\n        size=\"small\"\r\n        showQuickJumper\r\n        onChange={handleClick}\r\n        total={data.length}\r\n        pageSize={datasPerPage}\r\n        showTotal={(total, range) =>\r\n          `${range[0]}-${range[1]} of ${total} items`\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}