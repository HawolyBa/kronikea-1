{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Space, Divider, Form, Spin, message, Input, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { CATEGORIES, COPYRIGHTS, LANGUAGES, STATUS } from \"../../utils/constants\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport InputGroup from \"../../components/common/Input\";\nimport SelectGroup from \"../../components/common/Select\";\nimport Tags from \"../../components/forms/Tags\";\nimport UploadImage from \"../../components/forms/UploadImage\";\nimport Loader from \"../../components/common/Loader\";\nimport RadioButton from \"../../components/forms/RadioButton\";\nvar Option = Select.Option;\n\nvar NewStory = function NewStory(props) {\n  _s();\n\n  var _form$getFieldValue3, _props$characters$fil;\n\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      image = _React$useState2[0],\n      setImage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      linkVisible = _React$useState4[0],\n      setLinkVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      uploadVisible = _React$useState6[0],\n      setUploadVisible = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentChar = _React$useState8[0],\n      setCurrentChar = _React$useState8[1];\n\n  var addCharacter = function addCharacter() {\n    var _form$getFieldValue, _form$getFieldValue2;\n\n    if (currentChar && ((_form$getFieldValue = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.indexOf(currentChar)) === -1 && ((_form$getFieldValue2 = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.length) < 5) {\n      form.setFieldsValue({\n        mainCharacters: [].concat(_toConsumableArray(form.getFieldValue(\"mainCharacters\")), [currentChar])\n      });\n    }\n\n    setCurrentChar(\"\");\n    form.setFieldsValue({\n      currentChar: \"\"\n    });\n    console.log(form.getFieldValue(\"mainCharacters\"));\n  };\n\n  var submit = function submit(values) {\n    console.log(values);\n  };\n\n  var onFailed = function onFailed(error) {\n    var errorName = error.errorFields[0].name.toString();\n    form.scrollToField(errorName); //message.error(\"There are errors\");\n  };\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      tags: []\n    });\n    form.setFieldsValue({\n      mainCharacters: []\n    });\n    form.setFieldsValue({\n      mature: false\n    });\n    form.setFieldsValue({\n      \"public\": true\n    }); // form.setFieldsValue({ currentChar: \"\" });\n  }, []);\n\n  var filterSort = function filterSort(a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  };\n\n  var showLink = function showLink() {\n    setLinkVisible(true);\n    setUploadVisible(false);\n  };\n\n  var showUpload = function showUpload() {\n    setLinkVisible(false);\n    setUploadVisible(true);\n  };\n\n  console.log(linkVisible, uploadVisible);\n  return __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Add a new story\"), __jsx(Form, {\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    onFinishFailed: onFailed,\n    onFinish: submit,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    md: 18,\n    lg: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    colon: false,\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: \"A title is required\"\n    }, {\n      max: 65\n    }],\n    label: \"Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }))), __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    lg: 6,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"categories\",\n    label: \"Categories\",\n    rules: [{\n      required: true,\n      message: \"At least 1 category is required\"\n    }, {\n      max: 2,\n      type: \"array\",\n      message: \"You can only select up to 2 categories\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    maxTagCount: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, CATEGORIES === null || CATEGORIES === void 0 ? void 0 : CATEGORIES.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (cat) {\n    return __jsx(Option, {\n      value: cat.value,\n      key: cat.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, cat.name);\n  }))))), __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"language\",\n    label: \"Language\",\n    rules: [{\n      required: true,\n      message: \"A language is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    filterSort: filterSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, LANGUAGES === null || LANGUAGES === void 0 ? void 0 : LANGUAGES.map(function (lang) {\n    return __jsx(Option, {\n      value: lang.value,\n      key: lang.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, lang.name);\n  })))), __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"status\",\n    label: \"Status\",\n    rules: [{\n      required: true,\n      message: \"A status is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, STATUS.map(function (stat) {\n    return __jsx(Option, {\n      value: stat.value,\n      key: stat.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, stat.name);\n  })))), __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"copyright\",\n    label: \"Copyright\",\n    rules: [{\n      required: true,\n      message: \"A copyright is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, COPYRIGHTS.map(function (copy) {\n    return __jsx(Option, {\n      value: copy.value,\n      key: copy.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, copy.name);\n  }))))), __jsx(Form.Item, {\n    label: \"Summary\",\n    name: \"summary\",\n    rules: [{\n      max: 180,\n      message: \"Your summary cannot exceed 180 characters\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, __jsx(Input.TextArea, {\n    autoSize: {\n      minRows: 5\n    },\n    showCount: true,\n    maxLength: 180,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    justify: \"space-between\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, __jsx(RadioButton, {\n    lg: 4,\n    sm: 12,\n    xs: 24,\n    md: 8,\n    name: \"public\",\n    label: \"Visibility\",\n    num1: \"3\",\n    num2: \"4\",\n    label1: \"Public\",\n    label2: \"Private\",\n    defaultValue: form.getFieldValue(\"public\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }), __jsx(RadioButton, {\n    lg: 4,\n    sm: 12,\n    xs: 24,\n    md: 8,\n    name: \"mature\",\n    label: \"Mature content ?\",\n    num1: \"1\",\n    num2: \"2\",\n    label1: \"Yes\",\n    label2: \"No\",\n    defaultValue: form.getFieldValue(\"mature\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }), __jsx(Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"tags\",\n    className: \"tags-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \"Tags\"), __jsx(Tags, {\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }), __jsx(Form.Item, {\n    name: \"mainCharacters\",\n    label: \"Main Characters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Item, {\n    name: \"currentChar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, __jsx(Select, {\n    disabled: ((_form$getFieldValue3 = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue3 === void 0 ? void 0 : _form$getFieldValue3.length) >= 5 ? true : false,\n    onChange: function onChange(val) {\n      return setCurrentChar(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 23\n    }\n  }, __jsx(Option, {\n    value: \"none\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, \"Choose\"), (_props$characters$fil = props.characters.filter(function (c) {\n    var _form$getFieldValue4;\n\n    return ((_form$getFieldValue4 = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue4 === void 0 ? void 0 : _form$getFieldValue4.indexOf(c.id)) === -1;\n  })) === null || _props$characters$fil === void 0 ? void 0 : _props$characters$fil.sort(function (a, b) {\n    var keyA = a.firstname,\n        keyB = b.firstname; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (_char) {\n    return __jsx(Option, {\n      key: _char.id,\n      value: _char.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, \"\".concat(_char.firstname, \" \").concat(_char.lastname));\n  })))), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"select-add-input-iconbox\",\n    onClick: addCharacter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 23\n    }\n  }, \"+\"))), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, \"You can add up to 5 main characters\"))), __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    gutter: [16, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, props.characters.filter(function (c) {\n    var _form$getFieldValue5;\n\n    return ((_form$getFieldValue5 = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue5 === void 0 ? void 0 : _form$getFieldValue5.indexOf(c.id)) !== -1;\n  }).map(function (_char2) {\n    return __jsx(Col, {\n      md: 12,\n      sm: 24,\n      key: _char2.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      key: _char2.id,\n      className: \"main-selected\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"main-avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 27\n      }\n    }, __jsx(\"img\", {\n      src: _char2.image,\n      alt: _char2.firstname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    })), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 27\n      }\n    }, \"\".concat(_char2.firstname, \" \").concat(_char2.lastname), \" \"), __jsx(\"ion-icon\", {\n      onClick: function onClick() {\n        return removeCharacter(_char2.id);\n      },\n      name: \"close-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 27\n      }\n    })));\n  }))))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }), !uploadVisible && !linkVisible && __jsx(\"div\", {\n    className: \"upload-btns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: showUpload,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"Upload a cover\"), __jsx(\"button\", {\n    onClick: showLink,\n    type: \"button\",\n    className: \"upload-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, \"Submit a link to a cover\")), uploadVisible && __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, __jsx(UploadImage, {\n    form: form,\n    image: image,\n    setImage: setImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  })))), linkVisible && __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    md: 12,\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Item, {\n    label: \"Submit a link to your image\",\n    name: \"image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  })))), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};\n\n_s(NewStory, \"ZbPRdJwAL1Gq9Du9aFhWAm0obHk=\", false, function () {\n  return [useAuth, Form.useForm, useRouter];\n});\n\n_c = NewStory;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    confirmMessage: state.stories.message,\n    storyId: state.stories.storyId,\n    loading: state.stories.loadingStory\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  addStory: addStory\n})(NewStory);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewStory\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Row","Col","Space","Divider","Form","Spin","message","Input","Select","connect","useRouter","CATEGORIES","COPYRIGHTS","LANGUAGES","STATUS","useAuth","getUserCharacters","addStory","InputGroup","SelectGroup","Tags","UploadImage","Loader","RadioButton","Option","NewStory","props","auth","useForm","form","router","useState","image","setImage","linkVisible","setLinkVisible","uploadVisible","setUploadVisible","currentChar","setCurrentChar","addCharacter","getFieldValue","indexOf","length","setFieldsValue","mainCharacters","console","log","submit","values","onFailed","error","errorName","errorFields","name","toString","scrollToField","useEffect","user","tags","mature","filterSort","a","b","keyA","keyB","showLink","showUpload","required","max","type","sort","map","cat","value","lang","stat","copy","minRows","val","characters","filter","c","id","firstname","char","lastname","removeCharacter","mapStateToProps","state","userCharacters","confirmMessage","stories","storyId","loading","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Divider,\r\n  Form,\r\n  Spin,\r\n  message,\r\n  Input,\r\n  Select,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport {\r\n  CATEGORIES,\r\n  COPYRIGHTS,\r\n  LANGUAGES,\r\n  STATUS,\r\n} from \"../../utils/constants\";\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport InputGroup from \"../../components/common/Input\";\r\nimport SelectGroup from \"../../components/common/Select\";\r\nimport Tags from \"../../components/forms/Tags\";\r\nimport UploadImage from \"../../components/forms/UploadImage\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport RadioButton from \"../../components/forms/RadioButton\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst NewStory = (props) => {\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n  const [image, setImage] = React.useState(\"\");\r\n  const [linkVisible, setLinkVisible] = React.useState(false);\r\n  const [uploadVisible, setUploadVisible] = React.useState(false);\r\n\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n\r\n  const addCharacter = () => {\r\n    if (\r\n      currentChar &&\r\n      form.getFieldValue(\"mainCharacters\")?.indexOf(currentChar) === -1 &&\r\n      form.getFieldValue(\"mainCharacters\")?.length < 5\r\n    ) {\r\n      form.setFieldsValue({\r\n        mainCharacters: [...form.getFieldValue(\"mainCharacters\"), currentChar],\r\n      });\r\n    }\r\n    setCurrentChar(\"\");\r\n    form.setFieldsValue({ currentChar: \"\" });\r\n    console.log(form.getFieldValue(\"mainCharacters\"));\r\n  };\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onFailed = (error) => {\r\n    const errorName = error.errorFields[0].name.toString();\r\n    form.scrollToField(errorName);\r\n    //message.error(\"There are errors\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ tags: [] });\r\n    form.setFieldsValue({ mainCharacters: [] });\r\n    form.setFieldsValue({ mature: false });\r\n    form.setFieldsValue({ public: true });\r\n    // form.setFieldsValue({ currentChar: \"\" });\r\n  }, []);\r\n\r\n  const filterSort = (a, b) => {\r\n    const keyA = a.name,\r\n      keyB = b.name;\r\n    // Compare the 2 dates\r\n    if (keyA < keyB) return -1;\r\n    if (keyA > keyB) return 1;\r\n    return 0;\r\n  };\r\n\r\n  const showLink = () => {\r\n    setLinkVisible(true);\r\n    setUploadVisible(false);\r\n  };\r\n\r\n  const showUpload = () => {\r\n    setLinkVisible(false);\r\n    setUploadVisible(true);\r\n  };\r\n\r\n  console.log(linkVisible, uploadVisible);\r\n\r\n  return (\r\n    <div className=\"new-story custom-form\">\r\n      <div className=\"inner\">\r\n        <h2 className=\"side-heading\">Add a new story</h2>\r\n        <Form\r\n          layout=\"vertical\"\r\n          scrollToFirstError\r\n          onFinishFailed={onFailed}\r\n          onFinish={submit}\r\n          form={form}\r\n        >\r\n          <Row gutter={[24, 24]}>\r\n            <Col sm={24} xs={24} md={18} lg={18}>\r\n              <Form.Item\r\n                colon={false}\r\n                name=\"title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A title is required\",\r\n                  },\r\n                  { max: 65 },\r\n                ]}\r\n                label=\"Title\"\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col sm={24} xs={24} lg={6} md={6}>\r\n              <Form.Item\r\n                name=\"categories\"\r\n                label=\"Categories\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"At least 1 category is required\",\r\n                  },\r\n                  {\r\n                    max: 2,\r\n                    type: \"array\",\r\n                    message: \"You can only select up to 2 categories\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select mode=\"multiple\" allowClear maxTagCount={2}>\r\n                  {CATEGORIES?.sort((a, b) => {\r\n                    const keyA = a.name,\r\n                      keyB = b.name;\r\n                    // Compare the 2 dates\r\n                    if (keyA < keyB) return -1;\r\n                    if (keyA > keyB) return 1;\r\n                    return 0;\r\n                  }).map((cat) => (\r\n                    <Option value={cat.value} key={cat.value}>\r\n                      {cat.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={[24, 24]}>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"language\"\r\n                label=\"Language\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A language is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select filterSort={filterSort}>\r\n                  {LANGUAGES?.map((lang) => (\r\n                    <Option value={lang.value} key={lang.value}>\r\n                      {lang.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"status\"\r\n                label=\"Status\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A status is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  {STATUS.map((stat) => (\r\n                    <Option value={stat.value} key={stat.value}>\r\n                      {stat.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"copyright\"\r\n                label=\"Copyright\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A copyright is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  {COPYRIGHTS.map((copy) => (\r\n                    <Option value={copy.value} key={copy.value}>\r\n                      {copy.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Summary\"\r\n            name=\"summary\"\r\n            rules={[\r\n              {\r\n                max: 180,\r\n                message: \"Your summary cannot exceed 180 characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              autoSize={{ minRows: 5 }}\r\n              showCount={true}\r\n              maxLength={180}\r\n            ></Input.TextArea>\r\n          </Form.Item>\r\n          <Row justify=\"space-between\" gutter={[24, 24]}>\r\n            <RadioButton\r\n              lg={4}\r\n              sm={12}\r\n              xs={24}\r\n              md={8}\r\n              name=\"public\"\r\n              label=\"Visibility\"\r\n              num1=\"3\"\r\n              num2=\"4\"\r\n              label1=\"Public\"\r\n              label2=\"Private\"\r\n              defaultValue={form.getFieldValue(\"public\")}\r\n            />\r\n            <RadioButton\r\n              lg={4}\r\n              sm={12}\r\n              xs={24}\r\n              md={8}\r\n              name=\"mature\"\r\n              label=\"Mature content ?\"\r\n              num1=\"1\"\r\n              num2=\"2\"\r\n              label1=\"Yes\"\r\n              label2=\"No\"\r\n              defaultValue={form.getFieldValue(\"mature\")}\r\n            />\r\n            <Col lg={8} md={12} sm={24} xs={24}>\r\n              <label htmlFor=\"tags\" className=\"tags-label\">\r\n                Tags\r\n              </label>\r\n              <Tags form={form} />\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Form.Item name=\"mainCharacters\" label=\"Main Characters\">\r\n            <Row gutter={[24, 24]}>\r\n              <Col lg={12} md={24} sm={24} xs={24}>\r\n                <Row gutter={16}>\r\n                  <Col span={22}>\r\n                    <Form.Item name=\"currentChar\">\r\n                      <Select\r\n                        disabled={\r\n                          form.getFieldValue(\"mainCharacters\")?.length >= 5\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(val) => setCurrentChar(val)}\r\n                      >\r\n                        <Option value=\"none\" disabled>\r\n                          Choose\r\n                        </Option>\r\n                        {props.characters\r\n                          .filter(\r\n                            (c) =>\r\n                              form\r\n                                .getFieldValue(\"mainCharacters\")\r\n                                ?.indexOf(c.id) === -1\r\n                          )\r\n                          ?.sort((a, b) => {\r\n                            const keyA = a.firstname,\r\n                              keyB = b.firstname;\r\n                            // Compare the 2 dates\r\n                            if (keyA < keyB) return -1;\r\n                            if (keyA > keyB) return 1;\r\n                            return 0;\r\n                          })\r\n                          .map((char) => (\r\n                            <Option\r\n                              key={char.id}\r\n                              value={char.id}\r\n                            >{`${char.firstname} ${char.lastname}`}</Option>\r\n                          ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={2}>\r\n                    <div\r\n                      className=\"select-add-input-iconbox\"\r\n                      onClick={addCharacter}\r\n                    >\r\n                      <span>+</span>\r\n                    </div>\r\n                  </Col>\r\n                  <small>You can add up to 5 main characters</small>\r\n                </Row>\r\n              </Col>\r\n              <Col lg={12} md={24} sm={24} xs={24}>\r\n                <Row gutter={[16, 24]}>\r\n                  {props.characters\r\n                    .filter(\r\n                      (c) =>\r\n                        form.getFieldValue(\"mainCharacters\")?.indexOf(c.id) !==\r\n                        -1\r\n                    )\r\n                    .map((char) => (\r\n                      <Col md={12} sm={24} key={char.id}>\r\n                        <div key={char.id} className=\"main-selected\">\r\n                          <div className=\"main-avatar\">\r\n                            <img src={char.image} alt={char.firstname} />\r\n                          </div>\r\n                          <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                          <ion-icon\r\n                            onClick={() => removeCharacter(char.id)}\r\n                            name=\"close-circle\"\r\n                          ></ion-icon>\r\n                        </div>\r\n                      </Col>\r\n                    ))}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <Divider />\r\n          {!uploadVisible && !linkVisible && (\r\n            <div className=\"upload-btns\">\r\n              <button onClick={showUpload} type=\"button\" className=\"upload-btn\">\r\n                Upload a cover\r\n              </button>\r\n\r\n              <button onClick={showLink} type=\"button\" className=\"upload-btn\">\r\n                Submit a link to a cover\r\n              </button>\r\n            </div>\r\n          )}\r\n          {uploadVisible && (\r\n            <Row gutter={[24, 24]}>\r\n              <Col md={12} sm={24} xs={24}>\r\n                <div className=\"input-group\">\r\n                  <UploadImage form={form} image={image} setImage={setImage} />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {linkVisible && (\r\n            <Row gutter={[24, 24]}>\r\n              <Col sm={24} xs={24} md={12} lg={12}>\r\n                <Form.Item label=\"Submit a link to your image\" name=\"image\">\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <button type=\"submit\">Create</button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}