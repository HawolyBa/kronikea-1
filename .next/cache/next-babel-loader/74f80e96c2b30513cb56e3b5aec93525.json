{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\profile\\\\LinkComp.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Row, Col, Form, Input } from \"antd\";\n\nvar LinkComp = function LinkComp(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      info = _ref.info,\n      setInfo = _ref.setInfo;\n  return __jsx(Row, {\n    gutter: 16,\n    align: \"middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    name: name,\n    label: label,\n    rules: [{\n      type: \"url\",\n      message: \"This field must be a valid url.\"\n    }, function () {\n      return {\n        validator: function validator(_, value) {\n          if (value.includes(name)) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(\"The link is not a valid \".concat(label, \" url\")));\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    addonAfter: __jsx(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }),\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        username: e.target.value\n      }));\n    },\n    value: info.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"checkmark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = LinkComp;\nexport default LinkComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkComp\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/profile/LinkComp.js"],"names":["Row","Col","Form","Input","LinkComp","name","label","info","setInfo","type","message","validator","_","value","includes","Promise","resolve","reject","Error","e","username","target"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,MAAtC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnD,SACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAiB,IAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,KAAK,EAAE,CACL;AACEG,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AAAA,aAAO;AACLC,QAAAA,SADK,qBACKC,CADL,EACQC,KADR,EACe;AAClB,cAAIA,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxB,mBAAOU,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,iBAAOD,OAAO,CAACE,MAAR,CACL,IAAIC,KAAJ,mCAAqCZ,KAArC,UADK,CAAP;AAGD;AARI,OAAP;AAAA,KALK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,MAAC,KAAD;AACE,IAAA,UAAU,EAAE;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd;AAEE,IAAA,QAAQ,EAAE,kBAACa,CAAD;AAAA,aAAOX,OAAO,iCAAMD,IAAN;AAAYa,QAAAA,QAAQ,EAAED,CAAC,CAACE,MAAF,CAASR;AAA/B,SAAd;AAAA,KAFZ;AAGE,IAAA,KAAK,EAAEN,IAAI,CAACa,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAyBE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF,CADF,EA8BE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BF,CADF;AAoCD,CArCD;;KAAMhB,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { Row, Col, Form, Input } from \"antd\";\r\n\r\nconst LinkComp = ({ name, label, info, setInfo }) => {\r\n  return (\r\n    <Row gutter={16} align=\"middle\">\r\n      <Col span={22}>\r\n        <Form.Item\r\n          name={name}\r\n          label={label}\r\n          rules={[\r\n            {\r\n              type: \"url\",\r\n              message: \"This field must be a valid url.\",\r\n            },\r\n            () => ({\r\n              validator(_, value) {\r\n                if (value.includes(name)) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(\r\n                  new Error(`The link is not a valid ${label} url`)\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            addonAfter={<ion-icon name=\"checkmark\"></ion-icon>}\r\n            onChange={(e) => setInfo({ ...info, username: e.target.value })}\r\n            value={info.username}\r\n          />\r\n          <Input />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={2}>\r\n        <ion-icon name=\"checkmark\"></ion-icon>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default LinkComp;\r\n"]},"metadata":{},"sourceType":"module"}