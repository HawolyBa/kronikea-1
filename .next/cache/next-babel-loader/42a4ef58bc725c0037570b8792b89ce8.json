{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\hooks\\\\userHooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { auth, db } from \"../redux/fbConfig\";\nvar authContext = /*#__PURE__*/createContext();\nexport function ProvideAuth(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, children);\n}\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1]; // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n\n\n  var signin = function signin(email, password) {\n    return auth.signInWithEmailAndPassword(email, password).then(function (response) {\n      setUser(response.user);\n      return response.user;\n    });\n  };\n\n  var signup = function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password).then(function (response) {\n      setUser(response.user);\n      db.collection(\"users\").add({\n        badges: [],\n        biography: \"\",\n        suspended: false,\n        facebook: \"\",\n        instagram: \"\"\n      });\n      return response.user;\n    });\n  };\n\n  var signout = function signout() {\n    return auth.signOut().then(function () {\n      setUser(false);\n    });\n  };\n\n  var sendPasswordResetEmail = function sendPasswordResetEmail(email) {\n    return auth.sendPasswordResetEmail(email).then(function () {\n      return true;\n    });\n  };\n\n  var confirmPasswordReset = function confirmPasswordReset(code, password) {\n    return auth.confirmPasswordReset(code, password).then(function () {\n      return true;\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      console.log(user);\n\n      if (user) {\n        setUser(user);\n        setIsLoading(false);\n      } else {\n        setUser(false);\n        setIsLoading(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []); // Return the user object and auth methods\n\n  return {\n    isLoading: isLoading,\n    user: user,\n    signin: signin,\n    signup: signup,\n    signout: signout,\n    sendPasswordResetEmail: sendPasswordResetEmail,\n    confirmPasswordReset: confirmPasswordReset\n  };\n}\n\n_s3(useProvideAuth, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/userHooks.js"],"names":["React","useState","useEffect","useContext","createContext","auth","db","authContext","ProvideAuth","children","useProvideAuth","useAuth","user","setUser","isLoading","setIsLoading","signin","email","password","signInWithEmailAndPassword","then","response","signup","createUserWithEmailAndPassword","collection","add","badges","biography","suspended","facebook","instagram","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","unsubscribe","onAuthStateChanged","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,mBAAzB;AAEA,IAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,SAASI,WAAT,OAAmC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACxC,MAAMJ,IAAI,GAAGK,cAAc,EAA3B;AACA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEL,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCI,QAApC,CAAP;AACD;;GAHeD,W;UACDE,c;;;KADCF,W;AAKhB,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAC3B,SAAOR,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;;IAAMI,O;;AAIb,SAASD,cAAT,GAA0B;AAAA;;AAAA,kBACAT,QAAQ,CAAC,IAAD,CADR;AAAA,MACjBW,IADiB;AAAA,MACXC,OADW;;AAAA,mBAEUZ,QAAQ,CAAC,IAAD,CAFlB;AAAA,MAEjBa,SAFiB;AAAA,MAENC,YAFM,kBAIxB;AACA;;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAClC,WAAOb,IAAI,CAACc,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,EAAiDE,IAAjD,CAAsD,UAACC,QAAD,EAAc;AACzER,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACA,aAAOS,QAAQ,CAACT,IAAhB;AACD,KAHM,CAAP;AAID,GALD;;AAOA,MAAMU,MAAM,GAAG,SAATA,MAAS,CAACL,KAAD,EAAQC,QAAR,EAAqB;AAClC,WAAOb,IAAI,CACRkB,8BADI,CAC2BN,KAD3B,EACkCC,QADlC,EAEJE,IAFI,CAEC,UAACC,QAAD,EAAc;AAClBR,MAAAA,OAAO,CAACQ,QAAQ,CAACT,IAAV,CAAP;AACAN,MAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACzBC,QAAAA,MAAM,EAAE,EADiB;AAEzBC,QAAAA,SAAS,EAAE,EAFc;AAGzBC,QAAAA,SAAS,EAAE,KAHc;AAIzBC,QAAAA,QAAQ,EAAE,EAJe;AAKzBC,QAAAA,SAAS,EAAE;AALc,OAA3B;AAOA,aAAOT,QAAQ,CAACT,IAAhB;AACD,KAZI,CAAP;AAaD,GAdD;;AAgBA,MAAMmB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,WAAO1B,IAAI,CAAC2B,OAAL,GAAeZ,IAAf,CAAoB,YAAM;AAC/BP,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,MAAMoB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAChB,KAAD,EAAW;AACxC,WAAOZ,IAAI,CAAC4B,sBAAL,CAA4BhB,KAA5B,EAAmCG,IAAnC,CAAwC,YAAM;AACnD,aAAO,IAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,MAAMc,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAOjB,QAAP,EAAoB;AAC/C,WAAOb,IAAI,CAAC6B,oBAAL,CAA0BC,IAA1B,EAAgCjB,QAAhC,EAA0CE,IAA1C,CAA+C,YAAM;AAC1D,aAAO,IAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkC,WAAW,GAAG/B,IAAI,CAACgC,kBAAL,CAAwB,UAACzB,IAAD,EAAU;AACpD0B,MAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHD,MAGO;AACLF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KATmB,CAApB,CADc,CAYd;;AACA,WAAO;AAAA,aAAMqB,WAAW,EAAjB;AAAA,KAAP;AACD,GAdQ,EAcN,EAdM,CAAT,CA/CwB,CA+DxB;;AACA,SAAO;AACLtB,IAAAA,SAAS,EAATA,SADK;AAELF,IAAAA,IAAI,EAAJA,IAFK;AAGLI,IAAAA,MAAM,EAANA,MAHK;AAILM,IAAAA,MAAM,EAANA,MAJK;AAKLS,IAAAA,OAAO,EAAPA,OALK;AAMLE,IAAAA,sBAAsB,EAAtBA,sBANK;AAOLC,IAAAA,oBAAoB,EAApBA;AAPK,GAAP;AASD;;IAzEQxB,c","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { auth, db } from \"../redux/fbConfig\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Wrap any Firebase methods we want to use making sure ...\r\n  // ... to save the user to state.\r\n  const signin = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password).then((response) => {\r\n      setUser(response.user);\r\n      return response.user;\r\n    });\r\n  };\r\n\r\n  const signup = (email, password) => {\r\n    return auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        db.collection(\"users\").add({\r\n          badges: [],\r\n          biography: \"\",\r\n          suspended: false,\r\n          facebook: \"\",\r\n          instagram: \"\",\r\n        });\r\n        return response.user;\r\n      });\r\n  };\r\n\r\n  const signout = () => {\r\n    return auth.signOut().then(() => {\r\n      setUser(false);\r\n    });\r\n  };\r\n\r\n  const sendPasswordResetEmail = (email) => {\r\n    return auth.sendPasswordResetEmail(email).then(() => {\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const confirmPasswordReset = (code, password) => {\r\n    return auth.confirmPasswordReset(code, password).then(() => {\r\n      return true;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        setUser(user);\r\n        setIsLoading(false);\r\n      } else {\r\n        setUser(false);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Return the user object and auth methods\r\n  return {\r\n    isLoading,\r\n    user,\r\n    signin,\r\n    signup,\r\n    signout,\r\n    sendPasswordResetEmail,\r\n    confirmPasswordReset,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}