{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      var categories = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      // const newItems = items.map((item) => {\n      //   let categories = [];\n      //   item.category.forEach((cat) => {\n      //     db.collection(\"categories\")\n      //       .doc(cat)\n      //       .get()\n      //       .then((doc) => {\n      //         categories = [...categories, doc.data().name];\n      //       });\n      //   });\n      //   console.log(categories);\n      //   return { ...item, categories };\n      // });\n      items.forEach(function (item) {\n        return console.log(item);\n      }); // items.foreach((item) => {\n      //   let categories = [];\n      //   item.category.forEach((cat) =>\n      //     db\n      //       .collection(\"categories\")\n      //       .doc(cat)\n      //       .get((doc) => (categories = [...categories, doc.data().name]))\n      //   );\n      //   newItems = [...newItems, { ...item, categories }];\n      // });\n\n      console.log(newItems);\n      return newItems;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","db","auth","getUserStories","dispatch","collection","where","currentUser","uid","get","then","docs","items","categories","forEach","doc","id","data","item","console","log","newItems","type","payload"],"mappings":";;;;;;;AAAA,SAASA,gBAAT,QAAiC,uBAAjC;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,aAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAACC,QAAD,EAAc;AAChDH,IAAAA,EAAE,CAACI,UAAH,CAAc,SAAd,EACGC,KADH,CACS,UADT,EACqB,IADrB,EAC2BJ,IAAI,CAACK,WAAL,CAAiBC,GAD5C,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,IAAD,EAAU;AACd,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAF,MAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBH,QAAAA,KAAK,gCAAOA,KAAP;AAAgBI,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,WAA+BD,GAAG,CAACE,IAAJ,EAA/B,GAAL;AACD,OAFD;AAIA,aAAOL,KAAP;AACD,KAXH,EAYGF,IAZH,CAYQ,UAACE,KAAD,EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAAA,KAAK,CAACE,OAAN,CAAc,UAACI,IAAD;AAAA,eAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,OAAd,EAfe,CAgBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,aAAOA,QAAP;AACD,KAxCH,EAyCGX,IAzCH,CAyCQ,UAACE,KAAD,EAAW;AACfR,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAEtB,gBAAR;AAA0BuB,QAAAA,OAAO,EAAEX;AAAnC,OAAD,CAAR;AACD,KA3CH;AA4CD,GA7C6B;AAAA,CAAvB","sourcesContent":["import { GET_USER_STORIES } from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      let categories = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      // const newItems = items.map((item) => {\r\n      //   let categories = [];\r\n      //   item.category.forEach((cat) => {\r\n      //     db.collection(\"categories\")\r\n      //       .doc(cat)\r\n      //       .get()\r\n      //       .then((doc) => {\r\n      //         categories = [...categories, doc.data().name];\r\n      //       });\r\n      //   });\r\n      //   console.log(categories);\r\n      //   return { ...item, categories };\r\n      // });\r\n\r\n      items.forEach((item) => console.log(item));\r\n      // items.foreach((item) => {\r\n      //   let categories = [];\r\n      //   item.category.forEach((cat) =>\r\n      //     db\r\n      //       .collection(\"categories\")\r\n      //       .doc(cat)\r\n      //       .get((doc) => (categories = [...categories, doc.data().name]))\r\n      //   );\r\n      //   newItems = [...newItems, { ...item, categories }];\r\n      // });\r\n      console.log(newItems);\r\n      return newItems;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}