{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\CharacterSelector.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Col, Row, Select, Divider } from \"antd\";\nconst {\n  Option\n} = Select;\n\nconst CharacterSelector = ({\n  item,\n  characters,\n  form,\n  arrInForm,\n  label,\n  type,\n  lg1\n}) => {\n  var _form$getFieldValue3, _characters$filter;\n\n  const [currentChar, setCurrentChar] = React.useState(\"\");\n  const [selectedCharacters, setSelectedCharacters] = React.useState(item ? characters.filter(c => item.includes(c.id)) : []);\n\n  const addCharacter = () => {\n    var _form$getFieldValue, _form$getFieldValue2;\n\n    if (currentChar && ((_form$getFieldValue = form.getFieldValue(arrInForm)) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.indexOf(currentChar)) === -1 && ((_form$getFieldValue2 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.length) < 5) {\n      setSelectedCharacters([...selectedCharacters, characters.find(c => c.id === currentChar)]);\n      form.setFieldsValue({\n        [arrInForm]: [...form.getFieldValue(arrInForm), currentChar]\n      });\n    }\n\n    setCurrentChar(\"\");\n    form.setFieldsValue({\n      currentChar: \"\"\n    });\n  };\n\n  const removeCharacter = id => {\n    form.setFieldsValue({\n      [arrInForm]: form.getFieldValue(arrInForm).filter(c => c !== id)\n    });\n    setSelectedCharacters(selectedCharacters.filter(c => c.id !== id));\n  };\n\n  return __jsx(Form.Item, {\n    name: arrInForm,\n    label: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    lg: lg1,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"currentChar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    disabled: ((_form$getFieldValue3 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue3 === void 0 ? void 0 : _form$getFieldValue3.length) >= 5 ? true : false,\n    onChange: val => setCurrentChar(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Option, {\n    value: \"none\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Choose\"), (_characters$filter = characters.filter(c => {\n    var _form$getFieldValue4;\n\n    return ((_form$getFieldValue4 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue4 === void 0 ? void 0 : _form$getFieldValue4.indexOf(c.id)) === -1;\n  })) === null || _characters$filter === void 0 ? void 0 : _characters$filter.sort((a, b) => {\n    const keyA = a.firstname,\n          keyB = b.firstname; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(char => __jsx(Option, {\n    key: char.id,\n    value: char.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }, `${char.firstname} ${char.lastname}`))))), __jsx(Col, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"select-add-input-iconbox\",\n    onClick: addCharacter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"+\"))), type === \"story\" && __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"You can add up to 5 main characters\"))), __jsx(Col, {\n    lg: lg1,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, characters.filter(c => form.getFieldValue(arrInForm).includes(c.id)).map(char => __jsx(Col, {\n    md: 12,\n    sm: 24,\n    key: char.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    key: char.id,\n    className: \"main-selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"main-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: char.image,\n    alt: char.firstname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  })), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, `${char.firstname} ${char.lastname}`, \" \"), __jsx(\"ion-icon\", {\n    onClick: () => removeCharacter(char.id),\n    name: \"close-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), __jsx(Divider, {\n    style: {\n      margin: \"15px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default CharacterSelector;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/CharacterSelector.js"],"names":["React","Form","Col","Row","Select","Divider","Option","CharacterSelector","item","characters","form","arrInForm","label","type","lg1","currentChar","setCurrentChar","useState","selectedCharacters","setSelectedCharacters","filter","c","includes","id","addCharacter","getFieldValue","indexOf","length","find","setFieldsValue","removeCharacter","val","sort","a","b","keyA","firstname","keyB","map","char","lastname","image","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Col, Row, Select, Divider } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst CharacterSelector = ({\r\n  item,\r\n  characters,\r\n  form,\r\n  arrInForm,\r\n  label,\r\n  type,\r\n  lg1,\r\n}) => {\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n  const [selectedCharacters, setSelectedCharacters] = React.useState(\r\n    item ? characters.filter((c) => item.includes(c.id)) : []\r\n  );\r\n\r\n  const addCharacter = () => {\r\n    if (\r\n      currentChar &&\r\n      form.getFieldValue(arrInForm)?.indexOf(currentChar) === -1 &&\r\n      form.getFieldValue(arrInForm)?.length < 5\r\n    ) {\r\n      setSelectedCharacters([\r\n        ...selectedCharacters,\r\n        characters.find((c) => c.id === currentChar),\r\n      ]);\r\n      form.setFieldsValue({\r\n        [arrInForm]: [...form.getFieldValue(arrInForm), currentChar],\r\n      });\r\n    }\r\n    setCurrentChar(\"\");\r\n    form.setFieldsValue({ currentChar: \"\" });\r\n  };\r\n\r\n  const removeCharacter = (id) => {\r\n    form.setFieldsValue({\r\n      [arrInForm]: form.getFieldValue(arrInForm).filter((c) => c !== id),\r\n    });\r\n    setSelectedCharacters(selectedCharacters.filter((c) => c.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Form.Item name={arrInForm} label={label}>\r\n      <Row gutter={[24, 24]}>\r\n        <Col lg={lg1} md={24} sm={24} xs={24}>\r\n          <Row gutter={16}>\r\n            <Col span={22}>\r\n              <Form.Item name=\"currentChar\">\r\n                <Select\r\n                  disabled={\r\n                    form.getFieldValue(arrInForm)?.length >= 5 ? true : false\r\n                  }\r\n                  onChange={(val) => setCurrentChar(val)}\r\n                >\r\n                  <Option value=\"none\" disabled>\r\n                    Choose\r\n                  </Option>\r\n                  {characters\r\n                    .filter(\r\n                      (c) => form.getFieldValue(arrInForm)?.indexOf(c.id) === -1\r\n                    )\r\n                    ?.sort((a, b) => {\r\n                      const keyA = a.firstname,\r\n                        keyB = b.firstname;\r\n                      // Compare the 2 dates\r\n                      if (keyA < keyB) return -1;\r\n                      if (keyA > keyB) return 1;\r\n                      return 0;\r\n                    })\r\n                    .map((char) => (\r\n                      <Option\r\n                        key={char.id}\r\n                        value={char.id}\r\n                      >{`${char.firstname} ${char.lastname}`}</Option>\r\n                    ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={2}>\r\n              <div className=\"select-add-input-iconbox\" onClick={addCharacter}>\r\n                <span>+</span>\r\n              </div>\r\n            </Col>\r\n            {type === \"story\" && (\r\n              <small>You can add up to 5 main characters</small>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n        <Col lg={lg1} md={24} sm={24} xs={24}>\r\n          <Row gutter={16}>\r\n            {characters\r\n              .filter((c) => form.getFieldValue(arrInForm).includes(c.id))\r\n              .map((char) => (\r\n                <Col md={12} sm={24} key={char.id}>\r\n                  <div key={char.id} className=\"main-selected\">\r\n                    <div className=\"main-avatar\">\r\n                      <img src={char.image} alt={char.firstname} />\r\n                    </div>\r\n                    <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                    <ion-icon\r\n                      onClick={() => removeCharacter(char.id)}\r\n                      name=\"close-circle\"\r\n                    ></ion-icon>\r\n                  </div>\r\n                  <Divider style={{ margin: \"15px 0\" }} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default CharacterSelector;\r\n"]},"metadata":{},"sourceType":"module"}