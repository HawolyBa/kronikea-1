{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Row, Col, Space, Divider, Form, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { CATEGORIES, COPYRIGHTS, LANGUAGES, STATUS } from \"../../utils/constants\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport InputGroup from \"../../components/common/Input\";\nimport SelectGroup from \"../../components/common/Select\";\nimport Tags from \"../../components/forms/Tags\";\nimport UploadImage from \"../../components/forms/UploadImage\";\nimport { Router } from \"next/router\";\n\nconst newStory = props => {\n  var _props$characters;\n\n  const [storyInfo, setStoryInfo] = React.useState({\n    title: \"\",\n    categories: [],\n    language: \"\",\n    status: \"\",\n    copyright: \"\",\n    summary: \"\",\n    mature: false,\n    public: true,\n    tags: [],\n    mainCharacters: [],\n    banner: \"\",\n    imageCopyright: \"\"\n  });\n  const [summaryCount, setSummaryCount] = React.useState(0);\n  const [currentChar, setCurrentChar] = React.useState(\"\");\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n\n  const addCharacter = () => {\n    if (currentChar && storyInfo.mainCharacters.indexOf(currentChar) === -1 && storyInfo.mainCharacters.length < 5) {\n      setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mainCharacters: [...storyInfo.mainCharacters, currentChar]\n      }));\n    }\n\n    setCurrentChar(\"\");\n  };\n\n  const removeCharacter = id => {\n    setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n      mainCharacters: storyInfo.mainCharacters.filter(c => c !== id)\n    }));\n  };\n\n  const submitStory = values => {\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      banner: storyInfo.banner,\n      tags: storyInfo.tags,\n      summary: values.summary ? values.summary : \"\",\n      imageCopyright: values.imageCopyright ? values.imageCopyright : \"\",\n      mature: storyInfo.mature,\n      public: storyInfo.public,\n      mainCharacters: storyInfo.mainCharacters\n    }));\n  };\n\n  console.log(auth);\n  return (// { auth.isLoading ? <Loader/>: auth.user.uid ? : Router.push('/auth')}\n    __jsx(\"div\", {\n      className: \"new-story custom-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      className: \"side-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Add a new story\"), __jsx(Form, {\n      form: form,\n      layout: \"vertical\",\n      className: \"form-group\",\n      onFinish: submitStory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, __jsx(Row, {\n      gutter: [24, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, __jsx(InputGroup, {\n      required: true,\n      sm: 24,\n      xs: 24,\n      md: 18,\n      lg: 18,\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter a title\",\n      value: storyInfo.title,\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      rules: [{\n        required: true,\n        message: \"A title is required\"\n      }, {\n        max: 70\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), __jsx(SelectGroup, {\n      sm: 24,\n      xs: 24,\n      lg: 6,\n      md: 6,\n      name: \"categories\",\n      options: CATEGORIES,\n      value: storyInfo.categories,\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      type: \"multiple\",\n      form: form,\n      rules: [{\n        required: true,\n        message: \"At least 1 category is required\"\n      }, {\n        max: 2,\n        type: \"array\",\n        message: \"You can only select up to 2 categories\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    })), __jsx(Row, {\n      gutter: [24, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, __jsx(SelectGroup, {\n      md: 8,\n      sm: 24,\n      xs: 24,\n      lg: 8,\n      name: \"language\",\n      options: LANGUAGES,\n      value: storyInfo.language,\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      type: \"single\",\n      form: form,\n      rules: [{\n        required: true,\n        message: \"A language is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), __jsx(SelectGroup, {\n      md: 8,\n      sm: 24,\n      xs: 24,\n      lg: 8,\n      name: \"status\",\n      options: STATUS,\n      info: \"info about status\",\n      value: storyInfo.status,\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      type: \"single\",\n      form: form,\n      rules: [{\n        required: true,\n        message: \"A status is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }), __jsx(SelectGroup, {\n      md: 8,\n      sm: 24,\n      xs: 24,\n      lg: 8,\n      name: \"copyright\",\n      options: COPYRIGHTS,\n      info: \"info about copyright\",\n      value: storyInfo.copyright,\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      type: \"single\",\n      form: form,\n      rules: [{\n        required: true,\n        message: \"A copyright is required\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    })), __jsx(Form.Item, {\n      label: \"Summary\",\n      name: \"summary\",\n      rules: [{\n        max: 180,\n        message: \"Your summary cannot exceed 180 characters\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, __jsx(\"textarea\", {\n      rows: \"5\",\n      id: \"summary\",\n      className: \"form-input\",\n      placeholder: \"Summarize your story here\",\n      value: storyInfo.summary,\n      onChange: e => {\n        setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n          summary: e.target.value\n        }));\n        setSummaryCount(e.target.value.length);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }), __jsx(\"span\", {\n      className: `counter ${summaryCount > 180 ? \"exceed\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, summaryCount, \"/180\"))), __jsx(Row, {\n      justify: \"space-between\",\n      gutter: [24, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      lg: 4,\n      md: 8,\n      sm: 12,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, __jsx(\"fieldset\", {\n      id: \"mature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"title-label\",\n      htmlFor: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, \"Mature content\"), __jsx(\"div\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, __jsx(Space, {\n      size: 32,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio__1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      id: \"radio-1\",\n      type: \"radio\",\n      name: \"mature\",\n      value: true,\n      onChange: () => setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mature: true\n      })),\n      checked: storyInfo.mature ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"radio-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, \"Yes\")), __jsx(\"div\", {\n      className: \"radio__2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      id: \"radio-2\",\n      type: \"radio\",\n      name: \"mature\",\n      value: false,\n      onChange: () => setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mature: false\n      })),\n      checked: storyInfo.mature ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"radio-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, \"No\"))))))), __jsx(Col, {\n      lg: 4,\n      md: 8,\n      sm: 12,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, __jsx(\"fieldset\", {\n      id: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      className: \"title-label\",\n      htmlFor: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, \"Visibilty\"), __jsx(\"div\", {\n      className: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, __jsx(Space, {\n      size: 32,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"radio__1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      id: \"radio-3\",\n      type: \"radio\",\n      name: \"public\",\n      value: true,\n      onChange: () => setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        public: true\n      })),\n      checked: storyInfo.public ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"radio-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"Public\")), __jsx(\"div\", {\n      className: \"radio__2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 23\n      }\n    }, __jsx(\"input\", {\n      id: \"radio-4\",\n      type: \"radio\",\n      name: \"public\",\n      value: false,\n      onChange: () => setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        public: false\n      })),\n      checked: storyInfo.public ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"radio-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, \"Private\"))))))), __jsx(Col, {\n      lg: 8,\n      md: 12,\n      sm: 24,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"title-label\",\n      htmlFor: \"tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, \"Tags\"), __jsx(Tags, {\n      storyInfo: storyInfo,\n      tags: storyInfo.tags,\n      setTags: setStoryInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }), __jsx(Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      lg: 12,\n      md: 24,\n      sm: 24,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Item, {\n      label: \"Main Characters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }, __jsx(Col, {\n      span: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, __jsx(\"select\", {\n      value: currentChar,\n      disabled: storyInfo.mainCharacters.length >= 5 ? true : false,\n      onChange: e => setCurrentChar(e.target.value),\n      className: \"form-input select-add-input\",\n      name: \"mainCharacters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 23\n      }\n    }, __jsx(\"option\", {\n      selected: true,\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, \"Choose\"), (_props$characters = props.characters) === null || _props$characters === void 0 ? void 0 : _props$characters.filter(c => !storyInfo.mainCharacters.includes(c.id)).map(char => __jsx(\"option\", {\n      key: char.id,\n      value: char.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, `${char.firstname} ${char.lastname}`)))), __jsx(Col, {\n      span: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"form-input select-add-input-iconbox\",\n      onClick: addCharacter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 25\n      }\n    }, \"+\"))), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }, \"You can add up to 5 main characters\"))))), __jsx(Col, {\n      lg: 12,\n      md: 24,\n      sm: 24,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, props.characters.filter(c => storyInfo.mainCharacters.indexOf(c.id) !== -1).map(char => __jsx(Col, {\n      md: 12,\n      sm: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      key: char.id,\n      className: \"main-selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"main-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: char.image,\n      alt: char.firstname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 27\n      }\n    })), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, `${char.firstname} ${char.lastname}`, \" \"), __jsx(\"ion-icon\", {\n      onClick: () => removeCharacter(char.id),\n      name: \"close-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 25\n      }\n    }))))))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }), __jsx(Row, {\n      align: \"bottom\",\n      gutter: [24, 24],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      md: 12,\n      sm: 24,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }, \"Upload a cover\"), __jsx(UploadImage, {\n      storyInfo: storyInfo,\n      onChangeFunc: setStoryInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }\n    }))), __jsx(InputGroup, {\n      required: false,\n      sm: 24,\n      xs: 24,\n      md: 12,\n      lg: 12,\n      id: \"banner\",\n      type: \"text\",\n      name: \"banner\",\n      title: \"Or submit a link to an image\",\n      placeholder: \"\",\n      value: typeof storyInfo.banner !== \"object\" ? storyInfo.banner : \"\",\n      onChangeFunc: setStoryInfo,\n      storyInfo: storyInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }\n    })), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    }), props.loading || props.storyId ? __jsx(\"button\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, __jsx(Spin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 15\n      }\n    })) : __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }, \"Create\"))))\n  );\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  confirmMessage: state.stories.message,\n  storyId: state.stories.storyId,\n  loading: state.stories.loadingStory\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  addStory\n})(newStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Row","Col","Space","Divider","Form","Spin","connect","CATEGORIES","COPYRIGHTS","LANGUAGES","STATUS","useAuth","getUserCharacters","addStory","InputGroup","SelectGroup","Tags","UploadImage","Router","newStory","props","storyInfo","setStoryInfo","useState","title","categories","language","status","copyright","summary","mature","public","tags","mainCharacters","banner","imageCopyright","summaryCount","setSummaryCount","currentChar","setCurrentChar","auth","form","useForm","useEffect","user","addCharacter","indexOf","length","removeCharacter","id","filter","c","submitStory","values","authorName","username","console","log","required","message","max","type","e","target","value","characters","includes","map","char","firstname","lastname","image","loading","storyId","mapStateToProps","state","userCharacters","confirmMessage","stories","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Space, Divider, Form, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  CATEGORIES,\r\n  COPYRIGHTS,\r\n  LANGUAGES,\r\n  STATUS,\r\n} from \"../../utils/constants\";\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport InputGroup from \"../../components/common/Input\";\r\nimport SelectGroup from \"../../components/common/Select\";\r\nimport Tags from \"../../components/forms/Tags\";\r\nimport UploadImage from \"../../components/forms/UploadImage\";\r\nimport { Router } from \"next/router\";\r\n\r\nconst newStory = (props) => {\r\n  const [storyInfo, setStoryInfo] = React.useState({\r\n    title: \"\",\r\n    categories: [],\r\n    language: \"\",\r\n    status: \"\",\r\n    copyright: \"\",\r\n    summary: \"\",\r\n    mature: false,\r\n    public: true,\r\n    tags: [],\r\n    mainCharacters: [],\r\n    banner: \"\",\r\n    imageCopyright: \"\",\r\n  });\r\n  const [summaryCount, setSummaryCount] = React.useState(0);\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  const addCharacter = () => {\r\n    if (\r\n      currentChar &&\r\n      storyInfo.mainCharacters.indexOf(currentChar) === -1 &&\r\n      storyInfo.mainCharacters.length < 5\r\n    ) {\r\n      setStoryInfo({\r\n        ...storyInfo,\r\n        mainCharacters: [...storyInfo.mainCharacters, currentChar],\r\n      });\r\n    }\r\n    setCurrentChar(\"\");\r\n  };\r\n\r\n  const removeCharacter = (id) => {\r\n    setStoryInfo({\r\n      ...storyInfo,\r\n      mainCharacters: storyInfo.mainCharacters.filter((c) => c !== id),\r\n    });\r\n  };\r\n\r\n  const submitStory = (values) => {\r\n    props.addStory({\r\n      ...values,\r\n      authorName: auth.user.username,\r\n      banner: storyInfo.banner,\r\n      tags: storyInfo.tags,\r\n      summary: values.summary ? values.summary : \"\",\r\n      imageCopyright: values.imageCopyright ? values.imageCopyright : \"\",\r\n      mature: storyInfo.mature,\r\n      public: storyInfo.public,\r\n      mainCharacters: storyInfo.mainCharacters,\r\n    });\r\n  };\r\n  console.log(auth);\r\n  return (\r\n    // { auth.isLoading ? <Loader/>: auth.user.uid ? : Router.push('/auth')}\r\n    <div className=\"new-story custom-form\">\r\n      <div className=\"inner\">\r\n        <h2 className=\"side-heading\">Add a new story</h2>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          className=\"form-group\"\r\n          onFinish={submitStory}\r\n        >\r\n          <Row gutter={[24, 24]}>\r\n            <InputGroup\r\n              required={true}\r\n              sm={24}\r\n              xs={24}\r\n              md={18}\r\n              lg={18}\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Enter a title\"\r\n              value={storyInfo.title}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A title is required\",\r\n                },\r\n                { max: 70 },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              sm={24}\r\n              xs={24}\r\n              lg={6}\r\n              md={6}\r\n              name=\"categories\"\r\n              options={CATEGORIES}\r\n              value={storyInfo.categories}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"multiple\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"At least 1 category is required\",\r\n                },\r\n                {\r\n                  max: 2,\r\n                  type: \"array\",\r\n                  message: \"You can only select up to 2 categories\",\r\n                },\r\n              ]}\r\n            />\r\n          </Row>\r\n          <Row gutter={[24, 24]}>\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"language\"\r\n              options={LANGUAGES}\r\n              value={storyInfo.language}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A language is required\",\r\n                },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"status\"\r\n              options={STATUS}\r\n              info={\"info about status\"}\r\n              value={storyInfo.status}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A status is required\",\r\n                },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"copyright\"\r\n              options={COPYRIGHTS}\r\n              info={\"info about copyright\"}\r\n              value={storyInfo.copyright}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A copyright is required\",\r\n                },\r\n              ]}\r\n            />\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Summary\"\r\n            name=\"summary\"\r\n            rules={[\r\n              {\r\n                max: 180,\r\n                message: \"Your summary cannot exceed 180 characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <div className=\"input-group summary\">\r\n              <textarea\r\n                rows=\"5\"\r\n                id=\"summary\"\r\n                className=\"form-input\"\r\n                placeholder=\"Summarize your story here\"\r\n                value={storyInfo.summary}\r\n                onChange={(e) => {\r\n                  setStoryInfo({ ...storyInfo, summary: e.target.value });\r\n                  setSummaryCount(e.target.value.length);\r\n                }}\r\n              ></textarea>\r\n              <span className={`counter ${summaryCount > 180 ? \"exceed\" : \"\"}`}>\r\n                {summaryCount}/180\r\n              </span>\r\n            </div>\r\n          </Form.Item>\r\n          <Row justify=\"space-between\" gutter={[24, 24]}>\r\n            <Col lg={4} md={8} sm={12} xs={24}>\r\n              <div className=\"input-group\">\r\n                <fieldset id=\"mature\">\r\n                  <label className=\"title-label\" htmlFor=\"public\">\r\n                    Mature content\r\n                  </label>\r\n\r\n                  <div className=\"radio\">\r\n                    <Space size={32}>\r\n                      <div className=\"radio__1\">\r\n                        <input\r\n                          id=\"radio-1\"\r\n                          type=\"radio\"\r\n                          name=\"mature\"\r\n                          value={true}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              mature: true,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.mature ? true : false}\r\n                        />\r\n                        <label htmlFor=\"radio-1\"></label>\r\n                        <p>Yes</p>\r\n                      </div>\r\n\r\n                      <div className=\"radio__2\">\r\n                        <input\r\n                          id=\"radio-2\"\r\n                          type=\"radio\"\r\n                          name=\"mature\"\r\n                          value={false}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              mature: false,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.mature ? false : true}\r\n                        />\r\n                        <label htmlFor=\"radio-2\"></label>\r\n                        <p>No</p>\r\n                      </div>\r\n                    </Space>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={8} sm={12} xs={24}>\r\n              <div className=\"input-group\">\r\n                <fieldset id=\"public\">\r\n                  <label className=\"title-label\" htmlFor=\"public\">\r\n                    Visibilty\r\n                  </label>\r\n                  <div className=\"radio\">\r\n                    <Space size={32}>\r\n                      <div className=\"radio__1\">\r\n                        <input\r\n                          id=\"radio-3\"\r\n                          type=\"radio\"\r\n                          name=\"public\"\r\n                          value={true}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              public: true,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.public ? true : false}\r\n                        />\r\n                        <label htmlFor=\"radio-3\"></label>\r\n                        <p>Public</p>\r\n                      </div>\r\n\r\n                      <div className=\"radio__2\">\r\n                        <input\r\n                          id=\"radio-4\"\r\n                          type=\"radio\"\r\n                          name=\"public\"\r\n                          value={false}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              public: false,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.public ? false : true}\r\n                        />\r\n                        <label htmlFor=\"radio-4\"></label>\r\n                        <p>Private</p>\r\n                      </div>\r\n                    </Space>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col lg={8} md={12} sm={24} xs={24}>\r\n              <label className=\"title-label\" htmlFor=\"tags\">\r\n                Tags\r\n              </label>\r\n              <Tags\r\n                storyInfo={storyInfo}\r\n                tags={storyInfo.tags}\r\n                setTags={setStoryInfo}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row gutter={[16, 16]}>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Form.Item label=\"Main Characters\">\r\n                <div className=\"input-group\">\r\n                  <Row>\r\n                    <Col span={22}>\r\n                      <select\r\n                        value={currentChar}\r\n                        disabled={\r\n                          storyInfo.mainCharacters.length >= 5 ? true : false\r\n                        }\r\n                        onChange={(e) => setCurrentChar(e.target.value)}\r\n                        className=\"form-input select-add-input\"\r\n                        name=\"mainCharacters\"\r\n                      >\r\n                        <option selected value=\"\" disabled>\r\n                          Choose\r\n                        </option>\r\n                        {props.characters\r\n                          ?.filter(\r\n                            (c) => !storyInfo.mainCharacters.includes(c.id)\r\n                          )\r\n                          .map((char) => (\r\n                            <option\r\n                              key={char.id}\r\n                              value={char.id}\r\n                            >{`${char.firstname} ${char.lastname}`}</option>\r\n                          ))}\r\n                      </select>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                      <div\r\n                        className=\"form-input select-add-input-iconbox\"\r\n                        onClick={addCharacter}\r\n                      >\r\n                        <span>+</span>\r\n                      </div>\r\n                    </Col>\r\n                    <small>You can add up to 5 main characters</small>\r\n                  </Row>\r\n                </div>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Row gutter={[16, 16]}>\r\n                {props.characters\r\n                  .filter((c) => storyInfo.mainCharacters.indexOf(c.id) !== -1)\r\n                  .map((char) => (\r\n                    <Col md={12} sm={24}>\r\n                      <div key={char.id} className=\"main-selected\">\r\n                        <div className=\"main-avatar\">\r\n                          <img src={char.image} alt={char.firstname} />\r\n                        </div>\r\n                        <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                        <ion-icon\r\n                          onClick={() => removeCharacter(char.id)}\r\n                          name=\"close-circle\"\r\n                        ></ion-icon>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row align=\"bottom\" gutter={[24, 24]}>\r\n            <Col md={12} sm={24} xs={24}>\r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"banner\">Upload a cover</label>\r\n                <UploadImage\r\n                  storyInfo={storyInfo}\r\n                  onChangeFunc={setStoryInfo}\r\n                />\r\n              </div>\r\n            </Col>\r\n\r\n            <InputGroup\r\n              required={false}\r\n              sm={24}\r\n              xs={24}\r\n              md={12}\r\n              lg={12}\r\n              id=\"banner\"\r\n              type=\"text\"\r\n              name=\"banner\"\r\n              title=\"Or submit a link to an image\"\r\n              placeholder=\"\"\r\n              value={\r\n                typeof storyInfo.banner !== \"object\" ? storyInfo.banner : \"\"\r\n              }\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n            />\r\n          </Row>\r\n          <Divider />\r\n          {props.loading || props.storyId ? (\r\n            <button disabled>\r\n              <Spin />\r\n            </button>\r\n          ) : (\r\n            <button type=\"submit\">Create</button>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  newStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}