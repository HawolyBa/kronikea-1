{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory, getUserLocations } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\n\nconst NewChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    storyExists,\n    story,\n    locations\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n  }, []);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n\n  const submit = values => {\n    console.log(values);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  story: state.stories.story,\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations\n});\n\nexport default connect(mapStateToProps, {\n  getStory,\n  getUserCharacters,\n  getUserLocations\n})(NewChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","connect","Form","useRouter","useAuth","getStory","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","NewChapter","props","form","useForm","characters","loading","storyExists","story","locations","auth","router","useEffect","query","id","user","uid","submit","values","console","log","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  getUserLocations,\r\n} from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\r\n\r\nconst NewChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { characters, loading, storyExists, story, locations } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          {/* <div className=\"custom-form\">\r\n            <div className=\"inner\"> */}\r\n          <h2 className=\"side-heading\">Add a new chapter</h2>\r\n          <ChapterForm\r\n            submit={submit}\r\n            form={form}\r\n            characters={characters}\r\n            locations={locations}\r\n          />\r\n          {/* </div> */}\r\n          {/* </div> */}\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStory,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n})(NewChapter);\r\n"]},"metadata":{},"sourceType":"module"}