{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\profile\\\\LinkComp.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Input, Tooltip } from \"antd\";\n\nvar LinkComp = function LinkComp(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      info = _ref.info,\n      setInfo = _ref.setInfo;\n  return __jsx(Form.Item, {\n    name: name,\n    rules: [{\n      type: \"url\",\n      message: \"This field must be a valid url.\"\n    }, function () {\n      return {\n        validator: function validator(_, value) {\n          if (value.includes(name)) {\n            setInfo(_objectSpread(_objectSpread({}, info), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, info[name]), {}, {\n              valid: true\n            }))));\n            return Promise.resolve();\n          } else if (value.length === 0) {\n            setInfo(_objectSpread(_objectSpread({}, info), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, info[name]), {}, {\n              valid: true\n            }))));\n            return Promise.resolve();\n          } else {\n            setInfo(_objectSpread(_objectSpread({}, info), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, info[name]), {}, {\n              valid: false\n            }))));\n            return Promise.reject(new Error(\"The link is not a valid \".concat(label, \" url\")));\n          }\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    addonBefore: __jsx(Tooltip, {\n      title: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(\"ion-icon\", {\n      name: \"logo-\".concat(name),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })),\n    addonAfter: __jsx(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }),\n    onChange: function onChange(e) {\n      return setInfo(_objectSpread(_objectSpread({}, info), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, info[name]), {}, {\n        value: e.target.value\n      }))));\n    },\n    value: info[name].value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = LinkComp;\nexport default LinkComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkComp\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/profile/LinkComp.js"],"names":["Form","Input","Tooltip","LinkComp","name","label","info","setInfo","type","message","validator","_","value","includes","valid","Promise","resolve","length","reject","Error","e","target"],"mappings":";;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,QAAqC,MAArC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnD,SACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAE,CACL;AACEI,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL;AAAA,aAAO;AACLC,QAAAA,SADK,qBACKC,CADL,EACQC,KADR,EACe;AAClB,cAAIA,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxBG,YAAAA,OAAO,iCAAMD,IAAN,2BAAaF,IAAb,kCAAyBE,IAAI,CAACF,IAAD,CAA7B;AAAqCU,cAAAA,KAAK,EAAE;AAA5C,iBAAP;AACA,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD,WAHD,MAGO,IAAIJ,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AAC7BV,YAAAA,OAAO,iCAAMD,IAAN,2BAAaF,IAAb,kCAAyBE,IAAI,CAACF,IAAD,CAA7B;AAAqCU,cAAAA,KAAK,EAAE;AAA5C,iBAAP;AACA,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACD,WAHM,MAGA;AACLT,YAAAA,OAAO,iCAAMD,IAAN,2BAAaF,IAAb,kCAAyBE,IAAI,CAACF,IAAD,CAA7B;AAAqCU,cAAAA,KAAK,EAAE;AAA5C,iBAAP;AACA,mBAAOC,OAAO,CAACG,MAAR,CACL,IAAIC,KAAJ,mCAAqCd,KAArC,UADK,CAAP;AAGD;AACF;AAdI,OAAP;AAAA,KALK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyBE,MAAC,KAAD;AACE,IAAA,WAAW,EACT,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,IAAI,iBAAUD,IAAV,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ;AAME,IAAA,UAAU,EAAE;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd;AAOE,IAAA,QAAQ,EAAE,kBAACgB,CAAD;AAAA,aACRb,OAAO,iCAAMD,IAAN,2BAAaF,IAAb,kCAAyBE,IAAI,CAACF,IAAD,CAA7B;AAAqCQ,QAAAA,KAAK,EAAEQ,CAAC,CAACC,MAAF,CAAST;AAArD,WADC;AAAA,KAPZ;AAUE,IAAA,KAAK,EAAEN,IAAI,CAACF,IAAD,CAAJ,CAAWQ,KAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AAwCD,CAzCD;;KAAMT,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { Form, Input, Tooltip } from \"antd\";\r\n\r\nconst LinkComp = ({ name, label, info, setInfo }) => {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      rules={[\r\n        {\r\n          type: \"url\",\r\n          message: \"This field must be a valid url.\",\r\n        },\r\n        () => ({\r\n          validator(_, value) {\r\n            if (value.includes(name)) {\r\n              setInfo({ ...info, [name]: { ...info[name], valid: true } });\r\n              return Promise.resolve();\r\n            } else if (value.length === 0) {\r\n              setInfo({ ...info, [name]: { ...info[name], valid: true } });\r\n              return Promise.resolve();\r\n            } else {\r\n              setInfo({ ...info, [name]: { ...info[name], valid: false } });\r\n              return Promise.reject(\r\n                new Error(`The link is not a valid ${label} url`)\r\n              );\r\n            }\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input\r\n        addonBefore={\r\n          <Tooltip title={label}>\r\n            <ion-icon name={`logo-${name}`}></ion-icon>\r\n          </Tooltip>\r\n        }\r\n        addonAfter={<ion-icon name=\"checkmark\"></ion-icon>}\r\n        onChange={(e) =>\r\n          setInfo({ ...info, [name]: { ...info[name], value: e.target.value } })\r\n        }\r\n        value={info[name].value}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default LinkComp;\r\n"]},"metadata":{},"sourceType":"module"}