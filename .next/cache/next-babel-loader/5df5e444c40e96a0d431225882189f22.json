{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\";\nvar __jsx = React.createElement;\nimport React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Result, Button, Form, Divider, Row, Col, Skeleton } from \"antd\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport withLoading from \"../../../../components/hoc/withLoading\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\nimport CharacterSelector from \"../../../../components/forms/CharacterSelector\";\nimport withAuth from \"../../../../components/hoc/withAuth\";\n\nconst NewChapter = props => {\n  const router = useRouter();\n  const [form] = Form.useForm();\n  const {\n    characters,\n    storyExists,\n    loading,\n    story,\n    auth\n  } = props;\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  const [value, setValue] = React.useState([{\n    type: \"paragraph\",\n    children: [{\n      text: \"A line of text in a paragraph.\"\n    }]\n  }]); // React.useEffect(() => {\n  // }, []);\n\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, []);\n\n  const submit = values => {\n    console.log(values);\n  };\n\n  return story ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Coucou\") : __jsx(Skeleton.Avatar, {\n    loading: story.authorId,\n    shape: \"square\",\n    size: 265,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }); //   <div className=\"custom-form\">\n  //     <div className=\"inner\">\n  //       {story.authorId === auth.user.uid ? (\n  //         <div>\n  //           <h2 className=\"side-heading\">Add a new chapter</h2>\n  //           <ChapterForm submit={submit} form={form} />\n  //           {/* <Slate\n  //             editor={editor}\n  //             value={value}\n  //             onChange={(newValue) => setValue(newValue)}\n  //           >\n  //             <Editable\n  //               onKeyDown={(event) => {\n  //                 if (event.key === \"&\") {\n  //                   event.preventDefault();\n  //                   // editor.insertText(\"and\");\n  //                 }\n  //               }}\n  //             />\n  //           </Slate> */}\n  //           <Divider />\n  //           <Row gutter={24}>\n  //             <Col md={12} xs={24} sm={24}>\n  //               <CharacterSelector\n  //                 label={\"Characters in this chapter\"}\n  //                 arrInForm={\"characters\"}\n  //                 form={form}\n  //                 type=\"chapter\"\n  //                 characters={characters}\n  //                 lg1={24}\n  //               />\n  //             </Col>\n  //           </Row>\n  //         </div>\n  //       ) : (\n  //         <Result\n  //           status=\"403\"\n  //           title=\"403\"\n  //           subTitle=\"Sorry, you are not authorized to access this page.\"\n  //           extra={<Button type=\"primary\">Back Home</Button>}\n  //         />\n  //       )}\n  //     </div>\n  //   </div>\n  // ) : (\n  //   <Result\n  //     status=\"404\"\n  //     title=\"404\"\n  //     subTitle=\"Sorry, the page you visited does not exist.\"\n  //     extra={<Button type=\"primary\">Back Home</Button>}\n  //   />\n  // );\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  story: state.stories.story\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  getStory\n})(withAuth(NewChapter));","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","Suspense","connect","Result","Button","Form","Divider","Row","Col","Skeleton","createEditor","Slate","Editable","withReact","useRouter","useAuth","getStory","getUserCharacters","withLoading","ChapterForm","CharacterSelector","withAuth","NewChapter","props","router","form","useForm","characters","storyExists","loading","story","auth","editor","useMemo","value","setValue","useState","type","children","text","useEffect","query","id","user","submit","values","console","log","authorId","mapStateToProps","state","userCharacters","stories"],"mappings":"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","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Result, Button, Form, Divider, Row, Col, Skeleton } from \"antd\";\r\nimport { createEditor } from \"slate\";\r\nimport { Slate, Editable, withReact } from \"slate-react\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport { getStory } from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\nimport withLoading from \"../../../../components/hoc/withLoading\";\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\nimport CharacterSelector from \"../../../../components/forms/CharacterSelector\";\r\nimport withAuth from \"../../../../components/hoc/withAuth\";\r\n\r\nconst NewChapter = (props) => {\r\n  const router = useRouter();\r\n  const [form] = Form.useForm();\r\n  const { characters, storyExists, loading, story, auth } = props;\r\n  const editor = React.useMemo(() => withReact(createEditor()), []);\r\n\r\n  const [value, setValue] = React.useState([\r\n    {\r\n      type: \"paragraph\",\r\n      children: [{ text: \"A line of text in a paragraph.\" }],\r\n    },\r\n  ]);\r\n\r\n  // React.useEffect(() => {\r\n\r\n  // }, []);\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, []);\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return story ? (\r\n    <div>Coucou</div>\r\n  ) : (\r\n    <Skeleton.Avatar\r\n      loading={story.authorId}\r\n      shape=\"square\"\r\n      size={265}\r\n      active\r\n    />\r\n  );\r\n\r\n  //   <div className=\"custom-form\">\r\n  //     <div className=\"inner\">\r\n  //       {story.authorId === auth.user.uid ? (\r\n  //         <div>\r\n  //           <h2 className=\"side-heading\">Add a new chapter</h2>\r\n  //           <ChapterForm submit={submit} form={form} />\r\n  //           {/* <Slate\r\n  //             editor={editor}\r\n  //             value={value}\r\n  //             onChange={(newValue) => setValue(newValue)}\r\n  //           >\r\n  //             <Editable\r\n  //               onKeyDown={(event) => {\r\n  //                 if (event.key === \"&\") {\r\n  //                   event.preventDefault();\r\n  //                   // editor.insertText(\"and\");\r\n  //                 }\r\n  //               }}\r\n  //             />\r\n  //           </Slate> */}\r\n  //           <Divider />\r\n  //           <Row gutter={24}>\r\n  //             <Col md={12} xs={24} sm={24}>\r\n  //               <CharacterSelector\r\n  //                 label={\"Characters in this chapter\"}\r\n  //                 arrInForm={\"characters\"}\r\n  //                 form={form}\r\n  //                 type=\"chapter\"\r\n  //                 characters={characters}\r\n  //                 lg1={24}\r\n  //               />\r\n  //             </Col>\r\n  //           </Row>\r\n  //         </div>\r\n  //       ) : (\r\n  //         <Result\r\n  //           status=\"403\"\r\n  //           title=\"403\"\r\n  //           subTitle=\"Sorry, you are not authorized to access this page.\"\r\n  //           extra={<Button type=\"primary\">Back Home</Button>}\r\n  //         />\r\n  //       )}\r\n  //     </div>\r\n  //   </div>\r\n  // ) : (\r\n  //   <Result\r\n  //     status=\"404\"\r\n  //     title=\"404\"\r\n  //     subTitle=\"Sorry, the page you visited does not exist.\"\r\n  //     extra={<Button type=\"primary\">Back Home</Button>}\r\n  //   />\r\n  // );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  story: state.stories.story,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserCharacters,\r\n  getStory,\r\n})(withAuth(NewChapter));\r\n"]},"metadata":{},"sourceType":"module"}