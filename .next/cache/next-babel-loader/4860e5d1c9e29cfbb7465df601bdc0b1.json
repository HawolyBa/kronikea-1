{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory, getUserLocations } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\n\nvar NewChapter = function NewChapter(props) {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var characters = props.characters,\n      loading = props.loading,\n      storyExists = props.storyExists,\n      story = props.story,\n      locations = props.locations;\n  var auth = useAuth();\n  var router = useRouter();\n  React.useEffect(function () {\n    props.getStory(router.query.id);\n  }, []);\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n\n  var submit = function submit(values) {\n    console.log(values);\n  };\n\n  React.useEffect(function () {\n    console.log(form.getFieldsValue());\n  }, [form.getFieldValue(\"body\")]);\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(NewChapter, \"WkG0E1Yd+xAG11QzTlR0JOH+W3E=\", false, function () {\n  return [Form.useForm, useAuth, useRouter];\n});\n\n_c = NewChapter;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    story: state.stories.story,\n    characters: state.characters.userCharacters,\n    storyExists: state.stories.storyExists,\n    loading: state.stories.loading,\n    locations: state.stories.userLocations\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStory: getStory,\n  getUserCharacters: getUserCharacters,\n  getUserLocations: getUserLocations\n})(NewChapter);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewChapter\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","connect","Form","useRouter","useAuth","getStory","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","NewChapter","props","useForm","form","characters","loading","storyExists","story","locations","auth","router","useEffect","query","id","user","uid","submit","values","console","log","getFieldsValue","getFieldValue","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  getUserLocations,\r\n} from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\r\n\r\nconst NewChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { characters, loading, storyExists, story, locations } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(form.getFieldsValue());\r\n  }, [form.getFieldValue(\"body\")]);\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStory,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n})(NewChapter);\r\n"]},"metadata":{},"sourceType":"module"}