{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_CHARACTERS, GET_FAVORITE_CHARACTERS, ADD_CHARACTER } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nexport var addCharacter = function addCharacter(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_CHARACTER,\n      payload: {\n        loading: true\n      }\n    });\n    var imageName = \"\".concat(data.firstname.toLowerCase()).concat(data.lastname && \"_\").concat(data.lastname && data.lastname.toLowerCase());\n\n    if (typeof data.image === \"object\") {\n      storage.ref(\"\".concat(auth.currentUser.uid, \"/\").concat(imageName)).put(data.image).then(function () {\n        return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n      }).then(function (url) {\n        return db.collection(\"characters\").add(_objectSpread(_objectSpread({}, data), {}, {\n          image: url,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          likesCount: 0,\n          likes: [],\n          dislikes: []\n        }));\n      }).then(function (res) {\n        message.success(\"Character added successfully\");\n        dispatch({\n          type: ADD_CHARACTER,\n          payload: {\n            message: \"Character added successfully\",\n            characterId: res.id,\n            loading: false\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    } else {\n      db.collection(\"characters\").add(_objectSpread(_objectSpread({}, data), {}, {\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        likesCount: 0,\n        likes: [],\n        dislikes: []\n      })).then(function (res) {\n        message.success(\"Character added successfully\");\n        dispatch({\n          type: ADD_CHARACTER,\n          payload: {\n            message: \"Character added successfully\",\n            characterId: res.id,\n            loading: false\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  };\n};\nexport var getUserCharacters = function getUserCharacters() {\n  return function (dispatch) {\n    db.collection(\"characters\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_CHARACTERS,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteCharacters = function getFavoriteCharacters() {\n  return function (dispatch) {\n    db.collection(\"charactersLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().characterId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"characters\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_CHARACTERS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/charactersActions.js"],"names":["GET_USER_CHARACTERS","GET_FAVORITE_CHARACTERS","ADD_CHARACTER","db","auth","addCharacter","data","dispatch","type","payload","loading","imageName","firstname","toLowerCase","lastname","image","storage","ref","currentUser","uid","put","then","child","getDownloadURL","url","collection","add","createdAt","firebase","firestore","FieldValue","serverTimestamp","likesCount","likes","dislikes","res","message","success","characterId","id","err","error","getUserCharacters","where","get","docs","items","forEach","doc","getFavoriteCharacters","favArr","users","result","map","user","Promise","all","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_CHARACTERS,\r\n  GET_FAVORITE_CHARACTERS,\r\n  ADD_CHARACTER,\r\n} from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\n\r\nexport const addCharacter = (data) => (dispatch) => {\r\n  dispatch({ type: ADD_CHARACTER, payload: { loading: true } });\r\n  const imageName = `${data.firstname.toLowerCase()}${data.lastname && \"_\"}${\r\n    data.lastname && data.lastname.toLowerCase()\r\n  }`;\r\n  if (typeof data.image === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.image)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db.collection(\"characters\").add({\r\n          ...data,\r\n          image: url,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          likesCount: 0,\r\n          likes: [],\r\n          dislikes: [],\r\n        });\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Character added successfully\");\r\n        dispatch({\r\n          type: ADD_CHARACTER,\r\n          payload: {\r\n            message: \"Character added successfully\",\r\n            characterId: res.id,\r\n            loading: false,\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"characters\")\r\n      .add({\r\n        ...data,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesCount: 0,\r\n        likes: [],\r\n        dislikes: [],\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Character added successfully\");\r\n        dispatch({\r\n          type: ADD_CHARACTER,\r\n          payload: {\r\n            message: \"Character added successfully\",\r\n            characterId: res.id,\r\n            loading: false,\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getUserCharacters = () => (dispatch) => {\r\n  db.collection(\"characters\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_CHARACTERS, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteCharacters = () => (dispatch) => {\r\n  db.collection(\"charactersLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().characterId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"characters\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_CHARACTERS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}