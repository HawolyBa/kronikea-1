{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\edit.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Result, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../../redux/actions/charactersActions\";\nimport { getStory, editStory } from \"../../../redux/actions/storiesActions\"; //import Loader from \"../../../components/hoc/withLoading\";\n\nimport StoryForm from \"../../../components/forms/StoryForm\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\n\nvar EditStory = function EditStory(props) {\n  _s();\n\n  var auth = useAuth();\n  var router = useRouter();\n  var story = props.story,\n      loading = props.loading,\n      characters = props.characters,\n      loadingStory = props.loadingStory,\n      storyExists = props.storyExists;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mature = _React$useState2[0],\n      setMature = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visibility = _React$useState4[0],\n      setVisibility = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    if (router.query.id) {\n      props.getStory(router.query.id);\n    }\n  }, [router.query.id]);\n\n  var submit = function submit(values) {\n    delete values.currentChar;\n    props.editStory(values, router.query.id);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists && story.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user.uid === story.authorId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Edit story: \", story.title), __jsx(StoryForm, {\n    type: \"edit\",\n    submit: submit,\n    characters: characters,\n    loading: loading,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    story: story,\n    loadingStory: loadingStory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(EditStory, \"JrhHg2O4wz6lWANOW4QlRcdHYj8=\", false, function () {\n  return [useAuth, useRouter, Form.useForm];\n});\n\n_c = EditStory;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    confirmMessage: state.stories.message,\n    storyId: state.stories.storyId,\n    loadingStory: state.stories.loadingStory,\n    story: state.stories.story,\n    loading: state.stories.loading,\n    storyExists: state.stories.storyExists\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  editStory: editStory,\n  getStory: getStory\n})(EditStory);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStory\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/edit.js"],"names":["React","Form","Result","Button","connect","useRouter","useAuth","getUserCharacters","getStory","editStory","StoryForm","LoadingScreen","RedirectComp","EditStory","props","auth","router","story","loading","characters","loadingStory","storyExists","useForm","form","useState","mature","setMature","visibility","setVisibility","useEffect","user","uid","query","id","submit","values","currentChar","title","authorId","mapStateToProps","state","userCharacters","confirmMessage","stories","message","storyId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Result, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../../redux/actions/charactersActions\";\r\nimport { getStory, editStory } from \"../../../redux/actions/storiesActions\";\r\n\r\n//import Loader from \"../../../components/hoc/withLoading\";\r\nimport StoryForm from \"../../../components/forms/StoryForm\";\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\n\r\nconst EditStory = (props) => {\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const { story, loading, characters, loadingStory, storyExists } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (router.query.id) {\r\n      props.getStory(router.query.id);\r\n    }\r\n  }, [router.query.id]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    props.editStory(values, router.query.id);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type={\"404\"} condition={storyExists && story.title}>\r\n        <RedirectComp type=\"403\" condition={auth.user.uid === story.authorId}>\r\n          <div className=\"new-story custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Edit story: {story.title}</h2>\r\n              <StoryForm\r\n                type=\"edit\"\r\n                submit={submit}\r\n                characters={characters}\r\n                loading={loading}\r\n                form={form}\r\n                mature={mature}\r\n                setMature={setMature}\r\n                visibility={visibility}\r\n                setVisibility={setVisibility}\r\n                story={story}\r\n                loadingStory={loadingStory}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loadingStory: state.stories.loadingStory,\r\n  story: state.stories.story,\r\n  loading: state.stories.loading,\r\n  storyExists: state.stories.storyExists,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserCharacters,\r\n  editStory,\r\n  getStory,\r\n})(EditStory);\r\n"]},"metadata":{},"sourceType":"module"}