{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Row, Col, Spin, Pagination as Paginate, Divider } from \"antd\";\nimport { StoriesGrid } from \"./Grid\";\n\nconst Pagination = ({\n  data,\n  xs,\n  sm,\n  lg,\n  xl,\n  md,\n  type,\n  gutter,\n  itemType\n}) => {\n  const [pagination, setPagination] = React.useState({\n    currentPage: 1,\n    datasPerPage: 12\n  });\n  const {\n    currentPage,\n    datasPerPage\n  } = pagination;\n  const indexOfLastData = currentPage * datasPerPage;\n  const indexOfFirstData = indexOfLastData - datasPerPage;\n  const currentDatas = data.slice(indexOfFirstData, indexOfLastData);\n\n  const handleClick = e => setPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n    currentPage: Number(e)\n  }));\n\n  const renderDatas = itemType === \"stories\" ? __jsx(StoriesGrid, {\n    xs: xs,\n    lg: lg,\n    sm: sm,\n    xl: xl,\n    md: md,\n    gutter: gutter,\n    type: type,\n    stories: currentDatas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }) : null;\n  let pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, renderDatas, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(Paginate, {\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Pagination.js"],"names":["React","Row","Col","Spin","Pagination","Paginate","Divider","StoriesGrid","data","xs","sm","lg","xl","md","type","gutter","itemType","pagination","setPagination","useState","currentPage","datasPerPage","indexOfLastData","indexOfFirstData","currentDatas","slice","handleClick","e","Number","renderDatas","pageNumbers","i","Math","ceil","length","push","total","range"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAU,IAAIC,QAAvC,EAAiDC,OAAjD,QAAgE,MAAhE;AAEA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMH,UAAU,GAAG,CAAC;AAAEI,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,EAAZ;AAAgBC,EAAAA,EAAhB;AAAoBC,EAAAA,EAApB;AAAwBC,EAAAA,EAAxB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,MAAlC;AAA0CC,EAAAA;AAA1C,CAAD,KAA0D;AAC3E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACmB,QAAN,CAAe;AACjDC,IAAAA,WAAW,EAAE,CADoC;AAEjDC,IAAAA,YAAY,EAAE;AAFmC,GAAf,CAApC;AAIA,QAAM;AAAED,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCJ,UAAtC;AACA,QAAMK,eAAe,GAAGF,WAAW,GAAGC,YAAtC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAA3C;AACA,QAAMG,YAAY,GAAGhB,IAAI,CAACiB,KAAL,CAAWF,gBAAX,EAA6BD,eAA7B,CAArB;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAClBT,aAAa,iCAAMD,UAAN;AAAkBG,IAAAA,WAAW,EAAEQ,MAAM,CAACD,CAAD;AAArC,KADf;;AAGA,QAAME,WAAW,GACfb,QAAQ,KAAK,SAAb,GACE,MAAC,WAAD;AACE,IAAA,EAAE,EAAEP,EADN;AAEE,IAAA,EAAE,EAAEE,EAFN;AAGE,IAAA,EAAE,EAAED,EAHN;AAIE,IAAA,EAAE,EAAEE,EAJN;AAKE,IAAA,EAAE,EAAEC,EALN;AAME,IAAA,MAAM,EAAEE,MANV;AAOE,IAAA,IAAI,EAAED,IAPR;AAQE,IAAA,OAAO,EAAEU,YARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAWI,IAZN;AAcA,MAAIM,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUzB,IAAI,CAAC0B,MAAL,GAAcb,YAAxB,CAArB,EAA4DU,CAAC,EAA7D,EAAiE;AAC/DD,IAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AAED,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WADH,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,QAAD;AACE,IAAA,eAAe,MADjB;AAEE,IAAA,QAAQ,EAAEH,WAFZ;AAGE,IAAA,KAAK,EAAElB,IAAI,CAAC0B,MAHd;AAIE,IAAA,QAAQ,EAAEb,YAJZ;AAKE,IAAA,SAAS,EAAE,CAACe,KAAD,EAAQC,KAAR,KACR,GAAEA,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,OAAMD,KAAM,QANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAeD,CA/CD;;AAiDA,eAAehC,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Spin, Pagination as Paginate, Divider } from \"antd\";\r\n\r\nimport { StoriesGrid } from \"./Grid\";\r\n\r\nconst Pagination = ({ data, xs, sm, lg, xl, md, type, gutter, itemType }) => {\r\n  const [pagination, setPagination] = React.useState({\r\n    currentPage: 1,\r\n    datasPerPage: 12,\r\n  });\r\n  const { currentPage, datasPerPage } = pagination;\r\n  const indexOfLastData = currentPage * datasPerPage;\r\n  const indexOfFirstData = indexOfLastData - datasPerPage;\r\n  const currentDatas = data.slice(indexOfFirstData, indexOfLastData);\r\n\r\n  const handleClick = (e) =>\r\n    setPagination({ ...pagination, currentPage: Number(e) });\r\n\r\n  const renderDatas =\r\n    itemType === \"stories\" ? (\r\n      <StoriesGrid\r\n        xs={xs}\r\n        lg={lg}\r\n        sm={sm}\r\n        xl={xl}\r\n        md={md}\r\n        gutter={gutter}\r\n        type={type}\r\n        stories={currentDatas}\r\n      />\r\n    ) : null;\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {renderDatas}\r\n      <Divider />\r\n      <Paginate\r\n        showQuickJumper\r\n        onChange={handleClick}\r\n        total={data.length}\r\n        pageSize={datasPerPage}\r\n        showTotal={(total, range) =>\r\n          `${range[0]}-${range[1]} of ${total} items`\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}