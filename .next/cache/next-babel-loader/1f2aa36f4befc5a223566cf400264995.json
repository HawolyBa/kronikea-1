{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\hoc\\\\withLoading.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nconst withLoading = WrappedComponent => {\n  const [isLoading, setLoading] = React.useState(true);\n\n  const setLoadingState = isComponentLoading => {\n    setLoading(isComponentLoading);\n  };\n\n  return __jsx(React.Fragment, null, isLoading && __jsx(\"div\", {\n    className: \"loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }))), __jsx(WrappedComponent, _extends({}, props, {\n    setLoading: setLoadingState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default withLoading;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/hoc/withLoading.js"],"names":["React","withLoading","WrappedComponent","isLoading","setLoading","useState","setLoadingState","isComponentLoading","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AACxC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAhC;;AACA,QAAMC,eAAe,GAAIC,kBAAD,IAAwB;AAC9CH,IAAAA,UAAU,CAACG,kBAAD,CAAV;AACD,GAFD;;AAIA,SACE,4BACGJ,SAAS,IACR;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAFJ,EAUE,MAAC,gBAAD,eAAsBK,KAAtB;AAA6B,IAAA,UAAU,EAAEF,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,CADF;AAcD,CApBD;;AAsBA,eAAeL,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst withLoading = (WrappedComponent) => {\r\n  const [isLoading, setLoading] = React.useState(true);\r\n  const setLoadingState = (isComponentLoading) => {\r\n    setLoading(isComponentLoading);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <div className=\"loader-container\">\r\n          <div className=\"loader\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <WrappedComponent {...props} setLoading={setLoadingState} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withLoading;\r\n"]},"metadata":{},"sourceType":"module"}