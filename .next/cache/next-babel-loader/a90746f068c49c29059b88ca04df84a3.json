{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\[chapid]\\\\edit.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../../hooks/userHooks\";\nimport { getStory, getChapter, editChapter, getUserLocations } from \"../../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\n\nconst EditChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    storyExists,\n    story,\n    locations,\n    loadingChapter\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [body, setBody] = React.useState(\"\");\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n    props.getChapter(router.query.chapid);\n  }, []);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n\n  const submit = values => {\n    delete values.currentChar;\n    delete values.currentLoc;\n    props.addChapter(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      storyId: story.id,\n      body,\n      status: values.status === \"true\"\n    }));\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    body: body,\n    setBody: setBody,\n    type: \"edit\",\n    loadingChapter: loadingChapter,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  chapter: state.stories.chapter,\n  story: state.stories.story,\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations,\n  loadingChapter: state.stories.loadingChapter\n});\n\nexport default connect(mapStateToProps, {\n  getStory,\n  getChapter,\n  getUserCharacters,\n  getUserLocations,\n  editChapter\n})(EditChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/[chapid]/edit.js"],"names":["React","connect","Form","useRouter","useAuth","getStory","getChapter","editChapter","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","EditChapter","props","form","useForm","characters","loading","storyExists","story","locations","loadingChapter","auth","router","body","setBody","useState","useEffect","query","id","chapid","user","uid","submit","values","currentChar","currentLoc","addChapter","authorName","username","storyId","status","authorId","mapStateToProps","state","chapter","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  getChapter,\r\n  editChapter,\r\n  getUserLocations,\r\n} from \"../../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\r\n\r\nconst EditChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const {\r\n    characters,\r\n    loading,\r\n    storyExists,\r\n    story,\r\n    locations,\r\n    loadingChapter,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const [body, setBody] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n    props.getChapter(router.query.chapid);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    delete values.currentLoc;\r\n\r\n    props.addChapter({\r\n      ...values,\r\n      authorName: auth.user.username,\r\n      storyId: story.id,\r\n      body,\r\n      status: values.status === \"true\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n                body={body}\r\n                setBody={setBody}\r\n                type=\"edit\"\r\n                loadingChapter={loadingChapter}\r\n                loading={loading}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  chapter: state.stories.chapter,\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n  loadingChapter: state.stories.loadingChapter,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStory,\r\n  getChapter,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n  editChapter,\r\n})(EditChapter);\r\n"]},"metadata":{},"sourceType":"module"}