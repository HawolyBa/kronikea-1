{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\auth.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { Input } from \"antd\";\nimport Login from \"../components/auth/Login\";\nimport Register from \"../components/auth/Register\";\nimport { log_in } from \"../redux/actions/userActions\";\nimport { useAuth } from \"../hooks/userHooks\";\n\nconst auth = ({\n  log_in\n}) => {\n  const {\n    0: isFlipped,\n    1: setIsFlipped\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const auth = useAuth();\n  const Router = useRouter();\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsFlipped(!isFlipped);\n  };\n\n  useEffect(() => {\n    if (auth.user && auth.user.username) {\n      Router.back();\n    }\n  }, [auth.user]);\n\n  const signin = () => auth.signin(email, password);\n\n  const signup = () => auth.signup(email, password, username);\n\n  return __jsx(\"div\", {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, !auth.isLoading && !auth.user ? __jsx(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Login, {\n    signin: signin,\n    setPassword: setPassword,\n    setEmail: setEmail,\n    email: email,\n    password: password,\n    handleClick: handleClick,\n    auth: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), __jsx(Register, {\n    auth: auth,\n    setPassword: setPassword,\n    setEmail: setEmail,\n    signup: signup,\n    email: email,\n    password: password,\n    username: username,\n    setUsername: setUsername,\n    confirmPassword: confirmPassword,\n    setConfirmPassword: setConfirmPassword,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })) : !auth.isLoading && auth.user && !auth.user.username ? __jsx(\"div\", {\n    className: \"inner-auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Choose a username\"), __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })) : __jsx(\"div\", {\n    className: \"loader-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  log_in\n})(auth);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/auth.js"],"names":["React","useState","useEffect","ReactCardFlip","connect","useRouter","Input","Login","Register","log_in","useAuth","auth","isFlipped","setIsFlipped","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","Router","handleClick","e","preventDefault","user","back","signin","signup","isLoading","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Input } from \"antd\";\r\n\r\nimport Login from \"../components/auth/Login\";\r\nimport Register from \"../components/auth/Register\";\r\nimport { log_in } from \"../redux/actions/userActions\";\r\nimport { useAuth } from \"../hooks/userHooks\";\r\n\r\nconst auth = ({ log_in }) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const auth = useAuth();\r\n  const Router = useRouter();\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.user && auth.user.username) {\r\n      Router.back();\r\n    }\r\n  }, [auth.user]);\r\n\r\n  const signin = () => auth.signin(email, password);\r\n  const signup = () => auth.signup(email, password, username);\r\n\r\n  return (\r\n    <div className=\"authentication\">\r\n      {!auth.isLoading && !auth.user ? (\r\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n          <Login\r\n            signin={signin}\r\n            setPassword={setPassword}\r\n            setEmail={setEmail}\r\n            email={email}\r\n            password={password}\r\n            handleClick={handleClick}\r\n            auth={auth}\r\n          />\r\n          <Register\r\n            auth={auth}\r\n            setPassword={setPassword}\r\n            setEmail={setEmail}\r\n            signup={signup}\r\n            email={email}\r\n            password={password}\r\n            username={username}\r\n            setUsername={setUsername}\r\n            confirmPassword={confirmPassword}\r\n            setConfirmPassword={setConfirmPassword}\r\n            handleClick={handleClick}\r\n          />\r\n        </ReactCardFlip>\r\n      ) : !auth.isLoading && auth.user && !auth.user.username ? (\r\n        <div className=\"inner-auth\">\r\n          <h2>Choose a username</h2>\r\n          <Input />\r\n        </div>\r\n      ) : (\r\n        <div className=\"loader-container\">\r\n          <div className=\"loader\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { log_in })(auth);\r\n"]},"metadata":{},"sourceType":"module"}