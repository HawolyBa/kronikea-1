{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\hooks\\\\notificationsHooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { auth, db } from \"../redux/fbConfig\";\nvar notificationContext = /*#__PURE__*/createContext();\nexport function ProvideNotification(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var notifications = useProvideNotification();\n  return __jsx(notificationContext.Provider, {\n    value: notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s(ProvideNotification, \"J7O0kMfYJ6l2d1GSAaB9O7mtxTc=\", false, function () {\n  return [useProvideNotification];\n});\n\n_c = ProvideNotification;\nexport var useNotifcations = function useNotifcations() {\n  _s2();\n\n  return useContext(notificationContext);\n};\n\n_s2(useNotifcations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideNotification() {\n  _s3();\n\n  var _useState = useState([]),\n      notifications = _useState[0],\n      setNotifications = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(0),\n      count = _useState3[0],\n      setCount = _useState3[1];\n\n  var markAsRead = function markAsRead(id) {\n    return db.collection(\"notifications\").doc(id).update({\n      read: true\n    });\n  };\n\n  var deleteOne = function deleteOne(id) {\n    return db.collection(\"notifications\").doc(id)[\"delete\"]();\n  };\n\n  var markAllAsRead = function markAllAsRead() {\n    var batch = db.batch();\n    var userId = auth.currentUser.uid;\n    db.collection(\"notifications\").where(\"recipient\", \"==\", userId).where(\"read\", \"==\", false).get().then(function (data) {\n      data.forEach(function (doc) {\n        batch.update(db.collection(\"notifications\").doc(doc.id), {\n          read: true\n        });\n      });\n      return batch.commit();\n    });\n  };\n\n  var deleteAll = function deleteAll() {\n    var batch = db.batch();\n    var userId = auth.currentUser.uid;\n    db.collection(\"notifications\").where(\"recipient\", \"==\", userId).get().then(function (data) {\n      data.forEach(function (doc) {\n        batch[\"delete\"](db.collection(\"notifications\").doc(doc.id));\n      });\n      return batch.commit();\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user && user.uid) {\n        db.collection(\"notifications\").where(\"recipient\", \"==\", user.uid).onSnapshot( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(docs) {\n            var items, getUsers, users;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    items = [];\n                    items = docs.docs.map(function (doc) {\n                      return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                        id: doc.id\n                      });\n                    }).sort(function (a, b) {\n                      a = typeof a.createdAt !== \"object\" ? new Date(a.createdAt) : new Date(a.createdAt.seconds);\n                      b = typeof b.createdAt !== \"object\" ? new Date(b.createdAt) : new Date(b.createdAt.seconds);\n                      return b > a ? -1 : b < a ? 1 : 0;\n                    });\n                    _context.next = 4;\n                    return db.collection(\"users\").get();\n\n                  case 4:\n                    getUsers = _context.sent;\n                    _context.next = 7;\n                    return getUsers.docs.map(function (u) {\n                      return _objectSpread(_objectSpread({}, u.data()), {}, {\n                        id: u.id\n                      });\n                    });\n\n                  case 7:\n                    users = _context.sent;\n                    items = items.map(function (notif) {\n                      var user = users.find(function (u) {\n                        return u.id === notif.sender;\n                      });\n                      return _objectSpread(_objectSpread({}, notif), {}, {\n                        user: user ? user : {}\n                      });\n                    });\n                    setNotifications(items);\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n        setIsLoading(false);\n      } else return;\n    }); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, [auth]);\n  useEffect(function () {\n    setCount(notifications.filter(function (n) {\n      return !n.read;\n    }).length);\n  }, [notifications]);\n  return {\n    isLoading: isLoading,\n    items: notifications,\n    markAsRead: markAsRead,\n    count: count,\n    deleteOne: deleteOne,\n    markAllAsRead: markAllAsRead,\n    deleteAll: deleteAll\n  };\n}\n\n_s3(useProvideNotification, \"lZkbvbjQgPf4cKu8o6b6ZqsChNE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideNotification\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/notificationsHooks.js"],"names":["React","useState","useEffect","useContext","createContext","auth","db","notificationContext","ProvideNotification","children","notifications","useProvideNotification","useNotifcations","setNotifications","isLoading","setIsLoading","count","setCount","markAsRead","id","collection","doc","update","read","deleteOne","markAllAsRead","batch","userId","currentUser","uid","where","get","then","data","forEach","commit","deleteAll","unsubscribe","onAuthStateChanged","user","onSnapshot","docs","items","map","sort","a","b","createdAt","Date","seconds","getUsers","u","users","notif","find","sender","filter","n","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { auth, db } from \"../redux/fbConfig\";\r\n\r\nconst notificationContext = createContext();\r\n\r\nexport function ProvideNotification({ children }) {\r\n  const notifications = useProvideNotification();\r\n  return (\r\n    <notificationContext.Provider value={notifications}>\r\n      {children}\r\n    </notificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useNotifcations = () => {\r\n  return useContext(notificationContext);\r\n};\r\n\r\nfunction useProvideNotification() {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const markAsRead = (id) =>\r\n    db.collection(\"notifications\").doc(id).update({ read: true });\r\n\r\n  const deleteOne = (id) => db.collection(\"notifications\").doc(id).delete();\r\n\r\n  const markAllAsRead = () => {\r\n    const batch = db.batch();\r\n    const userId = auth.currentUser.uid;\r\n\r\n    db.collection(\"notifications\")\r\n      .where(\"recipient\", \"==\", userId)\r\n      .where(\"read\", \"==\", false)\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((doc) => {\r\n          batch.update(db.collection(\"notifications\").doc(doc.id), {\r\n            read: true,\r\n          });\r\n        });\r\n        return batch.commit();\r\n      });\r\n  };\r\n\r\n  const deleteAll = () => {\r\n    const batch = db.batch();\r\n    const userId = auth.currentUser.uid;\r\n\r\n    db.collection(\"notifications\")\r\n      .where(\"recipient\", \"==\", userId)\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((doc) => {\r\n          batch.delete(db.collection(\"notifications\").doc(doc.id));\r\n        });\r\n        return batch.commit();\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user && user.uid) {\r\n        db.collection(\"notifications\")\r\n          .where(\"recipient\", \"==\", user.uid)\r\n          .onSnapshot(async (docs) => {\r\n            let items = [];\r\n            items = docs.docs\r\n              .map((doc) => ({ ...doc.data(), id: doc.id }))\r\n              .sort((a, b) => {\r\n                a =\r\n                  typeof a.createdAt !== \"object\"\r\n                    ? new Date(a.createdAt)\r\n                    : new Date(a.createdAt.seconds);\r\n                b =\r\n                  typeof b.createdAt !== \"object\"\r\n                    ? new Date(b.createdAt)\r\n                    : new Date(b.createdAt.seconds);\r\n\r\n                return b > a ? -1 : b < a ? 1 : 0;\r\n              });\r\n            const getUsers = await db.collection(\"users\").get();\r\n            const users = await getUsers.docs.map((u) => ({\r\n              ...u.data(),\r\n              id: u.id,\r\n            }));\r\n\r\n            items = items.map((notif) => {\r\n              const user = users.find((u) => u.id === notif.sender);\r\n              return {\r\n                ...notif,\r\n                user: user ? user : {},\r\n              };\r\n            });\r\n            setNotifications(items);\r\n          });\r\n        setIsLoading(false);\r\n      } else return;\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    setCount(notifications.filter((n) => !n.read).length);\r\n  }, [notifications]);\r\n\r\n  return {\r\n    isLoading,\r\n    items: notifications,\r\n    markAsRead,\r\n    count,\r\n    deleteOne,\r\n    markAllAsRead,\r\n    deleteAll,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}