{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, PageHeader, Button, Switch, Divider, Drawer } from \"antd\";\nimport { SlidersOutlined } from \"@ant-design/icons\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport Filter from \"../components/explore/Filter\";\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\n\nconst Explore = props => {\n  const {\n    stories,\n    loading\n  } = props;\n  const [currentStories, setCurrentStories] = React.useState([]);\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\n  const [mature, setMature] = React.useState(true);\n  const [openFilter, setOpenFilter] = React.useState(false);\n  const alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(() => {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(() => {\n    setCurrentStories(stories.filter(story => !mature ? !story.mature : story));\n    setCurrentCategory(\"\");\n    setCurrentStatus(\"\");\n    setCurrentLanguage(\"\");\n  }, [stories]);\n  React.useEffect(() => {\n    setCurrentStories(stories.filter(story => !mature ? !story.mature : story));\n  }, [mature]); // // CATEGORY\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((s) =>\n  //       s.category\n  //         ? s.category.includes(currentCategory)\n  //         : s.categories.includes(currentCategory)\n  //     )\n  //   );\n  // }, [currentCategory]);\n  // // LANGUAGE\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.language === currentLanguage)\n  //   );\n  // }, [currentLanguage]);\n  // // MATURE\n  // React.useEffect(() => {\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\n  // }, [mature]);\n  // // STATUS\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.status === currentStatus)\n  //   );\n  // }, [currentStatus]);\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(PageHeader, {\n    title: `Explore`,\n    extra: __jsx(Button, {\n      onClick: setOpenFilter,\n      icon: __jsx(SlidersOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 51\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Filter\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    gutter: [32, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(AlphabetRow, {\n    alphabet: alphabet,\n    currentLetter: currentLetter,\n    setCurrentLetter: setCurrentLetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Mature content ? \"), __jsx(Switch, {\n    checkedChildren: \"On\",\n    unCheckedChildren: \"Off\",\n    defaultChecked: mature,\n    onChange: setMature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 4,\n      1200: 4,\n      900: 3,\n      750: 2,\n      600: 2,\n      350: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }))))), __jsx(Drawer, {\n    title: \"Filter Stories\",\n    placement: \"right\",\n    closable: true,\n    onClose: () => setOpenFilter(false),\n    visible: openFilter,\n    footer: __jsx(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      onClick: () => setOpenFilter(false),\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: () => setOpenFilter(false),\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"Submit\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(Filter, {\n    currentCategory: currentCategory,\n    setCurrentCategory: setCurrentCategory,\n    currentStatus: currentStatus,\n    setCurrentStatus: setCurrentStatus,\n    currentLanguage: currentLanguage,\n    setCurrentLanguage: setCurrentLanguage,\n    mature: mature,\n    setMature: setMature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  stories: state.stories.storiesFromSearch,\n  loading: state.stories.loading\n});\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter\n})(Explore);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","PageHeader","Button","Switch","Divider","Drawer","SlidersOutlined","onlyUnique","getStoriesByLetter","StoriesGrid","LoadingScreen","Filter","AlphabetRow","Explore","props","stories","loading","currentStories","setCurrentStories","useState","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","currentStatus","setCurrentStatus","currentLanguage","setCurrentLanguage","mature","setMature","openFilter","setOpenFilter","alphabet","useEffect","filter","story","textAlign","marginRight","mapStateToProps","state","storiesFromSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, PageHeader, Button, Switch, Divider, Drawer } from \"antd\";\r\nimport { SlidersOutlined } from \"@ant-design/icons\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\n\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\nimport Filter from \"../components/explore/Filter\";\r\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\r\n\r\nconst Explore = (props) => {\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\r\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\r\n  const [mature, setMature] = React.useState(true);\r\n  const [openFilter, setOpenFilter] = React.useState(false);\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(\r\n      stories.filter((story) => (!mature ? !story.mature : story))\r\n    );\r\n    setCurrentCategory(\"\");\r\n    setCurrentStatus(\"\");\r\n    setCurrentLanguage(\"\");\r\n  }, [stories]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(\r\n      stories.filter((story) => (!mature ? !story.mature : story))\r\n    );\r\n  }, [mature]);\r\n\r\n  // // CATEGORY\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((s) =>\r\n  //       s.category\r\n  //         ? s.category.includes(currentCategory)\r\n  //         : s.categories.includes(currentCategory)\r\n  //     )\r\n  //   );\r\n  // }, [currentCategory]);\r\n\r\n  // // LANGUAGE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.language === currentLanguage)\r\n  //   );\r\n  // }, [currentLanguage]);\r\n\r\n  // // MATURE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\r\n  // }, [mature]);\r\n\r\n  // // STATUS\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.status === currentStatus)\r\n  //   );\r\n  // }, [currentStatus]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"explore-page\">\r\n        <PageHeader\r\n          title={`Explore`}\r\n          extra={\r\n            <Button onClick={setOpenFilter} icon={<SlidersOutlined />}>\r\n              Filter\r\n            </Button>\r\n          }\r\n        />\r\n        <Row gutter={[32, 24]}>\r\n          <Col span={24}>\r\n            <AlphabetRow\r\n              alphabet={alphabet}\r\n              currentLetter={currentLetter}\r\n              setCurrentLetter={setCurrentLetter}\r\n            />\r\n            <div>\r\n              <span>Mature content ? </span>\r\n              <Switch\r\n                checkedChildren=\"On\"\r\n                unCheckedChildren=\"Off\"\r\n                defaultChecked={mature}\r\n                onChange={setMature}\r\n              />\r\n            </div>\r\n            <Divider />\r\n            <LoadingScreen loading={loading}>\r\n              <StoriesGrid\r\n                stories={currentStories}\r\n                gutter=\"16px\"\r\n                columnsCountBreakPoints={{\r\n                  1600: 4,\r\n                  1200: 4,\r\n                  900: 3,\r\n                  750: 2,\r\n                  600: 2,\r\n                  350: 1,\r\n                }}\r\n              />\r\n            </LoadingScreen>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Drawer\r\n        title=\"Filter Stories\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={() => setOpenFilter(false)}\r\n        visible={openFilter}\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => setOpenFilter(false)}\r\n              style={{ marginRight: 8 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={() => setOpenFilter(false)} type=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <Filter\r\n          currentCategory={currentCategory}\r\n          setCurrentCategory={setCurrentCategory}\r\n          currentStatus={currentStatus}\r\n          setCurrentStatus={setCurrentStatus}\r\n          currentLanguage={currentLanguage}\r\n          setCurrentLanguage={setCurrentLanguage}\r\n          mature={mature}\r\n          setMature={setMature}\r\n        />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}