{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\[id]\\\\edit.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport { editCharacter, getCharacter, getUserCharacters } from \"../../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../../components/forms/CharacterForm\";\n\nconst EditCharacter = props => {\n  const {\n    character,\n    characters,\n    characterId,\n    loadingCharacter,\n    loading\n  } = props;\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getCharacter(router.query.id);\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      public: visibility\n    });\n  }, [visibility]);\n\n  const onFailed = () => {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  const submit = values => {\n    // props.addCharacter({\n    //   ...values,\n    //   authorId: auth.user.uid,\n    //   authorName: auth.user.username,\n    // });\n    console.log(values);\n  };\n\n  console.log(character);\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: chapterExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === chapter.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }))) // <LoadingScreen loading={auth.isLoading}>\n  //   <RedirectComp condition={auth.user} type=\"redirect\">\n  //     <div className=\"new-character custom-form\">\n  //       <div className=\"inner\">\n  //         <h2 className=\"side-heading\">Add a new character</h2>\n  //         <CharacterForm\n  //           submit={submit}\n  //           onFailed={onFailed}\n  //           form={form}\n  //           characters={characters}\n  //           visibility={visibility}\n  //           setVisibility={setVisibility}\n  //           loadingCharacter={loadingCharacter}\n  //           type=\"add\"\n  //         />\n  //       </div>\n  //     </div>\n  //   </RedirectComp>\n  // </LoadingScreen>\n  ;\n};\n\nconst mapStateToProps = state => ({\n  character: state.characters.character,\n  characters: state.characters.userCharacters,\n  loading: state.characters.loading,\n  loadingCharacter: state.characters.loadingCharacter,\n  characterId: state.characters.characterId\n});\n\nexport default connect(mapStateToProps, {\n  getCharacter,\n  editCharacter,\n  getUserCharacters\n})(EditCharacter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/[id]/edit.js"],"names":["React","useRouter","Form","message","connect","useAuth","editCharacter","getCharacter","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","EditCharacter","props","character","characters","characterId","loadingCharacter","loading","auth","form","useForm","router","visibility","setVisibility","useState","useEffect","user","query","id","uid","setFieldsValue","public","onFailed","window","scrollTo","error","submit","values","console","log","chapterExists","chapter","authorId","mapStateToProps","state","userCharacters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport {\r\n  editCharacter,\r\n  getCharacter,\r\n  getUserCharacters,\r\n} from \"../../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../../components/forms/CharacterForm\";\r\n\r\nconst EditCharacter = (props) => {\r\n  const {\r\n    character,\r\n    characters,\r\n    characterId,\r\n    loadingCharacter,\r\n    loading,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getCharacter(router.query.id);\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    // props.addCharacter({\r\n    //   ...values,\r\n    //   authorId: auth.user.uid,\r\n    //   authorName: auth.user.username,\r\n    // });\r\n    console.log(values);\r\n  };\r\n\r\n  console.log(character);\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={chapterExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === chapter.authorId}\r\n        ></RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n    // <LoadingScreen loading={auth.isLoading}>\r\n    //   <RedirectComp condition={auth.user} type=\"redirect\">\r\n    //     <div className=\"new-character custom-form\">\r\n    //       <div className=\"inner\">\r\n    //         <h2 className=\"side-heading\">Add a new character</h2>\r\n    //         <CharacterForm\r\n    //           submit={submit}\r\n    //           onFailed={onFailed}\r\n    //           form={form}\r\n    //           characters={characters}\r\n    //           visibility={visibility}\r\n    //           setVisibility={setVisibility}\r\n    //           loadingCharacter={loadingCharacter}\r\n    //           type=\"add\"\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </RedirectComp>\r\n    // </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  character: state.characters.character,\r\n  characters: state.characters.userCharacters,\r\n  loading: state.characters.loading,\r\n  loadingCharacter: state.characters.loadingCharacter,\r\n  characterId: state.characters.characterId,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCharacter,\r\n  editCharacter,\r\n  getUserCharacters,\r\n})(EditCharacter);\r\n"]},"metadata":{},"sourceType":"module"}