{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Row, Col, Spin, Pagination as Paginate, Divider } from \"antd\";\nimport { StoriesGrid } from \"./Grid\";\n\nvar Pagination = function Pagination(_ref) {\n  _s();\n\n  var data = _ref.data,\n      xs = _ref.xs,\n      sm = _ref.sm,\n      lg = _ref.lg,\n      xl = _ref.xl,\n      type = _ref.type;\n\n  var _React$useState = React.useState({\n    currentPage: 1,\n    datasPerPage: 12\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pagination = _React$useState2[0],\n      setPagination = _React$useState2[1];\n\n  var currentPage = pagination.currentPage,\n      datasPerPage = pagination.datasPerPage;\n  var indexOfLastData = currentPage * datasPerPage;\n  var indexOfFirstData = indexOfLastData - datasPerPage;\n  var currentDatas = data.slice(indexOfFirstData, indexOfLastData);\n\n  var handleClick = function handleClick(e) {\n    return setPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n      currentPage: Number(e)\n    }));\n  };\n\n  var renderDatas = type === \"stories\" ? __jsx(StoriesGrid, {\n    xs: xs,\n    lg: lg,\n    sm: sm,\n    xl: xl,\n    md: md,\n    type: type,\n    stories: currentDatas,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }) : null;\n  var pageNumbers = [];\n\n  for (var i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Paginate, {\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: function showTotal(total, range) {\n      return \"\".concat(range[0], \"-\").concat(range[1], \" of \").concat(total, \" items\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), renderDatas);\n};\n\n_s(Pagination, \"KukkxIlWGI5Spz/4GdH6OcCG9l4=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Pagination.js"],"names":["React","Row","Col","Spin","Pagination","Paginate","Divider","StoriesGrid","data","xs","sm","lg","xl","type","useState","currentPage","datasPerPage","pagination","setPagination","indexOfLastData","indexOfFirstData","currentDatas","slice","handleClick","e","Number","renderDatas","md","pageNumbers","i","Math","ceil","length","push","total","range"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAU,IAAIC,QAAvC,EAAiDC,OAAjD,QAAgE,MAAhE;AAEA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,IAAMH,UAAU,GAAG,SAAbA,UAAa,OAAoC;AAAA;;AAAA,MAAjCI,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,EAA2B,QAA3BA,EAA2B;AAAA,MAAvBC,EAAuB,QAAvBA,EAAuB;AAAA,MAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,wBACjBb,KAAK,CAACc,QAAN,CAAe;AACjDC,IAAAA,WAAW,EAAE,CADoC;AAEjDC,IAAAA,YAAY,EAAE;AAFmC,GAAf,CADiB;AAAA;AAAA,MAC9CC,UAD8C;AAAA,MAClCC,aADkC;;AAAA,MAK7CH,WAL6C,GAKfE,UALe,CAK7CF,WAL6C;AAAA,MAKhCC,YALgC,GAKfC,UALe,CAKhCD,YALgC;AAMrD,MAAMG,eAAe,GAAGJ,WAAW,GAAGC,YAAtC;AACA,MAAMI,gBAAgB,GAAGD,eAAe,GAAGH,YAA3C;AACA,MAAMK,YAAY,GAAGb,IAAI,CAACc,KAAL,CAAWF,gBAAX,EAA6BD,eAA7B,CAArB;;AAEA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD;AAAA,WAClBN,aAAa,iCAAMD,UAAN;AAAkBF,MAAAA,WAAW,EAAEU,MAAM,CAACD,CAAD;AAArC,OADK;AAAA,GAApB;;AAGA,MAAME,WAAW,GACfb,IAAI,KAAK,SAAT,GACE,MAAC,WAAD;AACE,IAAA,EAAE,EAAEJ,EADN;AAEE,IAAA,EAAE,EAAEE,EAFN;AAGE,IAAA,EAAE,EAAED,EAHN;AAIE,IAAA,EAAE,EAAEE,EAJN;AAKE,IAAA,EAAE,EAAEe,EALN;AAME,IAAA,IAAI,EAAEd,IANR;AAOE,IAAA,OAAO,EAAEQ,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAUI,IAXN;AAaA,MAAIO,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUvB,IAAI,CAACwB,MAAL,GAAchB,YAAxB,CAArB,EAA4Da,CAAC,EAA7D,EAAiE;AAC/DD,IAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AAED,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,eAAe,MADjB;AAEE,IAAA,QAAQ,EAAEN,WAFZ;AAGE,IAAA,KAAK,EAAEf,IAAI,CAACwB,MAHd;AAIE,IAAA,QAAQ,EAAEhB,YAJZ;AAKE,IAAA,SAAS,EAAE,mBAACkB,KAAD,EAAQC,KAAR;AAAA,uBACNA,KAAK,CAAC,CAAD,CADC,cACMA,KAAK,CAAC,CAAD,CADX,iBACqBD,KADrB;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWGR,WAXH,CADF;AAeD,CA9CD;;GAAMtB,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Spin, Pagination as Paginate, Divider } from \"antd\";\r\n\r\nimport { StoriesGrid } from \"./Grid\";\r\n\r\nconst Pagination = ({ data, xs, sm, lg, xl, type }) => {\r\n  const [pagination, setPagination] = React.useState({\r\n    currentPage: 1,\r\n    datasPerPage: 12,\r\n  });\r\n  const { currentPage, datasPerPage } = pagination;\r\n  const indexOfLastData = currentPage * datasPerPage;\r\n  const indexOfFirstData = indexOfLastData - datasPerPage;\r\n  const currentDatas = data.slice(indexOfFirstData, indexOfLastData);\r\n\r\n  const handleClick = (e) =>\r\n    setPagination({ ...pagination, currentPage: Number(e) });\r\n\r\n  const renderDatas =\r\n    type === \"stories\" ? (\r\n      <StoriesGrid\r\n        xs={xs}\r\n        lg={lg}\r\n        sm={sm}\r\n        xl={xl}\r\n        md={md}\r\n        type={type}\r\n        stories={currentDatas}\r\n      />\r\n    ) : null;\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paginate\r\n        showQuickJumper\r\n        onChange={handleClick}\r\n        total={data.length}\r\n        pageSize={datasPerPage}\r\n        showTotal={(total, range) =>\r\n          `${range[0]}-${range[1]} of ${total} items`\r\n        }\r\n      />\r\n      <Divider />\r\n      {renderDatas}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}