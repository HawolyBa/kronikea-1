{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Relatives.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Row, Col, Form, Select, Input, Divider } from \"antd\";\nimport CharacterCard, { CharacterGrid } from \"../common/CharacterCard\";\n\nvar Relatives = function Relatives(_ref) {\n  _s();\n\n  var characters = _ref.characters;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      relations = _React$useState2[0],\n      setRelations = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentChar = _React$useState4[0],\n      setCurrentChar = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentRel = _React$useState6[0],\n      setCurrentRel = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selectedCharacters = _React$useState8[0],\n      setSelectedCharacters = _React$useState8[1];\n\n  var addRelation = function addRelation() {\n    var newRelations = _toConsumableArray(relations);\n\n    if (currentChar && currentRel) {\n      newRelations = [].concat(_toConsumableArray(newRelations), [{\n        character: currentChar,\n        relation: currentRel\n      }]);\n    }\n\n    setRelations(newRelations);\n    setSelectedCharacters([].concat(_toConsumableArray(selectedCharacters), [_objectSpread(_objectSpread({}, characters.find(function (c) {\n      return c.id === currentChar;\n    })), {}, {\n      relation: currentRel\n    })]));\n    setCurrentChar(\"\");\n    setCurrentRel(\"\");\n  };\n\n  console.log(selectedCharacters);\n  return __jsx(Form.Item, {\n    label: \"Relationships\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    align: \"bottom\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: 11,\n    sm: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    placeholder: \"Select a character\",\n    value: currentChar,\n    onChange: function onChange(val) {\n      return setCurrentChar(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Option, {\n    value: \"none\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Select a character\"), characters === null || characters === void 0 ? void 0 : characters.filter(function (c) {\n    return !relations.includes(c.id);\n  }).map(function (c) {\n    return __jsx(Option, {\n      key: c.id,\n      value: c.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"\".concat(c.firstname, \" \").concat(c.lastname));\n  }))), __jsx(Col, {\n    md: 11,\n    sm: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    value: currentRel,\n    placeholder: \"Type of relationship\",\n    onChange: function onChange(e) {\n      return setCurrentRel(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    md: 2,\n    sm: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"add-btn\",\n    onClick: addRelation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Add\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, selectedCharacters === null || selectedCharacters === void 0 ? void 0 : selectedCharacters.map(function (rel) {\n    return __jsx(Col, {\n      lg: 4,\n      md: 8,\n      sm: 12,\n      xs: 24,\n      key: rel.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, __jsx(CharacterCard, {\n      type: \"add\",\n      character: rel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\n_s(Relatives, \"6bFJ4upWnEPZkjh/I6yQeVVKo6Y=\");\n\n_c = Relatives;\nexport default Relatives;\n\nvar _c;\n\n$RefreshReg$(_c, \"Relatives\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Relatives.js"],"names":["Row","Col","Form","Select","Input","Divider","CharacterCard","CharacterGrid","Relatives","characters","React","useState","relations","setRelations","currentChar","setCurrentChar","currentRel","setCurrentRel","selectedCharacters","setSelectedCharacters","addRelation","newRelations","character","relation","find","c","id","console","log","val","filter","includes","map","firstname","lastname","e","target","value","rel"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Select, Input, Divider } from \"antd\";\r\n\r\nimport CharacterCard, { CharacterGrid } from \"../common/CharacterCard\";\r\n\r\nconst Relatives = ({ characters }) => {\r\n  const [relations, setRelations] = React.useState([]);\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n  const [currentRel, setCurrentRel] = React.useState(\"\");\r\n  const [selectedCharacters, setSelectedCharacters] = React.useState([]);\r\n\r\n  const addRelation = () => {\r\n    let newRelations = [...relations];\r\n    if (currentChar && currentRel) {\r\n      newRelations = [\r\n        ...newRelations,\r\n        { character: currentChar, relation: currentRel },\r\n      ];\r\n    }\r\n\r\n    setRelations(newRelations);\r\n    setSelectedCharacters([\r\n      ...selectedCharacters,\r\n      {\r\n        ...characters.find((c) => c.id === currentChar),\r\n        relation: currentRel,\r\n      },\r\n    ]);\r\n    setCurrentChar(\"\");\r\n    setCurrentRel(\"\");\r\n  };\r\n\r\n  console.log(selectedCharacters);\r\n\r\n  return (\r\n    <Form.Item label=\"Relationships\">\r\n      <Row align=\"bottom\" gutter={[24, 24]}>\r\n        <Col md={11} sm={24}>\r\n          <Select\r\n            placeholder=\"Select a character\"\r\n            value={currentChar}\r\n            onChange={(val) => setCurrentChar(val)}\r\n          >\r\n            <Option value=\"none\" disabled>\r\n              Select a character\r\n            </Option>\r\n            {characters\r\n              ?.filter((c) => !relations.includes(c.id))\r\n              .map((c) => (\r\n                <Option\r\n                  key={c.id}\r\n                  value={c.id}\r\n                >{`${c.firstname} ${c.lastname}`}</Option>\r\n              ))}\r\n          </Select>\r\n        </Col>\r\n        <Col md={11} sm={24}>\r\n          <Input\r\n            value={currentRel}\r\n            placeholder=\"Type of relationship\"\r\n            onChange={(e) => setCurrentRel(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col md={2} sm={24}>\r\n          <div className=\"add-btn\" onClick={addRelation}>\r\n            Add\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n      <Row gutter={[16, 16]}>\r\n        {selectedCharacters?.map((rel) => (\r\n          <Col lg={4} md={8} sm={12} xs={24} key={rel.id}>\r\n            <CharacterCard type=\"add\" character={rel} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default Relatives;\r\n"]},"metadata":{},"sourceType":"module"}