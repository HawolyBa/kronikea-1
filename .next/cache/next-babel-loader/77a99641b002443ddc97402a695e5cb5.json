{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Loader.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nconst Loader = WrappedComponent => {\n  const LoadingScreen = props => {\n    const [isLoading, setLoading] = React.useState(true);\n\n    const setLoadingState = isComponentLoading => {\n      setLoading(isComponentLoading);\n    };\n\n    return __jsx(React.Fragment, null, isLoading ? __jsx(\"div\", {\n      className: \"loader-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }))) : __jsx(WrappedComponent, _extends({}, props, {\n      setLoading: setLoadingState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return LoadingScreen;\n};\n\nexport default Loader;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Loader.js"],"names":["React","Loader","WrappedComponent","LoadingScreen","props","isLoading","setLoading","useState","setLoadingState","isComponentLoading"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,gBAAD,IAAsB;AACnC,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAhC;;AACA,UAAMC,eAAe,GAAIC,kBAAD,IAAwB;AAC9CH,MAAAA,UAAU,CAACG,kBAAD,CAAV;AACD,KAFD;;AAGA,WACE,4BACGJ,SAAS,GACR;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADQ,GASR,MAAC,gBAAD,eAAsBD,KAAtB;AAA6B,MAAA,UAAU,EAAEI,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAVJ,CADF;AAeD,GApBD;;AAqBA,SAAOL,aAAP;AACD,CAvBD;;AAyBA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Loader = (WrappedComponent) => {\r\n  const LoadingScreen = (props) => {\r\n    const [isLoading, setLoading] = React.useState(true);\r\n    const setLoadingState = (isComponentLoading) => {\r\n      setLoading(isComponentLoading);\r\n    };\r\n    return (\r\n      <>\r\n        {isLoading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"loader\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <WrappedComponent {...props} setLoading={setLoadingState} />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return LoadingScreen;\r\n};\r\n\r\nexport default Loader;\r\n"]},"metadata":{},"sourceType":"module"}