{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, PageHeader, Button } from \"antd\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport Filter from \"../components/explore/Filter\";\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\n\nconst Explore = props => {\n  const {\n    stories,\n    loading\n  } = props;\n  const [currentStories, setCurrentStories] = React.useState([]);\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\n  const [mature, setMature] = React.useState(true);\n  const alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(() => {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(() => {\n    setCurrentStories(stories.filter(story => story.mature === mature));\n    setCurrentCategory(\"\");\n    setCurrentStatus(\"\");\n    setCurrentLanguage(\"\");\n  }, [stories]); // // CATEGORY\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((s) =>\n  //       s.category\n  //         ? s.category.includes(currentCategory)\n  //         : s.categories.includes(currentCategory)\n  //     )\n  //   );\n  // }, [currentCategory]);\n  // // LANGUAGE\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.language === currentLanguage)\n  //   );\n  // }, [currentLanguage]);\n  // // MATURE\n  // React.useEffect(() => {\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\n  // }, [mature]);\n  // // STATUS\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.status === currentStatus)\n  //   );\n  // }, [currentStatus]);\n\n  return __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: `Explore`,\n    extra: __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 44\n      }\n    }, \"Filter\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), __jsx(Row, {\n    gutter: [32, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(AlphabetRow, {\n    alphabet: alphabet,\n    currentLetter: currentLetter,\n    setCurrentLetter: setCurrentLetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 3,\n      1200: 3,\n      900: 3,\n      750: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  stories: state.stories.storiesFromSearch,\n  loading: state.stories.loading\n});\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter\n})(Explore);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","PageHeader","Button","onlyUnique","getStoriesByLetter","StoriesGrid","LoadingScreen","Filter","AlphabetRow","Explore","props","stories","loading","currentStories","setCurrentStories","useState","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","currentStatus","setCurrentStatus","currentLanguage","setCurrentLanguage","mature","setMature","alphabet","useEffect","filter","story","mapStateToProps","state","storiesFromSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, PageHeader, Button } from \"antd\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\n\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\nimport Filter from \"../components/explore/Filter\";\r\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\r\n\r\nconst Explore = (props) => {\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\r\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\r\n  const [mature, setMature] = React.useState(true);\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(stories.filter((story) => story.mature === mature));\r\n    setCurrentCategory(\"\");\r\n    setCurrentStatus(\"\");\r\n    setCurrentLanguage(\"\");\r\n  }, [stories]);\r\n\r\n  // // CATEGORY\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((s) =>\r\n  //       s.category\r\n  //         ? s.category.includes(currentCategory)\r\n  //         : s.categories.includes(currentCategory)\r\n  //     )\r\n  //   );\r\n  // }, [currentCategory]);\r\n\r\n  // // LANGUAGE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.language === currentLanguage)\r\n  //   );\r\n  // }, [currentLanguage]);\r\n\r\n  // // MATURE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\r\n  // }, [mature]);\r\n\r\n  // // STATUS\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.status === currentStatus)\r\n  //   );\r\n  // }, [currentStatus]);\r\n\r\n  return (\r\n    <div className=\"explore-page\">\r\n      <PageHeader title={`Explore`} extra={<Button>Filter</Button>} />\r\n      <Row gutter={[32, 24]}>\r\n        {/* <Filter\r\n          currentCategory={currentCategory}\r\n          setCurrentCategory={setCurrentCategory}\r\n          currentStatus={currentStatus}\r\n          setCurrentStatus={setCurrentStatus}\r\n          currentLanguage={currentLanguage}\r\n          setCurrentLanguage={setCurrentLanguage}\r\n          mature={mature}\r\n          setMature={setMature}\r\n        /> */}\r\n        <Col span={24}>\r\n          <AlphabetRow\r\n            alphabet={alphabet}\r\n            currentLetter={currentLetter}\r\n            setCurrentLetter={setCurrentLetter}\r\n          />\r\n          <LoadingScreen loading={loading}>\r\n            <StoriesGrid\r\n              stories={currentStories}\r\n              gutter=\"16px\"\r\n              columnsCountBreakPoints={{ 1600: 3, 1200: 3, 900: 3, 750: 2 }}\r\n            />\r\n          </LoadingScreen>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}