{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"./Header\";\nimport StickyMenu from \"./StickyMenu\";\nimport Navbar from \"./Navbar\";\nimport { useRouter } from \"next/router\";\nimport { Drawer, Modal, Radio } from \"antd\";\nimport Notifications from \"../notifications/Notifications\";\nimport { useNotifcations } from \"../../hooks/notificationsHooks\";\n\nvar Layout = function Layout(_ref) {\n  _s();\n\n  var _jsx;\n\n  var children = _ref.children;\n  // Reference to side menu\n  var menuRef = React.useRef();\n  var notifications = useNotifcations();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visible = _React$useState4[0],\n      setVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      openLanguage = _React$useState6[0],\n      setOpenLanguage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"en\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      locale = _React$useState8[0],\n      setLocale = _React$useState8[1];\n\n  var showDrawer = function showDrawer() {\n    setVisible(true);\n  };\n\n  var onClose = function onClose() {\n    setVisible(false);\n  };\n\n  var toggleNotifications = function toggleNotifications() {\n    return setVisible(!visible);\n  };\n\n  var openMenu = function openMenu(e) {\n    setOpen(!isOpen);\n  };\n\n  React.useEffect(function () {\n    document.addEventListener(\"mousedown\", clickOutsideMenu);\n  }, [menuRef.current]);\n\n  var clickOutsideMenu = function clickOutsideMenu(e) {\n    if (menuRef.current && !menuRef.current.contains(e.target)) {\n      setOpen(false);\n    }\n  };\n\n  var router = useRouter();\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    setOpenLanguage: setOpenLanguage,\n    toggleNotifications: toggleNotifications,\n    notificationsCount: notifications.count && notifications.count,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: \"main-content \".concat(isOpen ? \"content-menu-open\" : \"\", \" \").concat(router.pathname === \"/\" ? \"home-content\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, children)), __jsx(Drawer, {\n    title: \"Notifications\",\n    placement: \"right\",\n    closable: false,\n    onClose: function onClose() {\n      return setVisible(false);\n    },\n    visible: visible,\n    width: 800,\n    headerStyle: {\n      fontWeight: 300,\n      textTransform: \"uppercase\",\n      color: \"#acb9d7\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Notifications, {\n    setVisible: setVisible,\n    notif: notifications,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, (_jsx = {\n    title: \"Change Language\",\n    closable: false,\n    visible: openLanguage,\n    width: 500,\n    footer: null,\n    centered: true\n  }, _defineProperty(_jsx, \"closable\", true), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }), _jsx), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Radio.Group, {\n    value: locale,\n    onChange: function onChange(e) {\n      return setLocale(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Radio.Button, {\n    key: \"en\",\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"English\"), __jsx(Radio.Button, {\n    key: \"fr\",\n    value: \"fr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Fran\\xE7ais\")))));\n};\n\n_s(Layout, \"GCOnVB/VWJABXg+qLTa+t1dcOlw=\", false, function () {\n  return [useNotifcations, useRouter];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Layout.js"],"names":["Header","StickyMenu","Navbar","useRouter","Drawer","Modal","Radio","Notifications","useNotifcations","Layout","children","menuRef","React","useRef","notifications","useState","isOpen","setOpen","visible","setVisible","openLanguage","setOpenLanguage","locale","setLocale","showDrawer","onClose","toggleNotifications","openMenu","e","useEffect","document","addEventListener","clickOutsideMenu","current","contains","target","router","count","pathname","fontWeight","textTransform","color","display","justifyContent","alignItems","value"],"mappings":"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","sourcesContent":["import Header from \"./Header\";\r\nimport StickyMenu from \"./StickyMenu\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { Drawer, Modal, Radio } from \"antd\";\r\nimport Notifications from \"../notifications/Notifications\";\r\nimport { useNotifcations } from \"../../hooks/notificationsHooks\";\r\n\r\nconst Layout = ({ children }) => {\r\n  // Reference to side menu\r\n  const menuRef = React.useRef();\r\n  const notifications = useNotifcations();\r\n\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [openLanguage, setOpenLanguage] = React.useState(false);\r\n  const [locale, setLocale] = React.useState(\"en\");\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const toggleNotifications = () => setVisible(!visible);\r\n\r\n  const openMenu = (e) => {\r\n    setOpen(!isOpen);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"mousedown\", clickOutsideMenu);\r\n  }, [menuRef.current]);\r\n\r\n  const clickOutsideMenu = (e) => {\r\n    if (menuRef.current && !menuRef.current.contains(e.target)) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        setOpenLanguage={setOpenLanguage}\r\n        toggleNotifications={toggleNotifications}\r\n        notificationsCount={notifications.count && notifications.count}\r\n      />\r\n      <main\r\n        className={`main-content ${isOpen ? \"content-menu-open\" : \"\"} ${\r\n          router.pathname === \"/\" ? \"home-content\" : \"\"\r\n        }`}\r\n      >\r\n        {/* <Header menuRef={menuRef} isOpen={isOpen} openMenu={openMenu} /> */}\r\n        <div className=\"content\">{children}</div>\r\n      </main>\r\n      {/* <StickyMenu /> */}\r\n      <Drawer\r\n        title=\"Notifications\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={() => setVisible(false)}\r\n        visible={visible}\r\n        width={800}\r\n        headerStyle={{\r\n          fontWeight: 300,\r\n          textTransform: \"uppercase\",\r\n          color: \"#acb9d7\",\r\n        }}\r\n      >\r\n        <Notifications setVisible={setVisible} notif={notifications} />\r\n      </Drawer>\r\n      <Modal\r\n        title=\"Change Language\"\r\n        closable={false}\r\n        visible={openLanguage}\r\n        width={500}\r\n        footer={null}\r\n        centered={true}\r\n        closable={true}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Radio.Group\r\n            value={locale}\r\n            onChange={(e) => setLocale(e.target.value)}\r\n          >\r\n            <Radio.Button key=\"en\" value={\"en\"}>\r\n              English\r\n            </Radio.Button>\r\n            <Radio.Button key=\"fr\" value={\"fr\"}>\r\n              Français\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}