{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\home\\\\ShowCase.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Slide from \"./Slide\"; // =========================\n// Slide\n// =========================\n// class Slide extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleMouseMove = this.handleMouseMove.bind(this);\n//     this.handleMouseLeave = this.handleMouseLeave.bind(this);\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\n//     this.imageLoaded = this.imageLoaded.bind(this);\n//     this.slide = React.createRef();\n//   }\n//   handleMouseMove(event) {\n//     const el = this.slide.current;\n//     const r = el.getBoundingClientRect();\n//     el.style.setProperty(\n//       \"--x\",\n//       event.clientX - (r.left + Math.floor(r.width / 2))\n//     );\n//     el.style.setProperty(\n//       \"--y\",\n//       event.clientY - (r.top + Math.floor(r.height / 2))\n//     );\n//   }\n//   handleMouseLeave(event) {\n//     this.slide.current.style.setProperty(\"--x\", 0);\n//     this.slide.current.style.setProperty(\"--y\", 0);\n//   }\n//   handleSlideClick(event) {\n//     this.props.handleSlideClick(this.props.slide.id);\n//   }\n//   imageLoaded(event) {\n//     event.target.style.opacity = 1;\n//   }\n//   render() {\n//     const { banner, title, index, id } = this.props.slide;\n//     const current = this.props.current;\n//     let classNames = \"slide\";\n//     if (current === index) classNames += \" slide--current\";\n//     else if (current - 1 === index) classNames += \" slide--previous\";\n//     else if (current + 1 === index) classNames += \" slide--next\";\n//     return (\n//       <li\n//         ref={this.slide}\n//         className={classNames}\n//         onClick={this.handleSlideClick}\n//         onMouseMove={this.handleMouseMove}\n//         onMouseLeave={this.handleMouseLeave}\n//       >\n//         <div className=\"slide__image-wrapper\">\n//           <img\n//             className=\"slide__image\"\n//             alt={title}\n//             src={banner}\n//             onLoad={this.imageLoaded}\n//           />\n//         </div>\n//         <article className=\"slide__content\">\n//           <h2 className=\"slide__headline\">{title}</h2>\n//           <button\n//             onCLick={() => Router.push(`/story/${id}`)}\n//             className=\"slide__action btn\"\n//           >\n//             Read\n//           </button>\n//         </article>\n//       </li>\n//     );\n//   }\n// }\n// =========================\n// Slider control\n// =========================\n\nconst SliderControl = ({\n  type,\n  title,\n  handleClick\n}) => {\n  return __jsx(\"button\", {\n    className: `btn btn--${type}`,\n    title: title,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"path\", {\n    d: \"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}; // =========================\n// Slider\n// =========================\n\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0\n    };\n    this.handlePreviousClick = this.handlePreviousClick.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.handleSlideClick = this.handleSlideClick.bind(this);\n  }\n\n  handlePreviousClick() {\n    const previous = this.state.current - 1;\n    this.setState({\n      current: previous < 0 ? this.props.slides.length - 1 : previous\n    });\n  }\n\n  handleNextClick() {\n    const next = this.state.current + 1;\n    this.setState({\n      current: next === this.props.slides.length ? 0 : next\n    });\n  }\n\n  handleSlideClick(index) {\n    if (this.state.current !== index) {\n      this.setState({\n        current: index\n      });\n    }\n  }\n\n  render() {\n    const {\n      current\n    } = this.state;\n    const {\n      slides,\n      heading\n    } = this.props;\n    const headingId = `slider-heading__${heading.replace(/\\s+/g, \"-\").toLowerCase()}`;\n    const wrapperTransform = {\n      transform: `translateX(-${current * (100 / slides.length)}%)`\n    };\n    return __jsx(\"div\", {\n      className: \"home-showcase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"slider\",\n      \"aria-labelledby\": headingId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(\"ul\", {\n      className: \"slider__wrapper\",\n      style: wrapperTransform,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      id: headingId,\n      className: \"visuallyhidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, heading), slides.map((slide, i) => {\n      return __jsx(Slide, {\n        key: i,\n        slide: _objectSpread(_objectSpread({}, slide), {}, {\n          index: i\n        }),\n        current: current,\n        handleSlideClick: this.handleSlideClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      });\n    })), __jsx(\"div\", {\n      className: \"slider__controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, __jsx(SliderControl, {\n      type: \"previous\",\n      title: \"Go to previous slide\",\n      handleClick: this.handlePreviousClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }), __jsx(SliderControl, {\n      type: \"next\",\n      title: \"Go to next slide\",\n      handleClick: this.handleNextClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/home/ShowCase.js"],"names":["Slide","SliderControl","type","title","handleClick","Slider","React","Component","constructor","props","state","current","handlePreviousClick","bind","handleNextClick","handleSlideClick","previous","setState","slides","length","next","index","render","heading","headingId","replace","toLowerCase","wrapperTransform","transform","map","slide","i"],"mappings":"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","sourcesContent":["import Slide from \"./Slide\";\r\n\r\n// =========================\r\n// Slide\r\n// =========================\r\n\r\n// class Slide extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.handleMouseMove = this.handleMouseMove.bind(this);\r\n//     this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\r\n//     this.imageLoaded = this.imageLoaded.bind(this);\r\n//     this.slide = React.createRef();\r\n//   }\r\n\r\n//   handleMouseMove(event) {\r\n//     const el = this.slide.current;\r\n//     const r = el.getBoundingClientRect();\r\n\r\n//     el.style.setProperty(\r\n//       \"--x\",\r\n//       event.clientX - (r.left + Math.floor(r.width / 2))\r\n//     );\r\n//     el.style.setProperty(\r\n//       \"--y\",\r\n//       event.clientY - (r.top + Math.floor(r.height / 2))\r\n//     );\r\n//   }\r\n\r\n//   handleMouseLeave(event) {\r\n//     this.slide.current.style.setProperty(\"--x\", 0);\r\n//     this.slide.current.style.setProperty(\"--y\", 0);\r\n//   }\r\n\r\n//   handleSlideClick(event) {\r\n//     this.props.handleSlideClick(this.props.slide.id);\r\n//   }\r\n\r\n//   imageLoaded(event) {\r\n//     event.target.style.opacity = 1;\r\n//   }\r\n\r\n//   render() {\r\n//     const { banner, title, index, id } = this.props.slide;\r\n//     const current = this.props.current;\r\n//     let classNames = \"slide\";\r\n\r\n//     if (current === index) classNames += \" slide--current\";\r\n//     else if (current - 1 === index) classNames += \" slide--previous\";\r\n//     else if (current + 1 === index) classNames += \" slide--next\";\r\n\r\n//     return (\r\n//       <li\r\n//         ref={this.slide}\r\n//         className={classNames}\r\n//         onClick={this.handleSlideClick}\r\n//         onMouseMove={this.handleMouseMove}\r\n//         onMouseLeave={this.handleMouseLeave}\r\n//       >\r\n//         <div className=\"slide__image-wrapper\">\r\n//           <img\r\n//             className=\"slide__image\"\r\n//             alt={title}\r\n//             src={banner}\r\n//             onLoad={this.imageLoaded}\r\n//           />\r\n//         </div>\r\n\r\n//         <article className=\"slide__content\">\r\n//           <h2 className=\"slide__headline\">{title}</h2>\r\n//           <button\r\n//             onCLick={() => Router.push(`/story/${id}`)}\r\n//             className=\"slide__action btn\"\r\n//           >\r\n//             Read\r\n//           </button>\r\n//         </article>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// =========================\r\n// Slider control\r\n// =========================\r\n\r\nconst SliderControl = ({ type, title, handleClick }) => {\r\n  return (\r\n    <button className={`btn btn--${type}`} title={title} onClick={handleClick}>\r\n      <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\n// =========================\r\n// Slider\r\n// =========================\r\n\r\nclass Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { current: 0 };\r\n    this.handlePreviousClick = this.handlePreviousClick.bind(this);\r\n    this.handleNextClick = this.handleNextClick.bind(this);\r\n    this.handleSlideClick = this.handleSlideClick.bind(this);\r\n  }\r\n\r\n  handlePreviousClick() {\r\n    const previous = this.state.current - 1;\r\n\r\n    this.setState({\r\n      current: previous < 0 ? this.props.slides.length - 1 : previous,\r\n    });\r\n  }\r\n\r\n  handleNextClick() {\r\n    const next = this.state.current + 1;\r\n\r\n    this.setState({\r\n      current: next === this.props.slides.length ? 0 : next,\r\n    });\r\n  }\r\n\r\n  handleSlideClick(index) {\r\n    if (this.state.current !== index) {\r\n      this.setState({\r\n        current: index,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    const { slides, heading } = this.props;\r\n    const headingId = `slider-heading__${heading\r\n      .replace(/\\s+/g, \"-\")\r\n      .toLowerCase()}`;\r\n    const wrapperTransform = {\r\n      transform: `translateX(-${current * (100 / slides.length)}%)`,\r\n    };\r\n\r\n    return (\r\n      <div className=\"home-showcase\">\r\n        <div className=\"inner\">\r\n          <div className=\"slider\" aria-labelledby={headingId}>\r\n            <ul className=\"slider__wrapper\" style={wrapperTransform}>\r\n              <h3 id={headingId} className=\"visuallyhidden\">\r\n                {heading}\r\n              </h3>\r\n\r\n              {slides.map((slide, i) => {\r\n                return (\r\n                  <Slide\r\n                    key={i}\r\n                    slide={{ ...slide, index: i }}\r\n                    current={current}\r\n                    handleSlideClick={this.handleSlideClick}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n\r\n            <div className=\"slider__controls\">\r\n              <SliderControl\r\n                type=\"previous\"\r\n                title=\"Go to previous slide\"\r\n                handleClick={this.handlePreviousClick}\r\n              />\r\n\r\n              <SliderControl\r\n                type=\"next\"\r\n                title=\"Go to next slide\"\r\n                handleClick={this.handleNextClick}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}