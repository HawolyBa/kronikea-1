{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { db, auth } from \"../fbConfig\";\nimport { types } from \"../../utils/constants\";\nexport var log_in = function log_in(email, password) {\n  return function (dispatch) {\n    console.log(email, password);\n    auth.signInWithEmailAndPassword(email, password);\n  };\n};\nexport var getProfile = function getProfile(id) {\n  return function (dispatch) {\n    db.collection(\"users\").doc(id ? id : auth.currentUser.uid).onSnapshot(function (doc) {\n      return dispatch({\n        type: types.GET_PROFILE,\n        payload: _objectSpread({\n          id: doc.id\n        }, doc.data())\n      });\n    });\n  };\n};\nexport var getFavoriteAuthors = function getFavoriteAuthors() {\n  return function (dispatch) {\n    var addedOn;\n    db.collection(\"usersLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        addedOn = doc.data().createdAt;\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().recipient]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"users\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            addedOn: addedOn,\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: types.GET_FAVORITE_AUTHORS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};\nexport var getFollowers = function getFollowers() {\n  return function (dispatch) {\n    var addedOn;\n    db.collection(\"usersLikes\").where(\"recipient\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        addedOn = doc.data().createdAt;\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().senderId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"users\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            addedOn: addedOn,\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: types.GET_FOLLOWERS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};\nexport var getIsFollowing = function getIsFollowing(userId) {\n  return function (dispatch) {\n    if (auth.currentUser) {\n      db.collection(\"usersLikes\").where(\"recipient\", \"==\", userId).where(\"senderId\", \"==\", auth.currentUser.uid).onSnapshot(function (snapshot) {\n        var answer = snapshot.docs[0] ? true : false;\n        return dispatch({\n          type: types.IS_FOLLOWING,\n          payload: answer\n        });\n      });\n    }\n  };\n};\nexport var followUser = function followUser(id, isFavorite, newFollower) {\n  return function (dispatch) {\n    if (isFavorite) return message.warning(\"You are already following this user\");\n    if (!auth.currentUser) return message.error(\"You need to be logged in to follow users\");\n    if (!auth.currentUser.emailVerified) return message.error(\"You need to verify your email first\");\n    db.collection(\"usersLikes\").add({\n      sender: newFollower.username,\n      senderId: newFollower.id,\n      recipient: id,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      return message.success(\"You are now following this user\");\n    })[\"catch\"](function (err) {\n      return message.error(\"There has been a problem\");\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/userActions.js"],"names":["db","auth","types","log_in","email","password","dispatch","console","log","signInWithEmailAndPassword","getProfile","id","collection","doc","currentUser","uid","onSnapshot","type","GET_PROFILE","payload","data","getFavoriteAuthors","addedOn","where","get","then","docs","favArr","forEach","createdAt","recipient","users","result","map","user","Promise","all","res","favUsers","GET_FAVORITE_AUTHORS","getFollowers","senderId","GET_FOLLOWERS","getIsFollowing","userId","snapshot","answer","IS_FOLLOWING","followUser","isFavorite","newFollower","message","warning","error","emailVerified","add","sender","username","firebase","firestore","FieldValue","serverTimestamp","success","err"],"mappings":"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","sourcesContent":["import { db, auth } from \"../fbConfig\";\r\nimport { types } from \"../../utils/constants\";\r\n\r\nexport const log_in = (email, password) => (dispatch) => {\r\n  console.log(email, password);\r\n  auth.signInWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const getProfile = (id) => (dispatch) => {\r\n  db.collection(\"users\")\r\n    .doc(id ? id : auth.currentUser.uid)\r\n    .onSnapshot((doc) => {\r\n      return dispatch({\r\n        type: types.GET_PROFILE,\r\n        payload: { id: doc.id, ...doc.data() },\r\n      });\r\n    });\r\n};\r\n\r\nexport const getFavoriteAuthors = () => (dispatch) => {\r\n  let addedOn;\r\n  db.collection(\"usersLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        addedOn = doc.data().createdAt;\r\n        favArr = [...favArr, doc.data().recipient];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"users\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) =>\r\n            (favUsers = [...favUsers, { addedOn, id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: types.GET_FAVORITE_AUTHORS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n\r\nexport const getFollowers = () => (dispatch) => {\r\n  let addedOn;\r\n  db.collection(\"usersLikes\")\r\n    .where(\"recipient\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        addedOn = doc.data().createdAt;\r\n        favArr = [...favArr, doc.data().senderId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"users\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) =>\r\n            (favUsers = [...favUsers, { addedOn, id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: types.GET_FOLLOWERS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n\r\nexport const getIsFollowing = (userId) => (dispatch) => {\r\n  if (auth.currentUser) {\r\n    db.collection(\"usersLikes\")\r\n      .where(\"recipient\", \"==\", userId)\r\n      .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        const answer = snapshot.docs[0] ? true : false;\r\n        return dispatch({ type: types.IS_FOLLOWING, payload: answer });\r\n      });\r\n  }\r\n};\r\n\r\nexport const followUser = (id, isFavorite, newFollower) => (dispatch) => {\r\n  if (isFavorite) return message.warning(\"You are already following this user\");\r\n  if (!auth.currentUser)\r\n    return message.error(\"You need to be logged in to follow users\");\r\n  if (!auth.currentUser.emailVerified)\r\n    return message.error(\"You need to verify your email first\");\r\n\r\n  db.collection(\"usersLikes\")\r\n    .add({\r\n      sender: newFollower.username,\r\n      senderId: newFollower.id,\r\n      recipient: id,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n    .then(() => message.success(\"You are now following this user\"))\r\n    .catch((err) => message.error(\"There has been a problem\"));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}