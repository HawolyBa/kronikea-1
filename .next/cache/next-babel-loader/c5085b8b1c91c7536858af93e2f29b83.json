{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_STORY, GET_CHAPTERS, ADD_STORY } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nimport firebase from \"firebase\";\nimport { message } from \"antd\";\nexport var getStory = function getStory(id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(id).get().then(function (doc) {\n      dispatch({\n        type: GET_STORY,\n        payload: _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        })\n      });\n    });\n  };\n};\nexport var addStory = function addStory(data) {\n  return function (dispatch) {\n    db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n      banner: data.image,\n      authorName: data.username,\n      secondaryCharacters: [],\n      authorId: auth.currentUser.uid,\n      featured: false,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      note: 0\n    })).then(function (res) {\n      message.success(\"Story added successfully\");\n      dispatch({\n        type: ADD_STORY,\n        payload: {\n          message: \"Story added successfully\",\n          storyId: res.id\n        }\n      });\n    });\n  };\n};\nexport var getChapters = function getChapters(id) {\n  return function (dispatch) {\n    db.collection(\"chapters\").where(\"storyId\", \"==\", id).orderBy(\"number\", \"asc\").onSnapshot(function (docs) {\n      var arr = [];\n      docs.forEach(function (doc) {\n        arr.push({\n          authorId: doc.data().authorId,\n          id: doc.id,\n          createdAt: doc.data().createdAt,\n          number: doc.data().number,\n          title: doc.data().title,\n          commentsCount: doc.data().commentsCount\n        });\n      });\n      dispatch({\n        type: GET_CHAPTERS,\n        payload: arr\n      });\n    });\n  };\n};\nexport var getStoryCharacters = function getStoryCharacters(id) {\n  return function (dispatch) {};\n};\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteStories = function getFavoriteStories() {\n  return function (dispatch) {\n    db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().storyId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"stories\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_STORIES,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_STORY","GET_CHAPTERS","ADD_STORY","db","auth","firebase","message","getStory","id","dispatch","collection","doc","get","then","type","payload","data","addStory","add","banner","image","authorName","username","secondaryCharacters","authorId","currentUser","uid","featured","createdAt","firestore","FieldValue","serverTimestamp","note","res","success","storyId","getChapters","where","orderBy","onSnapshot","docs","arr","forEach","push","number","title","commentsCount","getStoryCharacters","getUserStories","items","getFavoriteStories","favArr","users","result","map","user","Promise","all","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n  ADD_STORY,\r\n} from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\nimport firebase from \"firebase\";\r\nimport { message } from \"antd\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      dispatch({\r\n        type: GET_STORY,\r\n        payload: { ...doc.data(), id: doc.id },\r\n      });\r\n    });\r\n};\r\n\r\nexport const addStory = (data) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .add({\r\n      ...data,\r\n      banner: data.image,\r\n      authorName: data.username,\r\n      secondaryCharacters: [],\r\n      authorId: auth.currentUser.uid,\r\n      featured: false,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      note: 0,\r\n    })\r\n    .then((res) => {\r\n      message.success(\"Story added successfully\");\r\n      dispatch({\r\n        type: ADD_STORY,\r\n        payload: { message: \"Story added successfully\", storyId: res.id },\r\n      });\r\n    });\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .orderBy(\"number\", \"asc\")\r\n    .onSnapshot((docs) => {\r\n      let arr = [];\r\n      docs.forEach((doc) => {\r\n        arr.push({\r\n          authorId: doc.data().authorId,\r\n          id: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          number: doc.data().number,\r\n          title: doc.data().title,\r\n          commentsCount: doc.data().commentsCount,\r\n        });\r\n      });\r\n      dispatch({\r\n        type: GET_CHAPTERS,\r\n        payload: arr,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getStoryCharacters = (id) => (dispatch) => {};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}