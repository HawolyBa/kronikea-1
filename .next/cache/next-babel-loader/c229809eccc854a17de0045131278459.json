{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\UploadImage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Upload, message, Form } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  console.log(file);\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst UploadImage = ({\n  storyInfo,\n  onChangeFunc\n}) => {\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === \"done\") {\n      onChangeFunc(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        banner: info.file.originFileObj\n      }));\n      getBase64(info.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImageUrl(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, loading ? __jsx(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }) : __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 40\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n\n  const testImage = e => console.log(e.target.files[0]);\n\n  return __jsx(React.Fragment, null, __jsx(Form.Item, {\n    name: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    name: \"avatar\",\n    accept: \"image/png, image/jpeg\",\n    onChange: testImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"upload-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Upload, {\n    name: \"banner\",\n    listType: \"picture-card\",\n    className: \"cover-uploader\",\n    showUploadList: false,\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, imageUrl ? __jsx(\"img\", {\n    src: imageUrl,\n    alt: \"image\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }) : uploadButton))), __jsx(Form.Item, {\n    label: \"Image Copyright\",\n    name: \"imageCopyright\",\n    rules: [{\n      required: storyInfo.banner ? true : false,\n      message: \"An image copyright is required\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    required: true,\n    type: \"text\",\n    id: \"imageCopyright\",\n    className: \"form-input\",\n    onChange: e => onChangeFunc(_objectSpread(_objectSpread({}, storyInfo), {}, {\n      imageCopyright: e.target.value\n    })),\n    value: storyInfo.imageCopyright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/UploadImage.js"],"names":["Upload","message","Form","LoadingOutlined","PlusOutlined","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","console","log","error","isLt2M","size","UploadImage","storyInfo","onChangeFunc","loading","setLoading","React","useState","imageUrl","setImageUrl","handleChange","info","status","banner","originFileObj","uploadButton","marginTop","testImage","e","target","files","width","required","imageCopyright","value"],"mappings":"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","sourcesContent":["import { Upload, message, Form } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  console.log(file);\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst UploadImage = ({ storyInfo, onChangeFunc }) => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      onChangeFunc({ ...storyInfo, banner: info.file.originFileObj });\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setLoading(false);\r\n        setImageUrl(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  const testImage = (e) => console.log(e.target.files[0]);\r\n\r\n  return (\r\n    <>\r\n      <Form.Item name=\"banner\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"avatar\"\r\n          name=\"avatar\"\r\n          accept=\"image/png, image/jpeg\"\r\n          onChange={testImage}\r\n        />\r\n        <div className=\"upload-image\">\r\n          <Upload\r\n            name=\"banner\"\r\n            listType=\"picture-card\"\r\n            className=\"cover-uploader\"\r\n            showUploadList={false}\r\n            beforeUpload={beforeUpload}\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"image\" style={{ width: \"100%\" }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n        </div>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Image Copyright\"\r\n        name=\"imageCopyright\"\r\n        rules={[\r\n          {\r\n            required: storyInfo.banner ? true : false,\r\n            message: \"An image copyright is required\",\r\n          },\r\n        ]}\r\n      >\r\n        <div className=\"input-group\">\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"imageCopyright\"\r\n            className=\"form-input\"\r\n            onChange={(e) =>\r\n              onChangeFunc({ ...storyInfo, imageCopyright: e.target.value })\r\n            }\r\n            value={storyInfo.imageCopyright}\r\n          />\r\n        </div>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"]},"metadata":{},"sourceType":"module"}