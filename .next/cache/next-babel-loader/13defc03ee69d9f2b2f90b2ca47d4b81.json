{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Space, Tag, Input, Tooltip, Divider } from \"antd\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { CATEGORIES, COPYRIGHTS, LANGUAGES, STATUS } from \"../../utils/constants\";\nimport InputGroup from \"../../components/common/Input\";\nimport SelectGroup from \"../../components/common/Select\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst newStory = () => {\n  const editInput = /*#__PURE__*/React.createRef();\n  const editedInput = /*#__PURE__*/React.createRef();\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [inputVisible, setInputVisible] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [editInputIndex, SetEditInputIndex] = React.useState(-1);\n  const [editInputValue, SetEditInputValue] = React.useState(\"\");\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImageUrl(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, loading ? __jsx(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }) : __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n\n  const handleClose = removedTag => {\n    const tags = tags.filter(tag => tag !== removedTag);\n    setTags(tags);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n    editInput.focus();\n  };\n\n  const handleInputChange = e => {\n    setInputVisible(e.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n\n    setTags(tags);\n    setInputVisible(false);\n    setInputVisible(\"\");\n  };\n\n  const handleEditInputChange = e => {\n    SetEditInputValue(e.target.value);\n  };\n\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    editInputValue(\"\");\n    seteditInputIndex(-1);\n  };\n\n  return __jsx(\"div\", {\n    className: \"new-story\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Add a new story\"), __jsx(\"form\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroup, {\n    md: 18,\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Enter a title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), __jsx(SelectGroup, {\n    md: 6,\n    name: \"categories\",\n    options: CATEGORIES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), __jsx(Row, {\n    gutter: [24, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(SelectGroup, {\n    md: 8,\n    name: \"language\",\n    options: LANGUAGES,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), __jsx(SelectGroup, {\n    md: 8,\n    name: \"status\",\n    options: STATUS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), __jsx(SelectGroup, {\n    md: 8,\n    name: \"copyright\",\n    options: COPYRIGHTS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), __jsx(\"textarea\", {\n    name: \"summary\",\n    id: \"summary\",\n    className: \"form-input\",\n    placeholder: \"Summarize your story here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Mature content\"), __jsx(\"div\", {\n    className: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(Space, {\n    size: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio__1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-1\",\n    type: \"radio\",\n    name: \"radio\",\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Yes\")), __jsx(\"div\", {\n    className: \"radio__2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-2\",\n    type: \"radio\",\n    name: \"radio\",\n    value: false,\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"No\")))))), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Visibilty\"), __jsx(\"div\", {\n    className: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, __jsx(Space, {\n    size: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"radio__1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-3\",\n    type: \"radio\",\n    name: \"radio\",\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Public\")), __jsx(\"div\", {\n    className: \"radio__2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-4\",\n    type: \"radio\",\n    name: \"radio\",\n    value: false,\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, \"Private\")))))), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Tags\"), tags.map((tag, index) => {\n    if (editInputIndex === index) {\n      return __jsx(Input, {\n        ref: editInput,\n        key: tag,\n        size: \"small\",\n        className: \"tag-input\",\n        value: editInputValue,\n        onChange: handleEditInputChange,\n        onBlur: handleEditInputConfirm,\n        onPressEnter: handleEditInputConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      });\n    }\n\n    const isLongTag = tag.length > 20;\n\n    const tagElem = __jsx(Tag, {\n      className: \"edit-tag\",\n      key: tag,\n      closable: index !== 0,\n      onClose: () => handleClose(tag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      onDoubleClick: e => {\n        if (index !== 0) {\n          seteditInputIndex(index);\n          SetEditInputValue(tag);\n          editInput.focus();\n          e.preventDefault();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, isLongTag ? `${tag.slice(0, 20)}...` : tag));\n\n    return isLongTag ? __jsx(Tooltip, {\n      title: tag,\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, tagElem) : tagElem;\n  }), inputVisible && __jsx(Input, {\n    ref: editInput,\n    type: \"text\",\n    size: \"small\",\n    className: \"tag-input\",\n    value: inputValue,\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onPressEnter: handleInputConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: showInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }), \" New Tag\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"Upload a cover\"), __jsx(Upload, {\n    name: \"cover\",\n    listType: \"picture-card\",\n    className: \"cover-uploader\",\n    showUploadList: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, imageUrl ? __jsx(\"img\", {\n    src: imageUrl,\n    alt: \"cover\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }) : uploadButton), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"image copyright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default newStory;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Row","Col","Space","Tag","Input","Tooltip","Divider","Upload","message","LoadingOutlined","PlusOutlined","CATEGORIES","COPYRIGHTS","LANGUAGES","STATUS","InputGroup","SelectGroup","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","newStory","editInput","createRef","editedInput","loading","setLoading","useState","imageUrl","setImageUrl","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","SetEditInputIndex","editInputValue","SetEditInputValue","handleChange","info","status","originFileObj","uploadButton","marginTop","handleClose","removedTag","filter","tag","showInput","focus","handleInputChange","e","target","value","handleInputConfirm","indexOf","handleEditInputChange","handleEditInputConfirm","newTags","seteditInputIndex","map","index","isLongTag","length","tagElem","preventDefault","slice","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,OAA/C,QAA8D,MAA9D;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAEA,SACEC,UADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,uBALP;AAMA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,MAAI,CAACD,UAAL,EAAiB;AACfnB,IAAAA,OAAO,CAACqB,KAAR,CAAc,mCAAd;AACD;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXtB,IAAAA,OAAO,CAACqB,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,UAAU,IAAIG,MAArB;AACD;;AAED,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAMC,SAAS,gBAAGlC,KAAK,CAACmC,SAAN,EAAlB;AACA,QAAMC,WAAW,gBAAGpC,KAAK,CAACmC,SAAN,EAApB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBtC,KAAK,CAACuC,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzC,KAAK,CAACuC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB3C,KAAK,CAACuC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkC7C,KAAK,CAACuC,QAAN,CAAe,KAAf,CAAxC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8B/C,KAAK,CAACuC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCjD,KAAK,CAACuC,QAAN,CAAe,CAAC,CAAhB,CAA5C;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCnD,KAAK,CAACuC,QAAN,CAAe,EAAf,CAA5C;;AAEA,QAAMa,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAIA,IAAI,CAAC1B,IAAL,CAAU2B,MAAV,KAAqB,WAAzB,EAAsC;AACpChB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AACD,QAAIe,IAAI,CAAC1B,IAAL,CAAU2B,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACApC,MAAAA,SAAS,CAACmC,IAAI,CAAC1B,IAAL,CAAU4B,aAAX,EAA2Bf,QAAD,IAAc;AAC/CF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD,OAHQ,CAAT;AAID;AACF,GAZD;;AAcA,QAAMgB,YAAY,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,OAAO,GAAG,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyB,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnC,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;;AAOA,QAAMC,WAAW,GAAIC,UAAD,IAAgB;AAClC,UAAMjB,IAAI,GAAGA,IAAI,CAACkB,MAAL,CAAaC,GAAD,IAASA,GAAG,KAAKF,UAA7B,CAAb;AACAhB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMoB,SAAS,GAAG,MAAM;AACtBjB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAX,IAAAA,SAAS,CAAC6B,KAAV;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BpB,IAAAA,eAAe,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAItB,UAAU,IAAIJ,IAAI,CAAC2B,OAAL,CAAavB,UAAb,MAA6B,CAAC,CAAhD,EAAmD;AACjDJ,MAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUI,UAAV,CAAP;AACD;;AACDH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAA,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAPD;;AASA,QAAMyB,qBAAqB,GAAIL,CAAD,IAAO;AACnCd,IAAAA,iBAAiB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD,GAFD;;AAIA,QAAMI,sBAAsB,GAAG,MAAM;AACnC,UAAMC,OAAO,GAAG,CAAC,GAAG9B,IAAJ,CAAhB;AACA8B,IAAAA,OAAO,CAACxB,cAAD,CAAP,GAA0BE,cAA1B;AACAP,IAAAA,OAAO,CAAC6B,OAAD,CAAP;AACAtB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAuB,IAAAA,iBAAiB,CAAC,CAAC,CAAF,CAAjB;AACD,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,eAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,IAAI,EAAC,YAAzB;AAAsC,IAAA,OAAO,EAAE7D,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,IAAI,EAAC,UAAzB;AAAoC,IAAA,OAAO,EAAEE,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,IAAI,EAAC,QAAzB;AAAkC,IAAA,OAAO,EAAEC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,IAAI,EAAC,WAAzB;AAAqC,IAAA,OAAO,EAAEF,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAVF,EAeE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAqBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,OAAO,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE,KAJT;AAKE,IAAA,OAAO,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,CAZF,CADF,CALF,CADF,CADF,EAmCE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,OAAO,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAE,KAJT;AAKE,IAAA,OAAO,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAZF,CADF,CAJF,CADF,CAnCF,EAoEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,OAAO,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIG6B,IAAI,CAACgC,GAAL,CAAS,CAACb,GAAD,EAAMc,KAAN,KAAgB;AACxB,QAAI3B,cAAc,KAAK2B,KAAvB,EAA8B;AAC5B,aACE,MAAC,KAAD;AACE,QAAA,GAAG,EAAEzC,SADP;AAEE,QAAA,GAAG,EAAE2B,GAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,SAAS,EAAC,WAJZ;AAKE,QAAA,KAAK,EAAEX,cALT;AAME,QAAA,QAAQ,EAAEoB,qBANZ;AAOE,QAAA,MAAM,EAAEC,sBAPV;AAQE,QAAA,YAAY,EAAEA,sBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;;AACD,UAAMK,SAAS,GAAGf,GAAG,CAACgB,MAAJ,GAAa,EAA/B;;AACA,UAAMC,OAAO,GACX,MAAC,GAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,EAAEjB,GAFP;AAGE,MAAA,QAAQ,EAAEc,KAAK,KAAK,CAHtB;AAIE,MAAA,OAAO,EAAE,MAAMjB,WAAW,CAACG,GAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACE,MAAA,aAAa,EAAGI,CAAD,IAAO;AACpB,YAAIU,KAAK,KAAK,CAAd,EAAiB;AACfF,UAAAA,iBAAiB,CAACE,KAAD,CAAjB;AACAxB,UAAAA,iBAAiB,CAACU,GAAD,CAAjB;AACA3B,UAAAA,SAAS,CAAC6B,KAAV;AACAE,UAAAA,CAAC,CAACc,cAAF;AACD;AACF,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGH,SAAS,GAAI,GAAEf,GAAG,CAACmB,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAiB,KAAvB,GAA8BnB,GAV1C,CANF,CADF;;AAqBA,WAAOe,SAAS,GACd,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEf,GAAhB;AAAqB,MAAA,GAAG,EAAEA,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,OADH,CADc,GAKdA,OALF;AAOD,GA5CA,CAJH,EAiDGlC,YAAY,IACX,MAAC,KAAD;AACE,IAAA,GAAG,EAAEV,SADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAC,WAJZ;AAKE,IAAA,KAAK,EAAEY,UALT;AAME,IAAA,QAAQ,EAAEkB,iBANZ;AAOE,IAAA,MAAM,EAAEI,kBAPV;AAQE,IAAA,YAAY,EAAEA,kBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDJ,EA6DG,CAACxB,YAAD,IACC,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEkB,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aA9DJ,CADF,CApEF,EAyIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzIF,EA0IE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAIE,IAAA,cAAc,EAAE,KAJlB;AAKE,IAAA,MAAM,EAAC,kDALT;AAME,IAAA,YAAY,EAAEpC,YANhB;AAOE,IAAA,QAAQ,EAAE0B,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGZ,QAAQ,GACP;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAAEyC,MAAAA,KAAK,EAAE;AAAT,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGPzB,YAZJ,CAFF,EAiBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CA1IF,CArBF,CAFF,CADF;AA+LD,CAlQD;;AAoQA,eAAevB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Space, Tag, Input, Tooltip, Divider } from \"antd\";\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n  CATEGORIES,\r\n  COPYRIGHTS,\r\n  LANGUAGES,\r\n  STATUS,\r\n} from \"../../utils/constants\";\r\nimport InputGroup from \"../../components/common/Input\";\r\nimport SelectGroup from \"../../components/common/Select\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst newStory = () => {\r\n  const editInput = React.createRef();\r\n  const editedInput = React.createRef();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n  const [tags, setTags] = React.useState([]);\r\n  const [inputVisible, setInputVisible] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [editInputIndex, SetEditInputIndex] = React.useState(-1);\r\n  const [editInputValue, SetEditInputValue] = React.useState(\"\");\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setLoading(false);\r\n        setImageUrl(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  const handleClose = (removedTag) => {\r\n    const tags = tags.filter((tag) => tag !== removedTag);\r\n    setTags(tags);\r\n  };\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n    editInput.focus();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputVisible(e.target.value);\r\n  };\r\n\r\n  const handleInputConfirm = () => {\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    setInputVisible(false);\r\n    setInputVisible(\"\");\r\n  };\r\n\r\n  const handleEditInputChange = (e) => {\r\n    SetEditInputValue(e.target.value);\r\n  };\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setTags(newTags);\r\n    editInputValue(\"\");\r\n    seteditInputIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-story\">\r\n      <h2 className=\"side-heading\">Add a new story</h2>\r\n      <form className=\"form-group\">\r\n        <Row gutter={[24, 24]}>\r\n          <InputGroup\r\n            md={18}\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Enter a title\"\r\n          />\r\n          <SelectGroup md={6} name=\"categories\" options={CATEGORIES} />\r\n        </Row>\r\n        <Row gutter={[24, 24]}>\r\n          <SelectGroup md={8} name=\"language\" options={LANGUAGES} />\r\n          <SelectGroup md={8} name=\"status\" options={STATUS} />\r\n          <SelectGroup md={8} name=\"copyright\" options={COPYRIGHTS} />\r\n        </Row>\r\n        <textarea\r\n          name=\"summary\"\r\n          id=\"summary\"\r\n          className=\"form-input\"\r\n          placeholder=\"Summarize your story here\"\r\n        ></textarea>\r\n        <Row>\r\n          <Col md={8}>\r\n            <div className=\"input-group\">\r\n              <label className=\"title-label\" htmlFor=\"public\">\r\n                Mature content\r\n              </label>\r\n\r\n              <div className=\"radio\">\r\n                <Space size={32}>\r\n                  <div className=\"radio__1\">\r\n                    <input\r\n                      id=\"radio-1\"\r\n                      type=\"radio\"\r\n                      name=\"radio\"\r\n                      value={true}\r\n                    />\r\n                    <label htmlFor=\"radio-1\"></label>\r\n                    <p>Yes</p>\r\n                  </div>\r\n\r\n                  <div className=\"radio__2\">\r\n                    <input\r\n                      id=\"radio-2\"\r\n                      type=\"radio\"\r\n                      name=\"radio\"\r\n                      value={false}\r\n                      checked\r\n                    />\r\n                    <label htmlFor=\"radio-2\"></label>\r\n                    <p>No</p>\r\n                  </div>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={8}>\r\n            <div className=\"input-group\">\r\n              <label className=\"title-label\" htmlFor=\"public\">\r\n                Visibilty\r\n              </label>\r\n              <div className=\"radio\">\r\n                <Space size={32}>\r\n                  <div className=\"radio__1\">\r\n                    <input\r\n                      id=\"radio-3\"\r\n                      type=\"radio\"\r\n                      name=\"radio\"\r\n                      value={true}\r\n                    />\r\n                    <label htmlFor=\"radio-3\"></label>\r\n                    <p>Public</p>\r\n                  </div>\r\n\r\n                  <div className=\"radio__2\">\r\n                    <input\r\n                      id=\"radio-4\"\r\n                      type=\"radio\"\r\n                      name=\"radio\"\r\n                      value={false}\r\n                      checked\r\n                    />\r\n                    <label htmlFor=\"radio-4\"></label>\r\n                    <p>Private</p>\r\n                  </div>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={8}>\r\n            <div className=\"input-group\">\r\n              <label className=\"title-label\" htmlFor=\"tags\">\r\n                Tags\r\n              </label>\r\n              {tags.map((tag, index) => {\r\n                if (editInputIndex === index) {\r\n                  return (\r\n                    <Input\r\n                      ref={editInput}\r\n                      key={tag}\r\n                      size=\"small\"\r\n                      className=\"tag-input\"\r\n                      value={editInputValue}\r\n                      onChange={handleEditInputChange}\r\n                      onBlur={handleEditInputConfirm}\r\n                      onPressEnter={handleEditInputConfirm}\r\n                    />\r\n                  );\r\n                }\r\n                const isLongTag = tag.length > 20;\r\n                const tagElem = (\r\n                  <Tag\r\n                    className=\"edit-tag\"\r\n                    key={tag}\r\n                    closable={index !== 0}\r\n                    onClose={() => handleClose(tag)}\r\n                  >\r\n                    <span\r\n                      onDoubleClick={(e) => {\r\n                        if (index !== 0) {\r\n                          seteditInputIndex(index);\r\n                          SetEditInputValue(tag);\r\n                          editInput.focus();\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                    </span>\r\n                  </Tag>\r\n                );\r\n                return isLongTag ? (\r\n                  <Tooltip title={tag} key={tag}>\r\n                    {tagElem}\r\n                  </Tooltip>\r\n                ) : (\r\n                  tagElem\r\n                );\r\n              })}\r\n              {inputVisible && (\r\n                <Input\r\n                  ref={editInput}\r\n                  type=\"text\"\r\n                  size=\"small\"\r\n                  className=\"tag-input\"\r\n                  value={inputValue}\r\n                  onChange={handleInputChange}\r\n                  onBlur={handleInputConfirm}\r\n                  onPressEnter={handleInputConfirm}\r\n                />\r\n              )}\r\n              {!inputVisible && (\r\n                <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n                  <PlusOutlined /> New Tag\r\n                </Tag>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Divider />\r\n          <Col md={8}>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"cover\">Upload a cover</label>\r\n              <Upload\r\n                name=\"cover\"\r\n                listType=\"picture-card\"\r\n                className=\"cover-uploader\"\r\n                showUploadList={false}\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleChange}\r\n              >\r\n                {imageUrl ? (\r\n                  <img src={imageUrl} alt=\"cover\" style={{ width: \"100%\" }} />\r\n                ) : (\r\n                  uploadButton\r\n                )}\r\n              </Upload>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                placeholder=\"image copyright\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default newStory;\r\n"]},"metadata":{},"sourceType":"module"}