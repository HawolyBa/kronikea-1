{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport StoryForm from \"../../components/forms/StoryForm\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\n\nvar NewStory = function NewStory(props) {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var auth = useAuth();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mature = _React$useState2[0],\n      setMature = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visibility = _React$useState4[0],\n      setVisibility = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      mature: mature\n    });\n  }, [mature]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      \"public\": visibility\n    });\n  }, [visibility]);\n  React.useEffect(function () {\n    if (props.storyId) {\n      router.push(\"/story/\".concat(storyId));\n    }\n  }, [props.storyId]);\n\n  var submit = function submit(values) {\n    delete values.currentChar;\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: props.auth.user.username,\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\"\n    }));\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(StoryForm, {\n    type: \"add\",\n    submit: submit,\n    characters: props.characters,\n    loading: props.loading,\n    storyId: props.storyId,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(NewStory, \"wMqN1yymmvfwI2fydYMDW91vykg=\", false, function () {\n  return [Form.useForm, useAuth];\n});\n\n_c = NewStory;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    confirmMessage: state.stories.message,\n    storyId: state.stories.storyId,\n    loading: state.stories.loadingStory\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  addStory: addStory\n})(NewStory);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewStory\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Form","connect","useAuth","getUserCharacters","addStory","StoryForm","RedirectComp","LoadingScreen","NewStory","props","useForm","form","auth","useState","mature","setMature","visibility","setVisibility","useEffect","user","setFieldsValue","storyId","router","push","submit","values","currentChar","authorName","username","banner","getFieldValue","isLoading","characters","loading","mapStateToProps","state","userCharacters","confirmMessage","stories","message","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport StoryForm from \"../../components/forms/StoryForm\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\n\r\nconst NewStory = (props) => {\r\n  const [form] = Form.useForm();\r\n  const auth = useAuth();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ mature });\r\n  }, [mature]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.storyId) {\r\n      router.push(`/story/${storyId}`);\r\n    }\r\n  }, [props.storyId]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    props.addStory({\r\n      ...values,\r\n      authorName: props.auth.user.username,\r\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <StoryForm\r\n          type=\"add\"\r\n          submit={submit}\r\n          characters={props.characters}\r\n          loading={props.loading}\r\n          storyId={props.storyId}\r\n          form={form}\r\n          mature={mature}\r\n          setMature={setMature}\r\n          visibility={visibility}\r\n          setVisibility={setVisibility}\r\n        />\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}