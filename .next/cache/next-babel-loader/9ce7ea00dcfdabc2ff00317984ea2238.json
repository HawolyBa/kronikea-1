{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Row, Col, Space, Divider, Form, Spin, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { CATEGORIES, COPYRIGHTS, LANGUAGES, STATUS } from \"../../utils/constants\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport InputGroup from \"../../components/common/Input\";\nimport SelectGroup from \"../../components/common/Select\";\nimport Tags from \"../../components/forms/Tags\";\nimport UploadImage from \"../../components/forms/UploadImage\";\nimport Loader from \"../../components/common/Loader\";\nimport { useRouter } from \"next/router\";\n\nvar newStory = function newStory(props) {\n  _s();\n\n  var _props$characters;\n\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _React$useState = React.useState({\n    title: \"\",\n    categories: [],\n    language: \"\",\n    status: \"\",\n    copyright: \"\",\n    summary: \"\",\n    mature: false,\n    \"public\": true,\n    tags: [],\n    mainCharacters: [],\n    banner: \"\",\n    imageCopyright: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      storyInfo = _React$useState2[0],\n      setStoryInfo = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      summaryCount = _React$useState4[0],\n      setSummaryCount = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentChar = _React$useState6[0],\n      setCurrentChar = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.scrollToField(\"title\");\n  }, [form.getFieldsError()]);\n\n  var addCharacter = function addCharacter() {\n    if (currentChar && storyInfo.mainCharacters.indexOf(currentChar) === -1 && storyInfo.mainCharacters.length < 5) {\n      setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mainCharacters: [].concat(_toConsumableArray(storyInfo.mainCharacters), [currentChar])\n      }));\n    }\n\n    setCurrentChar(\"\");\n  };\n\n  var removeCharacter = function removeCharacter(id) {\n    setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n      mainCharacters: storyInfo.mainCharacters.filter(function (c) {\n        return c !== id;\n      })\n    }));\n  };\n\n  var submitStory = function submitStory(values) {\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      banner: storyInfo.banner,\n      tags: storyInfo.tags,\n      summary: values.summary ? values.summary : \"\",\n      imageCopyright: values.imageCopyright ? values.imageCopyright : \"\",\n      mature: storyInfo.mature,\n      \"public\": storyInfo[\"public\"],\n      mainCharacters: storyInfo.mainCharacters\n    }));\n  };\n\n  return auth.isLoading ? __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }) : auth.user.uid ? __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Add a new story\"), __jsx(Form, {\n    form: form,\n    layout: \"vertical\",\n    className: \"form-group\",\n    onFinish: submitStory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(InputGroup, {\n    required: true,\n    sm: 24,\n    xs: 24,\n    md: 18,\n    lg: 18,\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Enter a title\",\n    value: storyInfo.title,\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    rules: [{\n      required: true,\n      message: \"A title is required\"\n    }, {\n      max: 70\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(SelectGroup, {\n    sm: 24,\n    xs: 24,\n    lg: 6,\n    md: 6,\n    name: \"categories\",\n    options: CATEGORIES,\n    value: storyInfo.categories,\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    type: \"multiple\",\n    form: form,\n    rules: [{\n      required: true,\n      message: \"At least 1 category is required\"\n    }, {\n      max: 2,\n      type: \"array\",\n      message: \"You can only select up to 2 categories\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(SelectGroup, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    name: \"language\",\n    options: LANGUAGES,\n    value: storyInfo.language,\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    type: \"single\",\n    form: form,\n    rules: [{\n      required: true,\n      message: \"A language is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), __jsx(SelectGroup, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    name: \"status\",\n    options: STATUS,\n    info: \"info about status\",\n    value: storyInfo.status,\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    type: \"single\",\n    form: form,\n    rules: [{\n      required: true,\n      message: \"A status is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), __jsx(SelectGroup, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    name: \"copyright\",\n    options: COPYRIGHTS,\n    info: \"info about copyright\",\n    value: storyInfo.copyright,\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    type: \"single\",\n    form: form,\n    rules: [{\n      required: true,\n      message: \"A copyright is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"Summary\",\n    name: \"summary\",\n    rules: [{\n      max: 180,\n      message: \"Your summary cannot exceed 180 characters\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group summary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, __jsx(\"textarea\", {\n    rows: \"5\",\n    id: \"summary\",\n    className: \"form-input\",\n    placeholder: \"Summarize your story here\",\n    value: storyInfo.summary,\n    onChange: function onChange(e) {\n      setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        summary: e.target.value\n      }));\n      setSummaryCount(e.target.value.length);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: \"counter \".concat(summaryCount > 180 ? \"exceed\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, summaryCount, \"/180\"))), __jsx(Row, {\n    justify: \"space-between\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    md: 8,\n    sm: 12,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, __jsx(\"fieldset\", {\n    id: \"mature\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"public\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, \"Mature content\"), __jsx(\"div\", {\n    className: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, __jsx(Space, {\n    size: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"radio__1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-1\",\n    type: \"radio\",\n    name: \"mature\",\n    value: true,\n    onChange: function onChange() {\n      return setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mature: true\n      }));\n    },\n    checked: storyInfo.mature ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"Yes\")), __jsx(\"div\", {\n    className: \"radio__2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-2\",\n    type: \"radio\",\n    name: \"mature\",\n    value: false,\n    onChange: function onChange() {\n      return setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        mature: false\n      }));\n    },\n    checked: storyInfo.mature ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, \"No\"))))))), __jsx(Col, {\n    lg: 4,\n    md: 8,\n    sm: 12,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, __jsx(\"fieldset\", {\n    id: \"public\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"public\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, \"Visibilty\"), __jsx(\"div\", {\n    className: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, __jsx(Space, {\n    size: 32,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"radio__1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-3\",\n    type: \"radio\",\n    name: \"public\",\n    value: true,\n    onChange: function onChange() {\n      return setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        \"public\": true\n      }));\n    },\n    checked: storyInfo[\"public\"] ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, \"Public\")), __jsx(\"div\", {\n    className: \"radio__2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }\n  }, __jsx(\"input\", {\n    id: \"radio-4\",\n    type: \"radio\",\n    name: \"public\",\n    value: false,\n    onChange: function onChange() {\n      return setStoryInfo(_objectSpread(_objectSpread({}, storyInfo), {}, {\n        \"public\": false\n      }));\n    },\n    checked: storyInfo[\"public\"] ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"radio-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"Private\"))))))), __jsx(Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"title-label\",\n    htmlFor: \"tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, \"Tags\"), __jsx(Tags, {\n    storyInfo: storyInfo,\n    tags: storyInfo.tags,\n    setTags: setStoryInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Main Characters\",\n    name: \"mainCharacters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, __jsx(\"select\", {\n    value: currentChar,\n    disabled: storyInfo.mainCharacters.length >= 5 ? true : false,\n    onChange: function onChange(e) {\n      return setCurrentChar(e.target.value);\n    },\n    className: \"form-input select-add-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 23\n    }\n  }, __jsx(\"option\", {\n    selected: true,\n    value: \"\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }, \"Choose\"), (_props$characters = props.characters) === null || _props$characters === void 0 ? void 0 : _props$characters.filter(function (c) {\n    return !storyInfo.mainCharacters.includes(c.id);\n  }).map(function (_char) {\n    return __jsx(\"option\", {\n      key: _char.id,\n      value: _char.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 29\n      }\n    }, \"\".concat(_char.firstname, \" \").concat(_char.lastname));\n  }))), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"form-input select-add-input-iconbox\",\n    onClick: addCharacter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 25\n    }\n  }, \"+\"))), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, \"You can add up to 5 main characters\"))))), __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 15\n    }\n  }, props.characters.filter(function (c) {\n    return storyInfo.mainCharacters.indexOf(c.id) !== -1;\n  }).map(function (_char2) {\n    return __jsx(Col, {\n      md: 12,\n      sm: 24,\n      key: _char2.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      key: _char2.id,\n      className: \"main-selected\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"main-avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: _char2.image,\n      alt: _char2.firstname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 27\n      }\n    })), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, \"\".concat(_char2.firstname, \" \").concat(_char2.lastname), \" \"), __jsx(\"ion-icon\", {\n      onClick: function onClick() {\n        return removeCharacter(_char2.id);\n      },\n      name: \"close-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    })));\n  })))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    align: \"bottom\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }, \"Upload a cover\"), __jsx(UploadImage, {\n    storyInfo: storyInfo,\n    onChangeFunc: setStoryInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }))), __jsx(InputGroup, {\n    required: false,\n    sm: 24,\n    xs: 24,\n    md: 12,\n    lg: 12,\n    id: \"banner\",\n    type: \"text\",\n    name: \"banner\",\n    title: \"Or submit a link to an image\",\n    placeholder: \"\",\n    value: typeof storyInfo.banner !== \"object\" ? storyInfo.banner : \"\",\n    onChangeFunc: setStoryInfo,\n    storyInfo: storyInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }), props.loading || props.storyId ? __jsx(\"button\", {\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, __jsx(Spin, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  })) : __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, \"Create\")))) : router.push(\"/auth\");\n};\n\n_s(newStory, \"5Zi6ed7iRGo2AdRSMq8cDWNKTjY=\", false, function () {\n  return [useAuth, Form.useForm, useRouter];\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    confirmMessage: state.stories.message,\n    storyId: state.stories.storyId,\n    loading: state.stories.loadingStory\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  addStory: addStory\n})(newStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Row","Col","Space","Divider","Form","Spin","message","connect","CATEGORIES","COPYRIGHTS","LANGUAGES","STATUS","useAuth","getUserCharacters","addStory","InputGroup","SelectGroup","Tags","UploadImage","Loader","useRouter","newStory","props","auth","useForm","form","router","useState","title","categories","language","status","copyright","summary","mature","tags","mainCharacters","banner","imageCopyright","storyInfo","setStoryInfo","summaryCount","setSummaryCount","currentChar","setCurrentChar","useEffect","user","scrollToField","getFieldsError","addCharacter","indexOf","length","removeCharacter","id","filter","c","submitStory","values","authorName","username","isLoading","uid","required","max","type","e","target","value","characters","includes","map","char","firstname","lastname","image","loading","storyId","push","mapStateToProps","state","userCharacters","confirmMessage","stories","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Space, Divider, Form, Spin, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  CATEGORIES,\r\n  COPYRIGHTS,\r\n  LANGUAGES,\r\n  STATUS,\r\n} from \"../../utils/constants\";\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport InputGroup from \"../../components/common/Input\";\r\nimport SelectGroup from \"../../components/common/Select\";\r\nimport Tags from \"../../components/forms/Tags\";\r\nimport UploadImage from \"../../components/forms/UploadImage\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst newStory = (props) => {\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [storyInfo, setStoryInfo] = React.useState({\r\n    title: \"\",\r\n    categories: [],\r\n    language: \"\",\r\n    status: \"\",\r\n    copyright: \"\",\r\n    summary: \"\",\r\n    mature: false,\r\n    public: true,\r\n    tags: [],\r\n    mainCharacters: [],\r\n    banner: \"\",\r\n    imageCopyright: \"\",\r\n  });\r\n  const [summaryCount, setSummaryCount] = React.useState(0);\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.scrollToField(\"title\");\r\n  }, [form.getFieldsError()]);\r\n\r\n  const addCharacter = () => {\r\n    if (\r\n      currentChar &&\r\n      storyInfo.mainCharacters.indexOf(currentChar) === -1 &&\r\n      storyInfo.mainCharacters.length < 5\r\n    ) {\r\n      setStoryInfo({\r\n        ...storyInfo,\r\n        mainCharacters: [...storyInfo.mainCharacters, currentChar],\r\n      });\r\n    }\r\n    setCurrentChar(\"\");\r\n  };\r\n\r\n  const removeCharacter = (id) => {\r\n    setStoryInfo({\r\n      ...storyInfo,\r\n      mainCharacters: storyInfo.mainCharacters.filter((c) => c !== id),\r\n    });\r\n  };\r\n\r\n  const submitStory = (values) => {\r\n    props.addStory({\r\n      ...values,\r\n      authorName: auth.user.username,\r\n      banner: storyInfo.banner,\r\n      tags: storyInfo.tags,\r\n      summary: values.summary ? values.summary : \"\",\r\n      imageCopyright: values.imageCopyright ? values.imageCopyright : \"\",\r\n      mature: storyInfo.mature,\r\n      public: storyInfo.public,\r\n      mainCharacters: storyInfo.mainCharacters,\r\n    });\r\n  };\r\n\r\n  return auth.isLoading ? (\r\n    <Loader />\r\n  ) : auth.user.uid ? (\r\n    <div className=\"new-story custom-form\">\r\n      <div className=\"inner\">\r\n        <h2 className=\"side-heading\">Add a new story</h2>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          className=\"form-group\"\r\n          onFinish={submitStory}\r\n        >\r\n          <Row gutter={[24, 24]}>\r\n            <InputGroup\r\n              required={true}\r\n              sm={24}\r\n              xs={24}\r\n              md={18}\r\n              lg={18}\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Enter a title\"\r\n              value={storyInfo.title}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A title is required\",\r\n                },\r\n                { max: 70 },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              sm={24}\r\n              xs={24}\r\n              lg={6}\r\n              md={6}\r\n              name=\"categories\"\r\n              options={CATEGORIES}\r\n              value={storyInfo.categories}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"multiple\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"At least 1 category is required\",\r\n                },\r\n                {\r\n                  max: 2,\r\n                  type: \"array\",\r\n                  message: \"You can only select up to 2 categories\",\r\n                },\r\n              ]}\r\n            />\r\n          </Row>\r\n          <Row gutter={[24, 24]}>\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"language\"\r\n              options={LANGUAGES}\r\n              value={storyInfo.language}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A language is required\",\r\n                },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"status\"\r\n              options={STATUS}\r\n              info={\"info about status\"}\r\n              value={storyInfo.status}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A status is required\",\r\n                },\r\n              ]}\r\n            />\r\n            <SelectGroup\r\n              md={8}\r\n              sm={24}\r\n              xs={24}\r\n              lg={8}\r\n              name=\"copyright\"\r\n              options={COPYRIGHTS}\r\n              info={\"info about copyright\"}\r\n              value={storyInfo.copyright}\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n              type=\"single\"\r\n              form={form}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A copyright is required\",\r\n                },\r\n              ]}\r\n            />\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Summary\"\r\n            name=\"summary\"\r\n            rules={[\r\n              {\r\n                max: 180,\r\n                message: \"Your summary cannot exceed 180 characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <div className=\"input-group summary\">\r\n              <textarea\r\n                rows=\"5\"\r\n                id=\"summary\"\r\n                className=\"form-input\"\r\n                placeholder=\"Summarize your story here\"\r\n                value={storyInfo.summary}\r\n                onChange={(e) => {\r\n                  setStoryInfo({ ...storyInfo, summary: e.target.value });\r\n                  setSummaryCount(e.target.value.length);\r\n                }}\r\n              ></textarea>\r\n              <span className={`counter ${summaryCount > 180 ? \"exceed\" : \"\"}`}>\r\n                {summaryCount}/180\r\n              </span>\r\n            </div>\r\n          </Form.Item>\r\n          <Row justify=\"space-between\" gutter={[24, 24]}>\r\n            <Col lg={4} md={8} sm={12} xs={24}>\r\n              <div className=\"input-group\">\r\n                <fieldset id=\"mature\">\r\n                  <label className=\"title-label\" htmlFor=\"public\">\r\n                    Mature content\r\n                  </label>\r\n\r\n                  <div className=\"radio\">\r\n                    <Space size={32}>\r\n                      <div className=\"radio__1\">\r\n                        <input\r\n                          id=\"radio-1\"\r\n                          type=\"radio\"\r\n                          name=\"mature\"\r\n                          value={true}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              mature: true,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.mature ? true : false}\r\n                        />\r\n                        <label htmlFor=\"radio-1\"></label>\r\n                        <p>Yes</p>\r\n                      </div>\r\n\r\n                      <div className=\"radio__2\">\r\n                        <input\r\n                          id=\"radio-2\"\r\n                          type=\"radio\"\r\n                          name=\"mature\"\r\n                          value={false}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              mature: false,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.mature ? false : true}\r\n                        />\r\n                        <label htmlFor=\"radio-2\"></label>\r\n                        <p>No</p>\r\n                      </div>\r\n                    </Space>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={8} sm={12} xs={24}>\r\n              <div className=\"input-group\">\r\n                <fieldset id=\"public\">\r\n                  <label className=\"title-label\" htmlFor=\"public\">\r\n                    Visibilty\r\n                  </label>\r\n                  <div className=\"radio\">\r\n                    <Space size={32}>\r\n                      <div className=\"radio__1\">\r\n                        <input\r\n                          id=\"radio-3\"\r\n                          type=\"radio\"\r\n                          name=\"public\"\r\n                          value={true}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              public: true,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.public ? true : false}\r\n                        />\r\n                        <label htmlFor=\"radio-3\"></label>\r\n                        <p>Public</p>\r\n                      </div>\r\n\r\n                      <div className=\"radio__2\">\r\n                        <input\r\n                          id=\"radio-4\"\r\n                          type=\"radio\"\r\n                          name=\"public\"\r\n                          value={false}\r\n                          onChange={() =>\r\n                            setStoryInfo({\r\n                              ...storyInfo,\r\n                              public: false,\r\n                            })\r\n                          }\r\n                          checked={storyInfo.public ? false : true}\r\n                        />\r\n                        <label htmlFor=\"radio-4\"></label>\r\n                        <p>Private</p>\r\n                      </div>\r\n                    </Space>\r\n                  </div>\r\n                </fieldset>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col lg={8} md={12} sm={24} xs={24}>\r\n              <label className=\"title-label\" htmlFor=\"tags\">\r\n                Tags\r\n              </label>\r\n              <Tags\r\n                storyInfo={storyInfo}\r\n                tags={storyInfo.tags}\r\n                setTags={setStoryInfo}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row gutter={[16, 16]}>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Form.Item label=\"Main Characters\" name=\"mainCharacters\">\r\n                <div className=\"input-group\">\r\n                  <Row>\r\n                    <Col span={22}>\r\n                      <select\r\n                        value={currentChar}\r\n                        disabled={\r\n                          storyInfo.mainCharacters.length >= 5 ? true : false\r\n                        }\r\n                        onChange={(e) => setCurrentChar(e.target.value)}\r\n                        className=\"form-input select-add-input\"\r\n                      >\r\n                        <option selected value=\"\" disabled>\r\n                          Choose\r\n                        </option>\r\n                        {props.characters\r\n                          ?.filter(\r\n                            (c) => !storyInfo.mainCharacters.includes(c.id)\r\n                          )\r\n                          .map((char) => (\r\n                            <option\r\n                              key={char.id}\r\n                              value={char.id}\r\n                            >{`${char.firstname} ${char.lastname}`}</option>\r\n                          ))}\r\n                      </select>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                      <div\r\n                        className=\"form-input select-add-input-iconbox\"\r\n                        onClick={addCharacter}\r\n                      >\r\n                        <span>+</span>\r\n                      </div>\r\n                    </Col>\r\n                    <small>You can add up to 5 main characters</small>\r\n                  </Row>\r\n                </div>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Row gutter={[16, 16]}>\r\n                {props.characters\r\n                  .filter((c) => storyInfo.mainCharacters.indexOf(c.id) !== -1)\r\n                  .map((char) => (\r\n                    <Col md={12} sm={24} key={char.id}>\r\n                      <div key={char.id} className=\"main-selected\">\r\n                        <div className=\"main-avatar\">\r\n                          <img src={char.image} alt={char.firstname} />\r\n                        </div>\r\n                        <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                        <ion-icon\r\n                          onClick={() => removeCharacter(char.id)}\r\n                          name=\"close-circle\"\r\n                        ></ion-icon>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row align=\"bottom\" gutter={[24, 24]}>\r\n            <Col md={12} sm={24} xs={24}>\r\n              <div className=\"input-group\">\r\n                <label htmlFor=\"banner\">Upload a cover</label>\r\n                <UploadImage\r\n                  storyInfo={storyInfo}\r\n                  onChangeFunc={setStoryInfo}\r\n                />\r\n              </div>\r\n            </Col>\r\n\r\n            <InputGroup\r\n              required={false}\r\n              sm={24}\r\n              xs={24}\r\n              md={12}\r\n              lg={12}\r\n              id=\"banner\"\r\n              type=\"text\"\r\n              name=\"banner\"\r\n              title=\"Or submit a link to an image\"\r\n              placeholder=\"\"\r\n              value={\r\n                typeof storyInfo.banner !== \"object\" ? storyInfo.banner : \"\"\r\n              }\r\n              onChangeFunc={setStoryInfo}\r\n              storyInfo={storyInfo}\r\n            />\r\n          </Row>\r\n          <Divider />\r\n          {props.loading || props.storyId ? (\r\n            <button disabled>\r\n              <Spin />\r\n            </button>\r\n          ) : (\r\n            <button type=\"submit\">Create</button>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    router.push(\"/auth\")\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  newStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}