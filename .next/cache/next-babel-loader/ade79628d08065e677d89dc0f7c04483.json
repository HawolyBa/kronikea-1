{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\search\\\\characters\\\\[charaid]\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { Divider } from \"antd\";\nimport { getCharactersFromSearch } from \"../../../../redux/actions/charactersActions\";\nimport { CharacterGrid } from \"../../../../components/common/Grid\";\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\nimport Pagination from \"../../../../components/common/Pagination\";\n\nconst CharacterSearch = props => {\n  const router = useRouter();\n  const {\n    characters,\n    loading\n  } = props;\n  React.useEffect(() => {\n    if (router.query.charaid) {\n      props.getCharactersFromSearch(router.query.charaid);\n    }\n  }, [router.query.charaid]);\n  return __jsx(\"div\", {\n    className: \"search-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Search results for: \", router.query.charaid), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, characters.length, \" result\", characters.length > 1 ? \"s\" : \"\"), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    data: characters,\n    type: \"favorites\",\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      350: 1,\n      750: 2,\n      900: 3,\n      1200: 4\n    },\n    itemType: \"characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.charactersFromSearch,\n  loading: state.characters.loading\n});\n\nexport default connect(mapStateToProps, {\n  getCharactersFromSearch\n})(CharacterSearch);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/search/characters/[charaid]/index.js"],"names":["React","useRouter","connect","Divider","getCharactersFromSearch","CharacterGrid","LoadingScreen","Pagination","CharacterSearch","props","router","characters","loading","useEffect","query","charaid","length","mapStateToProps","state","charactersFromSearch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,SAASC,uBAAT,QAAwC,6CAAxC;AAEA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,UAAP,MAAuB,0CAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BH,KAAhC;AAEAT,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAIH,MAAM,CAACI,KAAP,CAAaC,OAAjB,EAA0B;AACxBN,MAAAA,KAAK,CAACL,uBAAN,CAA8BM,MAAM,CAACI,KAAP,CAAaC,OAA3C;AACD;AACF,GAJD,EAIG,CAACL,MAAM,CAACI,KAAP,CAAaC,OAAd,CAJH;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBL,MAAM,CAACI,KAAP,CAAaC,OADpC,CADF,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,MADd,aAC6BL,UAAU,CAACK,MAAX,GAAoB,CAApB,GAAwB,GAAxB,GAA8B,EAD3D,CALF,EAQE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAED,UADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,MAAM,EAAE,MAHV;AAIE,IAAA,uBAAuB,EAAE;AACvB,WAAK,CADkB;AAEvB,WAAK,CAFkB;AAGvB,WAAK,CAHkB;AAIvB,YAAM;AAJiB,KAJ3B;AAUE,IAAA,QAAQ,EAAE,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF;AAoCD,CA7CD;;AA+CA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,UAAU,EAAEO,KAAK,CAACP,UAAN,CAAiBQ,oBADK;AAElCP,EAAAA,OAAO,EAAEM,KAAK,CAACP,UAAN,CAAiBC;AAFQ,CAAZ,CAAxB;;AAKA,eAAeV,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CACbI,eADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { connect } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\n\r\nimport { getCharactersFromSearch } from \"../../../../redux/actions/charactersActions\";\r\n\r\nimport { CharacterGrid } from \"../../../../components/common/Grid\";\r\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\r\nimport Pagination from \"../../../../components/common/Pagination\";\r\n\r\nconst CharacterSearch = (props) => {\r\n  const router = useRouter();\r\n  const { characters, loading } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (router.query.charaid) {\r\n      props.getCharactersFromSearch(router.query.charaid);\r\n    }\r\n  }, [router.query.charaid]);\r\n  return (\r\n    <div className=\"search-page\">\r\n      <h2 className=\"side-heading\">\r\n        Search results for: {router.query.charaid}\r\n      </h2>\r\n      <Divider />\r\n      <h4>\r\n        {characters.length} result{characters.length > 1 ? \"s\" : \"\"}\r\n      </h4>\r\n      <LoadingScreen loading={loading}>\r\n        <Pagination\r\n          data={characters}\r\n          type=\"favorites\"\r\n          gutter={\"16px\"}\r\n          columnsCountBreakPoints={{\r\n            350: 1,\r\n            750: 2,\r\n            900: 3,\r\n            1200: 4,\r\n          }}\r\n          itemType={\"characters\"}\r\n        />\r\n        {/* <CharacterGrid\r\n          characters={characters}\r\n          type=\"favorites\"\r\n          gutter={\"16px\"}\r\n          columnsCountBreakPoints={{\r\n            350: 1,\r\n            750: 2,\r\n            900: 3,\r\n            1200: 4,\r\n          }}\r\n        /> */}\r\n      </LoadingScreen>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.charactersFromSearch,\r\n  loading: state.characters.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCharactersFromSearch })(\r\n  CharacterSearch\r\n);\r\n"]},"metadata":{},"sourceType":"module"}