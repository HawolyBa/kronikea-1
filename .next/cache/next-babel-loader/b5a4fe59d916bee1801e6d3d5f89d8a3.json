{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Tags.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Tag, Tooltip, Form } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar Tags = function Tags(_ref) {\n  _s();\n\n  var _form$getFieldValue3;\n\n  var form = _ref.form;\n  var inputButton = React.useRef();\n  var editInputButton = React.useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputVisible = _React$useState2[0],\n      setInputVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(-1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      editInputIndex = _React$useState6[0],\n      setEditInputIndex = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      editInputValue = _React$useState8[0],\n      setEditInputValue = _React$useState8[1];\n\n  var handleClose = function handleClose(removedTag) {\n    var _form$getFieldValue;\n\n    form.setFieldsValue({\n      tags: (_form$getFieldValue = form.getFieldValue(\"tags\")) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.filter(function (tag) {\n        return tag !== removedTag;\n      })\n    });\n  };\n\n  var showInput = function showInput() {\n    var _inputButton$current;\n\n    setInputVisible(true);\n    inputButton === null || inputButton === void 0 ? void 0 : (_inputButton$current = inputButton.current) === null || _inputButton$current === void 0 ? void 0 : _inputButton$current.focus(); //editInputButton.current.focus();\n    //;\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    return setInputValue(e.target.value);\n  };\n\n  var handleInputConfirm = function handleInputConfirm() {\n    var _form$getFieldValue2;\n\n    var newTags = form.getFieldValue(\"tags\");\n\n    if (inputValue && ((_form$getFieldValue2 = form.getFieldValue(\"tags\")) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.indexOf(inputValue)) === -1) {\n      newTags = [].concat(_toConsumableArray(newTags), [inputValue]);\n    }\n\n    form.setFieldsValue({\n      tags: newTags\n    });\n    setInputValue(\"\");\n    setInputVisible(false);\n  };\n\n  var handleEditInputChange = function handleEditInputChange(e) {\n    return setEditInputValue(e.target.value);\n  };\n\n  var handleEditInputConfirm = function handleEditInputConfirm() {\n    var newTags = _toConsumableArray(form.getFieldValue(\"tags\"));\n\n    newTags[editInputIndex] = editInputValue;\n    form.setFieldsValue({\n      tags: newTags\n    });\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  var keyPress = function keyPress(e) {\n    console.log(e.key);\n  };\n\n  return __jsx(React.Fragment, null, (_form$getFieldValue3 = form.getFieldValue(\"tags\")) === null || _form$getFieldValue3 === void 0 ? void 0 : _form$getFieldValue3.map(function (tag, i) {\n    if (editInputIndex === i) {\n      return __jsx(Form.Item, {\n        name: \"tags\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, __jsx(\"input\", {\n        key: i,\n        onChange: handleEditInputChange,\n        onBlur: handleEditInputConfirm,\n        onPressEnter: handleEditInputConfirm,\n        value: editInputValue,\n        ref: editInputButton,\n        className: \"form-input\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }));\n    }\n\n    var isLongTag = tag.length > 20;\n\n    var TagElem = __jsx(Tag, {\n      onClose: function onClose() {\n        return handleClose(tag);\n      },\n      closable: true,\n      key: tag,\n      className: \"edit-tag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      onDoubleClick: function onDoubleClick(e) {\n        if (i !== 0) {\n          setEditInputIndex(i);\n          setEditInputValue(tag);\n          editInputButton.focus();\n          e.preventDefault();\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, isLongTag ? \"#\".concat(tag.slice(0, 20), \"...\") : \"#\".concat(tag)));\n\n    return isLongTag ? __jsx(Tooltip, {\n      title: tag,\n      key: tag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, TagElem) : TagElem;\n  }), inputVisible && __jsx(\"input\", {\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === \"Enter\") {\n        handleInputConfirm();\n      }\n    },\n    value: inputValue,\n    type: \"text\",\n    ref: inputButton,\n    className: \"tag-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: showInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), \" New Tag\"));\n};\n\n_s(Tags, \"ZqYdNFlsgwjPlNp0db/U6JG31/U=\");\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Tags.js"],"names":["Tag","Tooltip","Form","PlusOutlined","Tags","form","inputButton","React","useRef","editInputButton","useState","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","handleClose","removedTag","setFieldsValue","tags","getFieldValue","filter","tag","showInput","current","focus","handleInputChange","e","target","value","handleInputConfirm","newTags","indexOf","handleEditInputChange","handleEditInputConfirm","keyPress","console","log","key","map","i","isLongTag","length","TagElem","preventDefault","slice"],"mappings":"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","sourcesContent":["import { Tag, Tooltip, Form } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Tags = ({ form }) => {\r\n  const inputButton = React.useRef();\r\n  const editInputButton = React.useRef();\r\n  const [inputVisible, setInputVisible] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [editInputIndex, setEditInputIndex] = React.useState(-1);\r\n  const [editInputValue, setEditInputValue] = React.useState(\"\");\r\n\r\n  const handleClose = (removedTag) => {\r\n    form.setFieldsValue({\r\n      tags: form.getFieldValue(\"tags\")?.filter((tag) => tag !== removedTag),\r\n    });\r\n  };\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n    inputButton?.current?.focus();\r\n    //editInputButton.current.focus();\r\n    //;\r\n  };\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n  const handleInputConfirm = () => {\r\n    let newTags = form.getFieldValue(\"tags\");\r\n    if (inputValue && form.getFieldValue(\"tags\")?.indexOf(inputValue) === -1) {\r\n      newTags = [...newTags, inputValue];\r\n    }\r\n    form.setFieldsValue({ tags: newTags });\r\n    setInputValue(\"\");\r\n    setInputVisible(false);\r\n  };\r\n\r\n  const handleEditInputChange = (e) => setEditInputValue(e.target.value);\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...form.getFieldValue(\"tags\")];\r\n    newTags[editInputIndex] = editInputValue;\r\n    form.setFieldsValue({ tags: newTags });\r\n    setEditInputIndex(-1);\r\n    setEditInputValue(\"\");\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    console.log(e.key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {form.getFieldValue(\"tags\")?.map((tag, i) => {\r\n        if (editInputIndex === i) {\r\n          return (\r\n            <Form.Item name=\"tags\">\r\n              <input\r\n                key={i}\r\n                onChange={handleEditInputChange}\r\n                onBlur={handleEditInputConfirm}\r\n                onPressEnter={handleEditInputConfirm}\r\n                value={editInputValue}\r\n                ref={editInputButton}\r\n                className=\"form-input\"\r\n              />\r\n            </Form.Item>\r\n          );\r\n        }\r\n        const isLongTag = tag.length > 20;\r\n        const TagElem = (\r\n          <Tag\r\n            onClose={() => handleClose(tag)}\r\n            closable={true}\r\n            key={tag}\r\n            className=\"edit-tag\"\r\n          >\r\n            <span\r\n              onDoubleClick={(e) => {\r\n                if (i !== 0) {\r\n                  setEditInputIndex(i);\r\n                  setEditInputValue(tag);\r\n                  editInputButton.focus();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n            >\r\n              {isLongTag ? `#${tag.slice(0, 20)}...` : `#${tag}`}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {TagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          TagElem\r\n        );\r\n      })}\r\n      {inputVisible && (\r\n        <input\r\n          onChange={handleInputChange}\r\n          onBlur={handleInputConfirm}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleInputConfirm();\r\n            }\r\n          }}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          ref={inputButton}\r\n          className=\"tag-input\"\r\n        />\r\n      )}\r\n      {!inputVisible && (\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined /> New Tag\r\n        </Tag>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}