{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport fbConfig from \"./fbConfig\";\nconst initialState = {};\nexport const newStore = () => {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunk.withExtraArgument({\n    getFirebase,\n    getFirestore\n  })), reduxFirestore(fbConfig)));\n};\nexport const wrapper = createWrapper(newStore, {\n  debug: true\n});","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/store.js"],"names":["createStore","applyMiddleware","compose","createWrapper","reduxFirestore","getFirestore","getFirebase","thunk","rootReducer","fbConfig","initialState","newStore","withExtraArgument","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAOX,WAAW,CAChBQ,WADgB,EAEhBE,YAFgB,EAGhBR,OAAO,CACLD,eAAe,CACbM,KAAK,CAACK,iBAAN,CAAwB;AACtBN,IAAAA,WADsB;AAEtBD,IAAAA;AAFsB,GAAxB,CADa,CADV,EAOLD,cAAc,CAACK,QAAD,CAPT,CAHS,CAAlB;AAaD,CAdM;AAgBP,OAAO,MAAMI,OAAO,GAAGV,aAAa,CAACQ,QAAD,EAAW;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport fbConfig from \"./fbConfig\";\r\n\r\nconst initialState = {};\r\n\r\nexport const newStore = () => {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(\r\n        thunk.withExtraArgument({\r\n          getFirebase,\r\n          getFirestore,\r\n        })\r\n      ),\r\n      reduxFirestore(fbConfig)\r\n    )\r\n  );\r\n};\r\n\r\nexport const wrapper = createWrapper(newStore, { debug: true });\r\n"]},"metadata":{},"sourceType":"module"}