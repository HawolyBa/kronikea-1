{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\CharacterSelector.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, Col, Row, Select, Divider } from \"antd\";\nvar Option = Select.Option;\n\nvar CharacterSelector = function CharacterSelector(_ref) {\n  _s();\n\n  var _form$getFieldValue3, _characters$filter;\n\n  var item = _ref.item,\n      characters = _ref.characters,\n      form = _ref.form,\n      arrInForm = _ref.arrInForm,\n      label = _ref.label,\n      type = _ref.type,\n      lg1 = _ref.lg1;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentChar = _React$useState2[0],\n      setCurrentChar = _React$useState2[1];\n\n  var _React$useState3 = React.useState(item ? characters.filter(function (c) {\n    return item.includes(c.id);\n  }) : []),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedCharacters = _React$useState4[0],\n      setSelectedCharacters = _React$useState4[1];\n\n  var addCharacter = function addCharacter() {\n    var _form$getFieldValue, _form$getFieldValue2;\n\n    if (currentChar && ((_form$getFieldValue = form.getFieldValue(arrInForm)) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.indexOf(currentChar)) === -1 && ((_form$getFieldValue2 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.length) < 5) {\n      setSelectedCharacters([].concat(_toConsumableArray(selectedCharacters), [characters.find(function (c) {\n        return c.id === currentChar;\n      })]));\n      form.setFieldsValue(_defineProperty({}, arrInForm, [].concat(_toConsumableArray(form.getFieldValue(arrInForm)), [currentChar])));\n    }\n\n    setCurrentChar(\"\");\n    form.setFieldsValue({\n      currentChar: \"\"\n    });\n  };\n\n  var removeCharacter = function removeCharacter(id) {\n    form.setFieldsValue(_defineProperty({}, arrInForm, form.getFieldValue(arrInForm).filter(function (c) {\n      return c !== id;\n    })));\n    setSelectedCharacters(selectedCharacters.filter(function (c) {\n      return c.id !== id;\n    }));\n  };\n\n  return __jsx(Form.Item, {\n    name: arrInForm,\n    label: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    lg: lg1,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"currentChar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    disabled: ((_form$getFieldValue3 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue3 === void 0 ? void 0 : _form$getFieldValue3.length) >= 5 ? true : false,\n    onChange: function onChange(val) {\n      return setCurrentChar(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Option, {\n    value: \"none\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Choose\"), (_characters$filter = characters.filter(function (c) {\n    var _form$getFieldValue4;\n\n    return ((_form$getFieldValue4 = form.getFieldValue(arrInForm)) === null || _form$getFieldValue4 === void 0 ? void 0 : _form$getFieldValue4.indexOf(c.id)) === -1;\n  })) === null || _characters$filter === void 0 ? void 0 : _characters$filter.sort(function (a, b) {\n    var keyA = a.firstname,\n        keyB = b.firstname; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (_char) {\n    return __jsx(Option, {\n      key: _char.id,\n      value: _char.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    }, \"\".concat(_char.firstname, \" \").concat(_char.lastname));\n  })))), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"select-add-input-iconbox\",\n    onClick: addCharacter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"+\"))), type === \"story\" && __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"You can add up to 5 main characters\"))), __jsx(Col, {\n    lg: lg1,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, characters.filter(function (c) {\n    return form.getFieldValue(arrInForm).includes(c.id);\n  }).map(function (_char2) {\n    return __jsx(Col, {\n      md: 12,\n      sm: 24,\n      key: _char2.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      key: _char2.id,\n      className: \"main-selected\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"main-avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: _char2.image,\n      alt: _char2.firstname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    })), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"\".concat(_char2.firstname, \" \").concat(_char2.lastname), \" \"), __jsx(\"ion-icon\", {\n      onClick: function onClick() {\n        return removeCharacter(_char2.id);\n      },\n      name: \"close-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), __jsx(Divider, {\n      style: {\n        margin: \"15px 0\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }));\n  })))));\n};\n\n_s(CharacterSelector, \"VCafTNRF37TUtExCd6eOlsk/A3Q=\");\n\n_c = CharacterSelector;\nexport default CharacterSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterSelector\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/CharacterSelector.js"],"names":["React","Form","Col","Row","Select","Divider","Option","CharacterSelector","item","characters","form","arrInForm","label","type","lg1","useState","currentChar","setCurrentChar","filter","c","includes","id","selectedCharacters","setSelectedCharacters","addCharacter","getFieldValue","indexOf","length","find","setFieldsValue","removeCharacter","val","sort","a","b","keyA","firstname","keyB","map","char","lastname","image","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Col, Row, Select, Divider } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst CharacterSelector = ({\r\n  item,\r\n  characters,\r\n  form,\r\n  arrInForm,\r\n  label,\r\n  type,\r\n  lg1,\r\n}) => {\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n  const [selectedCharacters, setSelectedCharacters] = React.useState(\r\n    item ? characters.filter((c) => item.includes(c.id)) : []\r\n  );\r\n\r\n  const addCharacter = () => {\r\n    if (\r\n      currentChar &&\r\n      form.getFieldValue(arrInForm)?.indexOf(currentChar) === -1 &&\r\n      form.getFieldValue(arrInForm)?.length < 5\r\n    ) {\r\n      setSelectedCharacters([\r\n        ...selectedCharacters,\r\n        characters.find((c) => c.id === currentChar),\r\n      ]);\r\n      form.setFieldsValue({\r\n        [arrInForm]: [...form.getFieldValue(arrInForm), currentChar],\r\n      });\r\n    }\r\n    setCurrentChar(\"\");\r\n    form.setFieldsValue({ currentChar: \"\" });\r\n  };\r\n\r\n  const removeCharacter = (id) => {\r\n    form.setFieldsValue({\r\n      [arrInForm]: form.getFieldValue(arrInForm).filter((c) => c !== id),\r\n    });\r\n    setSelectedCharacters(selectedCharacters.filter((c) => c.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Form.Item name={arrInForm} label={label}>\r\n      <Row gutter={[24, 24]}>\r\n        <Col lg={lg1} md={24} sm={24} xs={24}>\r\n          <Row gutter={16}>\r\n            <Col span={22}>\r\n              <Form.Item name=\"currentChar\">\r\n                <Select\r\n                  disabled={\r\n                    form.getFieldValue(arrInForm)?.length >= 5 ? true : false\r\n                  }\r\n                  onChange={(val) => setCurrentChar(val)}\r\n                >\r\n                  <Option value=\"none\" disabled>\r\n                    Choose\r\n                  </Option>\r\n                  {characters\r\n                    .filter(\r\n                      (c) => form.getFieldValue(arrInForm)?.indexOf(c.id) === -1\r\n                    )\r\n                    ?.sort((a, b) => {\r\n                      const keyA = a.firstname,\r\n                        keyB = b.firstname;\r\n                      // Compare the 2 dates\r\n                      if (keyA < keyB) return -1;\r\n                      if (keyA > keyB) return 1;\r\n                      return 0;\r\n                    })\r\n                    .map((char) => (\r\n                      <Option\r\n                        key={char.id}\r\n                        value={char.id}\r\n                      >{`${char.firstname} ${char.lastname}`}</Option>\r\n                    ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={2}>\r\n              <div className=\"select-add-input-iconbox\" onClick={addCharacter}>\r\n                <span>+</span>\r\n              </div>\r\n            </Col>\r\n            {type === \"story\" && (\r\n              <small>You can add up to 5 main characters</small>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n        <Col lg={lg1} md={24} sm={24} xs={24}>\r\n          <Row gutter={16}>\r\n            {characters\r\n              .filter((c) => form.getFieldValue(arrInForm).includes(c.id))\r\n              .map((char) => (\r\n                <Col md={12} sm={24} key={char.id}>\r\n                  <div key={char.id} className=\"main-selected\">\r\n                    <div className=\"main-avatar\">\r\n                      <img src={char.image} alt={char.firstname} />\r\n                    </div>\r\n                    <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                    <ion-icon\r\n                      onClick={() => removeCharacter(char.id)}\r\n                      name=\"close-circle\"\r\n                    ></ion-icon>\r\n                  </div>\r\n                  <Divider style={{ margin: \"15px 0\" }} />\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default CharacterSelector;\r\n"]},"metadata":{},"sourceType":"module"}