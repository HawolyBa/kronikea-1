{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Grid.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Empty } from \"antd\";\nimport Card from \"../common/Card\";\nimport UserCard from \"../common/UserCard\";\nimport CharacterCard from \"../common/CharacterCard\";\nimport LocationCard from \"../common/LocationCard\";\nimport WithLink from \"../hoc/WithLink\";\n\nconst StoryGrid = () => {\n  return __jsx(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    lg: 8,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst UserGrid = () => {\n  return __jsx(Row, {\n    gutter: [20, 30],\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst LocationGrid = ({\n  locations,\n  gutter,\n  xl,\n  xxl,\n  lg,\n  md,\n  sm,\n  xs,\n  type\n}) => {\n  return locations.length > 0 ? __jsx(Row, {\n    gutter: gutter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, locations.map(loc => __jsx(Col, {\n    xl: xl,\n    xxl: xxl,\n    xs: xs,\n    sm: sm,\n    md: md,\n    lg: lg,\n    key: loc.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(LocationCard, {\n    type: type,\n    location: loc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })))) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No locations yet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n};\n\nconst CharacterGrid = ({\n  gutter,\n  xxl,\n  xl,\n  lg,\n  md,\n  sm,\n  xs,\n  characters,\n  type\n}) => {\n  return characters.length > 0 ? __jsx(Row, {\n    gutter: gutter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, characters === null || characters === void 0 ? void 0 : characters.map(c => __jsx(Col, {\n    key: c.id,\n    xxl: xxl,\n    xl: xl,\n    lg: lg,\n    md: md,\n    sm: sm,\n    xs: xs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, type === \"show\" ? __jsx(WithLink, {\n    link: `/character/${c.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(CharacterCard, {\n    character: c,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })) : __jsx(CharacterCard, {\n    character: c,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })))) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No characters yet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n};\n\nexport { StoryGrid, CharacterGrid, UserGrid, LocationGrid };","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Grid.js"],"names":["Row","Col","Empty","Card","UserCard","CharacterCard","LocationCard","WithLink","StoryGrid","UserGrid","LocationGrid","locations","gutter","xl","xxl","lg","md","sm","xs","type","length","map","loc","id","PRESENTED_IMAGE_SIMPLE","CharacterGrid","characters","c"],"mappings":"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","sourcesContent":["import { Row, Col, Empty } from \"antd\";\r\n\r\nimport Card from \"../common/Card\";\r\nimport UserCard from \"../common/UserCard\";\r\nimport CharacterCard from \"../common/CharacterCard\";\r\nimport LocationCard from \"../common/LocationCard\";\r\nimport WithLink from \"../hoc/WithLink\";\r\n\r\nconst StoryGrid = () => {\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Col xs={24} sm={12} lg={8} xl={6}>\r\n        <Card />\r\n      </Col>\r\n      <Col xs={24} sm={12} lg={8} xl={6}>\r\n        <Card />\r\n      </Col>\r\n      <Col xs={24} sm={12} lg={8} xl={6}>\r\n        <Card />\r\n      </Col>\r\n      <Col xs={24} sm={12} lg={8} xl={6}>\r\n        <Card />\r\n      </Col>\r\n      <Col xs={24} sm={12} lg={8} xl={6}>\r\n        <Card />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst UserGrid = () => {\r\n  return (\r\n    <Row gutter={[20, 30]} align=\"center\">\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LocationGrid = ({ locations, gutter, xl, xxl, lg, md, sm, xs, type }) => {\r\n  return locations.length > 0 ? (\r\n    <Row gutter={gutter}>\r\n      {locations.map((loc) => (\r\n        <Col xl={xl} xxl={xxl} xs={xs} sm={sm} md={md} lg={lg} key={loc.id}>\r\n          <LocationCard type={type} location={loc} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description=\"No locations yet\"\r\n    />\r\n  );\r\n};\r\n\r\nconst CharacterGrid = ({\r\n  gutter,\r\n  xxl,\r\n  xl,\r\n  lg,\r\n  md,\r\n  sm,\r\n  xs,\r\n  characters,\r\n  type,\r\n}) => {\r\n  return characters.length > 0 ? (\r\n    <Row gutter={gutter}>\r\n      {characters?.map((c) => (\r\n        <Col key={c.id} xxl={xxl} xl={xl} lg={lg} md={md} sm={sm} xs={xs}>\r\n          {type === \"show\" ? (\r\n            <WithLink link={`/character/${c.id}`}>\r\n              <CharacterCard character={c} type={type} />\r\n            </WithLink>\r\n          ) : (\r\n            <CharacterCard character={c} type={type} />\r\n          )}\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description=\"No characters yet\"\r\n    />\r\n  );\r\n};\r\n\r\nexport { StoryGrid, CharacterGrid, UserGrid, LocationGrid };\r\n"]},"metadata":{},"sourceType":"module"}