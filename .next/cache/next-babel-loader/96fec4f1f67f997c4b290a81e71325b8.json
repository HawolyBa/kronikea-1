{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\home\\\\ShowCase.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Slide from \"./Slide\"; // =========================\n// Slide\n// =========================\n// class Slide extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleMouseMove = this.handleMouseMove.bind(this);\n//     this.handleMouseLeave = this.handleMouseLeave.bind(this);\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\n//     this.imageLoaded = this.imageLoaded.bind(this);\n//     this.slide = React.createRef();\n//   }\n//   handleMouseMove(event) {\n//     const el = this.slide.current;\n//     const r = el.getBoundingClientRect();\n//     el.style.setProperty(\n//       \"--x\",\n//       event.clientX - (r.left + Math.floor(r.width / 2))\n//     );\n//     el.style.setProperty(\n//       \"--y\",\n//       event.clientY - (r.top + Math.floor(r.height / 2))\n//     );\n//   }\n//   handleMouseLeave(event) {\n//     this.slide.current.style.setProperty(\"--x\", 0);\n//     this.slide.current.style.setProperty(\"--y\", 0);\n//   }\n//   handleSlideClick(event) {\n//     this.props.handleSlideClick(this.props.slide.id);\n//   }\n//   imageLoaded(event) {\n//     event.target.style.opacity = 1;\n//   }\n//   render() {\n//     const { banner, title, index, id } = this.props.slide;\n//     const current = this.props.current;\n//     let classNames = \"slide\";\n//     if (current === index) classNames += \" slide--current\";\n//     else if (current - 1 === index) classNames += \" slide--previous\";\n//     else if (current + 1 === index) classNames += \" slide--next\";\n//     return (\n//       <li\n//         ref={this.slide}\n//         className={classNames}\n//         onClick={this.handleSlideClick}\n//         onMouseMove={this.handleMouseMove}\n//         onMouseLeave={this.handleMouseLeave}\n//       >\n//         <div className=\"slide__image-wrapper\">\n//           <img\n//             className=\"slide__image\"\n//             alt={title}\n//             src={banner}\n//             onLoad={this.imageLoaded}\n//           />\n//         </div>\n//         <article className=\"slide__content\">\n//           <h2 className=\"slide__headline\">{title}</h2>\n//           <button\n//             onCLick={() => Router.push(`/story/${id}`)}\n//             className=\"slide__action btn\"\n//           >\n//             Read\n//           </button>\n//         </article>\n//       </li>\n//     );\n//   }\n// }\n// =========================\n// Slider control\n// =========================\n\nvar SliderControl = function SliderControl(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      handleClick = _ref.handleClick;\n  return __jsx(\"button\", {\n    className: \"btn btn--\".concat(type),\n    title: title,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    viewBox: \"0 0 24 24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"path\", {\n    d: \"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n}; // =========================\n// Slider\n// =========================\n// class Slider extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { current: 0 };\n//     this.handlePreviousClick = this.handlePreviousClick.bind(this);\n//     this.handleNextClick = this.handleNextClick.bind(this);\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\n//   }\n//   handlePreviousClick() {\n//     const previous = this.state.current - 1;\n//     this.setState({\n//       current: previous < 0 ? this.props.slides.length - 1 : previous,\n//     });\n//   }\n//   handleNextClick() {\n//     const next = this.state.current + 1;\n//     this.setState({\n//       current: next === this.props.slides.length ? 0 : next,\n//     });\n//   }\n//   handleSlideClick(index) {\n//     if (this.state.current !== index) {\n//       this.setState({\n//         current: index,\n//       });\n//     }\n//   }\n//   render() {\n//     const { current } = this.state;\n//     const { slides, heading } = this.props;\n//     const headingId = `slider-heading__${heading\n//       .replace(/\\s+/g, \"-\")\n//       .toLowerCase()}`;\n//     const wrapperTransform = {\n//       transform: `translateX(-${current * (100 / slides.length)}%)`,\n//     };\n//     return (\n//       <div className=\"home-showcase\">\n//         <div className=\"inner\">\n//           <div className=\"slider\" aria-labelledby={headingId}>\n//             <ul className=\"slider__wrapper\" style={wrapperTransform}>\n//               <h3 id={headingId} className=\"visuallyhidden\">\n//                 {heading}\n//               </h3>\n//               {slides.map((slide, i) => {\n//                 return (\n//                   <Slide\n//                     key={i}\n//                     slide={{ ...slide, index: i }}\n//                     current={current}\n//                     handleSlideClick={this.handleSlideClick}\n//                   />\n//                 );\n//               })}\n//             </ul>\n//             <div className=\"slider__controls\">\n//               <SliderControl\n//                 type=\"previous\"\n//                 title=\"Go to previous slide\"\n//                 handleClick={this.handlePreviousClick}\n//               />\n//               <SliderControl\n//                 type=\"next\"\n//                 title=\"Go to next slide\"\n//                 handleClick={this.handleNextClick}\n//               />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n_c = SliderControl;\n\nvar Slider = function Slider(props) {\n  _s();\n\n  var slides = props.slides,\n      heading = props.heading;\n  var headingId = \"slider-heading__\".concat(heading.replace(/\\s+/g, \"-\").toLowerCase());\n  var wrapperTransform = {\n    transform: \"translateX(-\".concat(current * (100 / slides.length), \"%)\")\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      current = _React$useState2[0],\n      setCurrent = _React$useState2[1];\n\n  var handlePreviousClick = function handlePreviousClick() {\n    var previous = current - 1;\n    setCurrent(previous < 0 ? props.slides.length - 1 : previous);\n  };\n\n  var handleNextClick = function handleNextClick() {\n    var next = current + 1;\n    setCurrent(next === props.slides.length ? 0 : next);\n  };\n\n  var handleSlideClick = function handleSlideClick(index) {\n    if (current !== index) setCurrent(index);\n  };\n\n  return __jsx(\"div\", {\n    className: \"home-showcase\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"slider\",\n    \"aria-labelledby\": headingId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: \"slider__wrapper\",\n    style: wrapperTransform,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    id: headingId,\n    className: \"visuallyhidden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, heading), slides.map(function (slide, i) {\n    return __jsx(Slide, {\n      key: i,\n      slide: _objectSpread(_objectSpread({}, slide), {}, {\n        index: i\n      }),\n      current: current,\n      handleSlideClick: handleSlideClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"slider__controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn--previous\",\n    title: \"Go to previous slide\",\n    onClick: handlePreviousClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    viewBox: \"0 0 24 24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, __jsx(\"path\", {\n    d: \"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }))), __jsx(\"button\", {\n    className: \"btn btn--next\",\n    title: \"Go to next slide\",\n    onClick: handleNextClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, __jsx(\"svg\", {\n    className: \"icon\",\n    viewBox: \"0 0 24 24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, __jsx(\"path\", {\n    d: \"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  })))))));\n};\n\n_s(Slider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n\n_c2 = Slider;\nexport default Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SliderControl\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/home/ShowCase.js"],"names":["Slide","SliderControl","type","title","handleClick","Slider","props","slides","heading","headingId","replace","toLowerCase","wrapperTransform","transform","current","length","React","useState","setCurrent","handlePreviousClick","previous","handleNextClick","next","handleSlideClick","index","map","slide","i"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACtD,SACE;AAAQ,IAAA,SAAS,qBAAcF,IAAd,CAAjB;AAAuC,IAAA,KAAK,EAAEC,KAA9C;AAAqD,IAAA,OAAO,EAAEC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,CAAC,EAAC,6DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD,C,CAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA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","sourcesContent":["import Slide from \"./Slide\";\r\n\r\n// =========================\r\n// Slide\r\n// =========================\r\n\r\n// class Slide extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.handleMouseMove = this.handleMouseMove.bind(this);\r\n//     this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\r\n//     this.imageLoaded = this.imageLoaded.bind(this);\r\n//     this.slide = React.createRef();\r\n//   }\r\n\r\n//   handleMouseMove(event) {\r\n//     const el = this.slide.current;\r\n//     const r = el.getBoundingClientRect();\r\n\r\n//     el.style.setProperty(\r\n//       \"--x\",\r\n//       event.clientX - (r.left + Math.floor(r.width / 2))\r\n//     );\r\n//     el.style.setProperty(\r\n//       \"--y\",\r\n//       event.clientY - (r.top + Math.floor(r.height / 2))\r\n//     );\r\n//   }\r\n\r\n//   handleMouseLeave(event) {\r\n//     this.slide.current.style.setProperty(\"--x\", 0);\r\n//     this.slide.current.style.setProperty(\"--y\", 0);\r\n//   }\r\n\r\n//   handleSlideClick(event) {\r\n//     this.props.handleSlideClick(this.props.slide.id);\r\n//   }\r\n\r\n//   imageLoaded(event) {\r\n//     event.target.style.opacity = 1;\r\n//   }\r\n\r\n//   render() {\r\n//     const { banner, title, index, id } = this.props.slide;\r\n//     const current = this.props.current;\r\n//     let classNames = \"slide\";\r\n\r\n//     if (current === index) classNames += \" slide--current\";\r\n//     else if (current - 1 === index) classNames += \" slide--previous\";\r\n//     else if (current + 1 === index) classNames += \" slide--next\";\r\n\r\n//     return (\r\n//       <li\r\n//         ref={this.slide}\r\n//         className={classNames}\r\n//         onClick={this.handleSlideClick}\r\n//         onMouseMove={this.handleMouseMove}\r\n//         onMouseLeave={this.handleMouseLeave}\r\n//       >\r\n//         <div className=\"slide__image-wrapper\">\r\n//           <img\r\n//             className=\"slide__image\"\r\n//             alt={title}\r\n//             src={banner}\r\n//             onLoad={this.imageLoaded}\r\n//           />\r\n//         </div>\r\n\r\n//         <article className=\"slide__content\">\r\n//           <h2 className=\"slide__headline\">{title}</h2>\r\n//           <button\r\n//             onCLick={() => Router.push(`/story/${id}`)}\r\n//             className=\"slide__action btn\"\r\n//           >\r\n//             Read\r\n//           </button>\r\n//         </article>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// =========================\r\n// Slider control\r\n// =========================\r\n\r\nconst SliderControl = ({ type, title, handleClick }) => {\r\n  return (\r\n    <button className={`btn btn--${type}`} title={title} onClick={handleClick}>\r\n      <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\n// =========================\r\n// Slider\r\n// =========================\r\n\r\n// class Slider extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = { current: 0 };\r\n//     this.handlePreviousClick = this.handlePreviousClick.bind(this);\r\n//     this.handleNextClick = this.handleNextClick.bind(this);\r\n//     this.handleSlideClick = this.handleSlideClick.bind(this);\r\n//   }\r\n\r\n//   handlePreviousClick() {\r\n//     const previous = this.state.current - 1;\r\n\r\n//     this.setState({\r\n//       current: previous < 0 ? this.props.slides.length - 1 : previous,\r\n//     });\r\n//   }\r\n\r\n//   handleNextClick() {\r\n//     const next = this.state.current + 1;\r\n\r\n//     this.setState({\r\n//       current: next === this.props.slides.length ? 0 : next,\r\n//     });\r\n//   }\r\n\r\n//   handleSlideClick(index) {\r\n//     if (this.state.current !== index) {\r\n//       this.setState({\r\n//         current: index,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const { current } = this.state;\r\n//     const { slides, heading } = this.props;\r\n//     const headingId = `slider-heading__${heading\r\n//       .replace(/\\s+/g, \"-\")\r\n//       .toLowerCase()}`;\r\n//     const wrapperTransform = {\r\n//       transform: `translateX(-${current * (100 / slides.length)}%)`,\r\n//     };\r\n\r\n//     return (\r\n//       <div className=\"home-showcase\">\r\n//         <div className=\"inner\">\r\n//           <div className=\"slider\" aria-labelledby={headingId}>\r\n//             <ul className=\"slider__wrapper\" style={wrapperTransform}>\r\n//               <h3 id={headingId} className=\"visuallyhidden\">\r\n//                 {heading}\r\n//               </h3>\r\n\r\n//               {slides.map((slide, i) => {\r\n//                 return (\r\n//                   <Slide\r\n//                     key={i}\r\n//                     slide={{ ...slide, index: i }}\r\n//                     current={current}\r\n//                     handleSlideClick={this.handleSlideClick}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//             </ul>\r\n\r\n//             <div className=\"slider__controls\">\r\n//               <SliderControl\r\n//                 type=\"previous\"\r\n//                 title=\"Go to previous slide\"\r\n//                 handleClick={this.handlePreviousClick}\r\n//               />\r\n\r\n//               <SliderControl\r\n//                 type=\"next\"\r\n//                 title=\"Go to next slide\"\r\n//                 handleClick={this.handleNextClick}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst Slider = (props) => {\r\n  const { slides, heading } = props;\r\n  const headingId = `slider-heading__${heading\r\n    .replace(/\\s+/g, \"-\")\r\n    .toLowerCase()}`;\r\n  const wrapperTransform = {\r\n    transform: `translateX(-${current * (100 / slides.length)}%)`,\r\n  };\r\n  const [current, setCurrent] = React.useState(0);\r\n\r\n  const handlePreviousClick = () => {\r\n    const previous = current - 1;\r\n    setCurrent(previous < 0 ? props.slides.length - 1 : previous);\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    const next = current + 1;\r\n    setCurrent(next === props.slides.length ? 0 : next);\r\n  };\r\n\r\n  const handleSlideClick = (index) => {\r\n    if (current !== index) setCurrent(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-showcase\">\r\n      <div className=\"inner\">\r\n        <div className=\"slider\" aria-labelledby={headingId}>\r\n          <ul className=\"slider__wrapper\" style={wrapperTransform}>\r\n            <h3 id={headingId} className=\"visuallyhidden\">\r\n              {heading}\r\n            </h3>\r\n\r\n            {slides.map((slide, i) => {\r\n              return (\r\n                <Slide\r\n                  key={i}\r\n                  slide={{ ...slide, index: i }}\r\n                  current={current}\r\n                  handleSlideClick={handleSlideClick}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n          <div className=\"slider__controls\">\r\n            <button\r\n              className={`btn btn--previous`}\r\n              title=\"Go to previous slide\"\r\n              onClick={handlePreviousClick}\r\n            >\r\n              <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className={`btn btn--next`}\r\n              title=\"Go to next slide\"\r\n              onClick={handleNextClick}\r\n            >\r\n              <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}