{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\profile\\\\Settings.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Form, Tabs, Input, Modal, Button, Upload, message } from \"antd\";\nimport { LockOutlined, UserOutlined, LinkOutlined, FileImageOutlined, LoadingOutlined, PlusOutlined, StarOutlined } from \"@ant-design/icons\";\nimport LinkComp from \"./LinkComp\";\nconst {\n  TabPane\n} = Tabs;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nconst Settings = ({\n  profile,\n  openSettings,\n  setOpenSettings\n}) => {\n  const [form] = Form.useForm();\n  const [info, setInfo] = React.useState({\n    username: \"\",\n    deviantart: \"\",\n    facebook: \"\",\n    instagram: \"\",\n    twitter: \"\",\n    actualPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\",\n    errors: {\n      actual: \"\",\n      confirm: \"\",\n      instagram: \"\",\n      deviantart: \"\",\n      facebook: \"\",\n      twitter: \"\",\n      username: \"\"\n    },\n    passwordErrors: {\n      actual: \"\",\n      confirm: \"\"\n    }\n  });\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const handleChange = imageInfo => {\n    if (imageInfo.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n\n    if (imageInfo.file.status === \"done\") {\n      setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        image: imageInfo.file.originFileObj\n      }));\n      getBase64(imageInfo.file.originFileObj, imageUrl => {\n        setLoading(false);\n        setImageUrl(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, loading ? __jsx(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }\n  }) : __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 40\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n\n  React.useEffect(() => {\n    if (profile) {\n      setImageUrl(profile.image);\n      setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        username: profile.username,\n        instagram: profile.instagram,\n        facebook: profile.facebook,\n        twitter: profile.twitter,\n        deviantart: profile.deviantart,\n        image: profile.image\n      }));\n    }\n  }, [profile]);\n  React.useEffect(() => {\n    if (info.newPassword && info.confirmPassword) {\n      if (info.newPassword !== info.confirmPassword) {\n        setInfo(_objectSpread(_objectSpread({}, info), {}, {\n          errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n            confirm: \"The passwords are not matching\"\n          })\n        }));\n      } else {\n        setInfo(_objectSpread(_objectSpread({}, info), {}, {\n          errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n            confirm: \"\"\n          })\n        }));\n      }\n\n      if (!info.actualPassword) {\n        setInfo(_objectSpread(_objectSpread({}, info), {}, {\n          errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n            actual: \"The actual password is required\"\n          })\n        }));\n      } else {\n        setInfo(_objectSpread(_objectSpread({}, info), {}, {\n          errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n            actual: \"\"\n          })\n        }));\n      }\n    }\n  }, [info.newPassword, info.confirmPassword, info.actualPassword]);\n  React.useEffect(() => {\n    if (info.username.length > 0 && info.username.length < 4) {\n      setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n          username: \"Your username needs to be at least 4 characters long\"\n        })\n      }));\n    } else if (info.username.length > 15) {\n      setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n          username: \"Your username cannot exceed 15 characters\"\n        })\n      }));\n    } else {\n      setInfo(_objectSpread(_objectSpread({}, info), {}, {\n        errors: _objectSpread(_objectSpread({}, info.errors), {}, {\n          username: \"\"\n        })\n      }));\n    }\n  }, [info.username]);\n\n  const submit = () => {\n    let errors = [];\n\n    for (let i in info.errors) {\n      if (info.errors[1]) errors.push(info.errors[1]);\n    }\n\n    if (!errors) {\n      // changeProfile({\n      //   username: info.username,\n      //   twitter: info.twitter,\n      //   instagram: info.instagram,\n      //   deviantart: info.deviantart,\n      //   facebook: info.facebook,\n      //   newPassword: info.newPassword,\n      //   actualPassword: info.actualPassword,\n      //   image: info.image,\n      // });\n      console.log({\n        username: info.username,\n        twitter: info.twitter,\n        instagram: info.instagram,\n        deviantart: info.deviantart,\n        facebook: info.facebook,\n        newPassword: info.newPassword,\n        actualPassword: info.actualPassword,\n        image: info.image\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    title: \"Settings\",\n    visible: openSettings,\n    onOk: () => console.log(form.getFieldsValue()),\n    onCancel: () => openSettings(false),\n    footer: [__jsx(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, \"Submit changes\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(TabPane, {\n    tab: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }), \"Username\"),\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    maxLength: 15,\n    addonBefore: \"Username\",\n    onChange: e => setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      username: e.target.value\n    })),\n    value: info.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), info.errors.username && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, info.errors.username))), __jsx(TabPane, {\n    tab: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }), \"Password\"),\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Actual Password\"), __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, __jsx(Input.Password, {\n    onChange: e => setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      actualPassword: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"input-group__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }))), info.errors.actual && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, info.errors.actual))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"New Password\"), __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, __jsx(Input.Password, {\n    onChange: e => setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      newPassword: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"input-group__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  })))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"Confirm New Password\"), __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, __jsx(Input.Password, {\n    onChange: e => setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      confirmPassword: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"input-group__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }))), info.errors.confirm && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, info.errors.confirm)))), __jsx(TabPane, {\n    tab: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, __jsx(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }), \"Links\"),\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, __jsx(LinkComp, {\n    setInfo: setInfo,\n    info: info,\n    name: \"facebook\",\n    label: \"Facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }), __jsx(LinkComp, {\n    setInfo: setInfo,\n    info: info,\n    name: \"twitter\",\n    label: \"Twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), __jsx(LinkComp, {\n    setInfo: setInfo,\n    info: info,\n    name: \"instagram\",\n    label: \"Instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }), __jsx(LinkComp, {\n    setInfo: setInfo,\n    info: info,\n    name: \"deviantart\",\n    label: \"Deviantart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  })), __jsx(TabPane, {\n    tab: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, __jsx(FileImageOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }), \"Avatar\"),\n    key: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, __jsx(Upload, {\n    showUploadList: {\n      showRemoveIcon: true,\n      removeIcon: __jsx(StarOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 31\n        }\n      })\n    },\n    listType: \"picture-card\",\n    className: \"cover-uploader\",\n    showUploadList: true,\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    maxCount: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, imageUrl ? __jsx(\"img\", {\n    src: imageUrl,\n    alt: \"image\",\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  }) : uploadButton))))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/profile/Settings.js"],"names":["React","Form","Tabs","Input","Modal","Button","Upload","message","LockOutlined","UserOutlined","LinkOutlined","FileImageOutlined","LoadingOutlined","PlusOutlined","StarOutlined","LinkComp","TabPane","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","Settings","profile","openSettings","setOpenSettings","form","useForm","info","setInfo","useState","username","deviantart","facebook","instagram","twitter","actualPassword","newPassword","confirmPassword","errors","actual","confirm","passwordErrors","imageUrl","setImageUrl","loading","setLoading","handleChange","imageInfo","status","image","originFileObj","uploadButton","marginTop","useEffect","length","submit","i","push","console","log","getFieldsValue","e","target","value","margin","showRemoveIcon","removeIcon","width","height","objectFit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Tabs, Input, Modal, Button, Upload, message } from \"antd\";\r\nimport {\r\n  LockOutlined,\r\n  UserOutlined,\r\n  LinkOutlined,\r\n  FileImageOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  StarOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport LinkComp from \"./LinkComp\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nconst Settings = ({ profile, openSettings, setOpenSettings }) => {\r\n  const [form] = Form.useForm();\r\n  const [info, setInfo] = React.useState({\r\n    username: \"\",\r\n    deviantart: \"\",\r\n    facebook: \"\",\r\n    instagram: \"\",\r\n    twitter: \"\",\r\n    actualPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    errors: {\r\n      actual: \"\",\r\n      confirm: \"\",\r\n      instagram: \"\",\r\n      deviantart: \"\",\r\n      facebook: \"\",\r\n      twitter: \"\",\r\n      username: \"\",\r\n    },\r\n    passwordErrors: { actual: \"\", confirm: \"\" },\r\n  });\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleChange = (imageInfo) => {\r\n    if (imageInfo.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (imageInfo.file.status === \"done\") {\r\n      setInfo({ ...info, image: imageInfo.file.originFileObj });\r\n      getBase64(imageInfo.file.originFileObj, (imageUrl) => {\r\n        setLoading(false);\r\n\r\n        setImageUrl(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (profile) {\r\n      setImageUrl(profile.image);\r\n      setInfo({\r\n        ...info,\r\n        username: profile.username,\r\n        instagram: profile.instagram,\r\n        facebook: profile.facebook,\r\n        twitter: profile.twitter,\r\n        deviantart: profile.deviantart,\r\n        image: profile.image,\r\n      });\r\n    }\r\n  }, [profile]);\r\n\r\n  React.useEffect(() => {\r\n    if (info.newPassword && info.confirmPassword) {\r\n      if (info.newPassword !== info.confirmPassword) {\r\n        setInfo({\r\n          ...info,\r\n          errors: {\r\n            ...info.errors,\r\n            confirm: \"The passwords are not matching\",\r\n          },\r\n        });\r\n      } else {\r\n        setInfo({\r\n          ...info,\r\n          errors: {\r\n            ...info.errors,\r\n            confirm: \"\",\r\n          },\r\n        });\r\n      }\r\n      if (!info.actualPassword) {\r\n        setInfo({\r\n          ...info,\r\n          errors: {\r\n            ...info.errors,\r\n            actual: \"The actual password is required\",\r\n          },\r\n        });\r\n      } else {\r\n        setInfo({\r\n          ...info,\r\n          errors: {\r\n            ...info.errors,\r\n            actual: \"\",\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }, [info.newPassword, info.confirmPassword, info.actualPassword]);\r\n\r\n  React.useEffect(() => {\r\n    if (info.username.length > 0 && info.username.length < 4) {\r\n      setInfo({\r\n        ...info,\r\n        errors: {\r\n          ...info.errors,\r\n          username: \"Your username needs to be at least 4 characters long\",\r\n        },\r\n      });\r\n    } else if (info.username.length > 15) {\r\n      setInfo({\r\n        ...info,\r\n        errors: {\r\n          ...info.errors,\r\n          username: \"Your username cannot exceed 15 characters\",\r\n        },\r\n      });\r\n    } else {\r\n      setInfo({\r\n        ...info,\r\n        errors: {\r\n          ...info.errors,\r\n          username: \"\",\r\n        },\r\n      });\r\n    }\r\n  }, [info.username]);\r\n\r\n  const submit = () => {\r\n    let errors = [];\r\n\r\n    for (let i in info.errors) {\r\n      if (info.errors[1]) errors.push(info.errors[1]);\r\n    }\r\n\r\n    if (!errors) {\r\n      // changeProfile({\r\n      //   username: info.username,\r\n      //   twitter: info.twitter,\r\n      //   instagram: info.instagram,\r\n      //   deviantart: info.deviantart,\r\n      //   facebook: info.facebook,\r\n      //   newPassword: info.newPassword,\r\n      //   actualPassword: info.actualPassword,\r\n      //   image: info.image,\r\n      // });\r\n      console.log({\r\n        username: info.username,\r\n        twitter: info.twitter,\r\n        instagram: info.instagram,\r\n        deviantart: info.deviantart,\r\n        facebook: info.facebook,\r\n        newPassword: info.newPassword,\r\n        actualPassword: info.actualPassword,\r\n        image: info.image,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Settings\"\r\n        visible={openSettings}\r\n        onOk={() => console.log(form.getFieldsValue())}\r\n        onCancel={() => openSettings(false)}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\">\r\n            Submit changes\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <div className=\"settings\">\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <UserOutlined />\r\n                  Username\r\n                </span>\r\n              }\r\n              key=\"1\"\r\n            >\r\n              <Input\r\n                maxLength={15}\r\n                addonBefore={\"Username\"}\r\n                onChange={(e) => setInfo({ ...info, username: e.target.value })}\r\n                value={info.username}\r\n              />\r\n              {info.errors.username && (\r\n                <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                  <div role=\"alert\">{info.errors.username}</div>\r\n                </div>\r\n              )}\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <LockOutlined />\r\n                  Password\r\n                </span>\r\n              }\r\n              key=\"2\"\r\n            >\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Actual Password</label>\r\n                <div className=\"input-group\">\r\n                  <Input.Password\r\n                    onChange={(e) =>\r\n                      setInfo({\r\n                        ...info,\r\n                        actualPassword: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <div className=\"input-group__icon\">\r\n                    <ion-icon name=\"key\"></ion-icon>\r\n                  </div>\r\n                </div>\r\n                {info.errors.actual && (\r\n                  <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                    <div role=\"alert\">{info.errors.actual}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">New Password</label>\r\n                <div className=\"input-group\">\r\n                  <Input.Password\r\n                    onChange={(e) =>\r\n                      setInfo({\r\n                        ...info,\r\n                        newPassword: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <div className=\"input-group__icon\">\r\n                    <ion-icon name=\"key\"></ion-icon>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Confirm New Password</label>\r\n                <div className=\"input-group\">\r\n                  <Input.Password\r\n                    onChange={(e) =>\r\n                      setInfo({\r\n                        ...info,\r\n                        confirmPassword: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <div className=\"input-group__icon\">\r\n                    <ion-icon name=\"key\"></ion-icon>\r\n                  </div>\r\n                </div>\r\n                {info.errors.confirm && (\r\n                  <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                    <div role=\"alert\">{info.errors.confirm}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <LinkOutlined />\r\n                  Links\r\n                </span>\r\n              }\r\n              key=\"3\"\r\n            >\r\n              <LinkComp\r\n                setInfo={setInfo}\r\n                info={info}\r\n                name={\"facebook\"}\r\n                label={\"Facebook\"}\r\n              />\r\n              <div style={{ margin: \"10px 0\" }}></div>\r\n              <LinkComp\r\n                setInfo={setInfo}\r\n                info={info}\r\n                name={\"twitter\"}\r\n                label={\"Twitter\"}\r\n              />\r\n              <div style={{ margin: \"10px 0\" }}></div>\r\n              <LinkComp\r\n                setInfo={setInfo}\r\n                info={info}\r\n                name={\"instagram\"}\r\n                label={\"Instagram\"}\r\n              />\r\n              <div style={{ margin: \"10px 0\" }}></div>\r\n              <LinkComp\r\n                setInfo={setInfo}\r\n                info={info}\r\n                name={\"deviantart\"}\r\n                label={\"Deviantart\"}\r\n              />\r\n              <div style={{ margin: \"10px 0\" }}></div>\r\n            </TabPane>\r\n            <TabPane\r\n              tab={\r\n                <span>\r\n                  <FileImageOutlined />\r\n                  Avatar\r\n                </span>\r\n              }\r\n              key=\"4\"\r\n            >\r\n              <Upload\r\n                showUploadList={{\r\n                  showRemoveIcon: true,\r\n                  removeIcon: <StarOutlined />,\r\n                }}\r\n                listType=\"picture-card\"\r\n                className=\"cover-uploader\"\r\n                showUploadList={true}\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleChange}\r\n                maxCount={1}\r\n              >\r\n                {imageUrl ? (\r\n                  <img\r\n                    src={imageUrl}\r\n                    alt=\"image\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  uploadButton\r\n                )}\r\n              </Upload>\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}