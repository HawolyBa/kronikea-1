{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { db, auth } from \"../fbConfig\";\nimport { types } from \"../../utils/constants\";\nexport var log_in = function log_in(email, password) {\n  return function (dispatch) {\n    console.log(email, password);\n    auth.signInWithEmailAndPassword(email, password);\n  };\n};\nexport var getProfile = function getProfile() {\n  return function (dispatch) {\n    db.collection(\"users\").doc(auth.currentUser.uid).onSnapshot(function (doc) {\n      return dispatch({\n        type: types.GET_PROFILE,\n        payload: _objectSpread({\n          id: doc.id\n        }, doc.data())\n      });\n    });\n  };\n};\nexport var getFavoriteAuthors = function getFavoriteAuthors() {\n  return function (dispatch) {\n    var addedOn;\n    db.collection(\"usersLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        addedOn = doc.data().createdAt;\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().recipient]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"users\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            addedOn: addedOn,\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: types.GET_FAVORITE_AUTHORS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};\nexport var getFollowers = function getFollowers() {\n  return function (dispatch) {\n    db.collection(\"usersLikes\").where(\"recipient\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().senderId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"users\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: types.GET_FOLLOWERS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/userActions.js"],"names":["db","auth","types","log_in","email","password","dispatch","console","log","signInWithEmailAndPassword","getProfile","collection","doc","currentUser","uid","onSnapshot","type","GET_PROFILE","payload","id","data","getFavoriteAuthors","addedOn","where","get","then","docs","favArr","forEach","createdAt","recipient","users","result","map","user","Promise","all","res","favUsers","GET_FAVORITE_AUTHORS","getFollowers","senderId","GET_FOLLOWERS"],"mappings":"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","sourcesContent":["import { db, auth } from \"../fbConfig\";\r\nimport { types } from \"../../utils/constants\";\r\n\r\nexport const log_in = (email, password) => (dispatch) => {\r\n  console.log(email, password);\r\n  auth.signInWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const getProfile = () => (dispatch) => {\r\n  db.collection(\"users\")\r\n    .doc(auth.currentUser.uid)\r\n    .onSnapshot((doc) => {\r\n      return dispatch({\r\n        type: types.GET_PROFILE,\r\n        payload: { id: doc.id, ...doc.data() },\r\n      });\r\n    });\r\n};\r\n\r\nexport const getFavoriteAuthors = () => (dispatch) => {\r\n  let addedOn;\r\n  db.collection(\"usersLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n\r\n      docs.forEach((doc) => {\r\n        addedOn = doc.data().createdAt;\r\n        favArr = [...favArr, doc.data().recipient];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"users\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) =>\r\n            (favUsers = [...favUsers, { addedOn, id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: types.GET_FAVORITE_AUTHORS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n\r\nexport const getFollowers = () => (dispatch) => {\r\n  db.collection(\"usersLikes\")\r\n    .where(\"recipient\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().senderId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"users\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: types.GET_FOLLOWERS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}