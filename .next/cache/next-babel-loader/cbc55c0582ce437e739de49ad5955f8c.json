{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Pagination.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Pagination as Paginate, Divider, Form } from \"antd\";\nimport { StoriesGrid } from \"./Grid\";\nimport SortInput from \"../profile/SortInput\";\n\nconst Pagination = ({\n  data,\n  xs,\n  sm,\n  lg,\n  xl,\n  md,\n  type,\n  gutter,\n  columnsCountBreakPoints,\n  itemType,\n  auth\n}) => {\n  const [pagination, setPagination] = React.useState({\n    currentPage: 1,\n    datasPerPage: 12\n  });\n  const {\n    currentPage,\n    datasPerPage\n  } = pagination;\n  const indexOfLastData = currentPage * datasPerPage;\n  const indexOfFirstData = indexOfLastData - datasPerPage;\n  const [allData, setAllData] = React.useState(data);\n  const [currentDatas, setCurrentDatas] = React.useState(allData.slice(indexOfFirstData, indexOfLastData));\n  const [form] = Form.useForm();\n  const [value, setValue] = React.useState(\"date-asc\");\n  React.useEffect(() => {\n    if (value === \"date-asc\") {\n      setAllData(allData.sort((a, b) => {\n        return typeof a.createdAt === \"object\" ? new Date(a.createdAt.seconds * 1000) - new Date(b.createdAt.seconds * 1000) : new Date(a.createdAt) - new Date(b.createdAt);\n      }));\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\n    } else if (value === \"date-desc\") {\n      setAllData(allData.sort((a, b) => {\n        return typeof a.createdAt === \"object\" ? new Date(b.createdAt.seconds * 1000) - new Date(a.createdAt.seconds * 1000) : new Date(b.createdAt) - new Date(a.createdAt);\n      }));\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\n    } else if (value === \"name-desc\") {\n      setAllData(allData.sort((a, b) => {\n        const keyA = a.title.toLowerCase(),\n              keyB = b.title.toLowerCase();\n        if (keyA > keyB) return -1;\n        if (keyA < keyB) return 1;\n        return 0;\n      }));\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\n    } else if (value === \"name-asc\") {\n      setAllData(allData.sort((a, b) => {\n        const keyA = a.title.toLowerCase(),\n              keyB = b.title.toLowerCase();\n        if (keyA < keyB) return -1;\n        if (keyA > keyB) return 1;\n        return 0;\n      }));\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\n    }\n  }, [value]);\n\n  const handleClick = e => setPagination(_objectSpread(_objectSpread({}, pagination), {}, {\n    currentPage: Number(e)\n  }));\n\n  const renderDatas = itemType === \"stories\" ? __jsx(StoriesGrid, {\n    auth: auth,\n    gutter: gutter,\n    type: type,\n    stories: currentDatas,\n    columnsCountBreakPoints: columnsCountBreakPoints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }) : null;\n  let pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"ctrl-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Paginate, {\n    size: \"small\",\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(SortInput, {\n    setValue: setValue,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), renderDatas, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }), __jsx(Paginate, {\n    size: \"small\",\n    showQuickJumper: true,\n    onChange: handleClick,\n    total: data.length,\n    pageSize: datasPerPage,\n    showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Pagination.js"],"names":["React","Pagination","Paginate","Divider","Form","StoriesGrid","SortInput","data","xs","sm","lg","xl","md","type","gutter","columnsCountBreakPoints","itemType","auth","pagination","setPagination","useState","currentPage","datasPerPage","indexOfLastData","indexOfFirstData","allData","setAllData","currentDatas","setCurrentDatas","slice","form","useForm","value","setValue","useEffect","sort","a","b","createdAt","Date","seconds","keyA","title","toLowerCase","keyB","handleClick","e","Number","renderDatas","pageNumbers","i","Math","ceil","length","push","total","range"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Pagination as Paginate, Divider, Form } from \"antd\";\r\n\r\nimport { StoriesGrid } from \"./Grid\";\r\nimport SortInput from \"../profile/SortInput\";\r\n\r\nconst Pagination = ({\r\n  data,\r\n  xs,\r\n  sm,\r\n  lg,\r\n  xl,\r\n  md,\r\n  type,\r\n  gutter,\r\n  columnsCountBreakPoints,\r\n  itemType,\r\n  auth,\r\n}) => {\r\n  const [pagination, setPagination] = React.useState({\r\n    currentPage: 1,\r\n    datasPerPage: 12,\r\n  });\r\n  const { currentPage, datasPerPage } = pagination;\r\n  const indexOfLastData = currentPage * datasPerPage;\r\n  const indexOfFirstData = indexOfLastData - datasPerPage;\r\n\r\n  const [allData, setAllData] = React.useState(data);\r\n  const [currentDatas, setCurrentDatas] = React.useState(\r\n    allData.slice(indexOfFirstData, indexOfLastData)\r\n  );\r\n  const [form] = Form.useForm();\r\n  const [value, setValue] = React.useState(\"date-asc\");\r\n\r\n  React.useEffect(() => {\r\n    if (value === \"date-asc\") {\r\n      setAllData(\r\n        allData.sort((a, b) => {\r\n          return typeof a.createdAt === \"object\"\r\n            ? new Date(a.createdAt.seconds * 1000) -\r\n                new Date(b.createdAt.seconds * 1000)\r\n            : new Date(a.createdAt) - new Date(b.createdAt);\r\n        })\r\n      );\r\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\r\n    } else if (value === \"date-desc\") {\r\n      setAllData(\r\n        allData.sort((a, b) => {\r\n          return typeof a.createdAt === \"object\"\r\n            ? new Date(b.createdAt.seconds * 1000) -\r\n                new Date(a.createdAt.seconds * 1000)\r\n            : new Date(b.createdAt) - new Date(a.createdAt);\r\n        })\r\n      );\r\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\r\n    } else if (value === \"name-desc\") {\r\n      setAllData(\r\n        allData.sort((a, b) => {\r\n          const keyA = a.title.toLowerCase(),\r\n            keyB = b.title.toLowerCase();\r\n\r\n          if (keyA > keyB) return -1;\r\n          if (keyA < keyB) return 1;\r\n          return 0;\r\n        })\r\n      );\r\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\r\n    } else if (value === \"name-asc\") {\r\n      setAllData(\r\n        allData.sort((a, b) => {\r\n          const keyA = a.title.toLowerCase(),\r\n            keyB = b.title.toLowerCase();\r\n          if (keyA < keyB) return -1;\r\n          if (keyA > keyB) return 1;\r\n          return 0;\r\n        })\r\n      );\r\n      setCurrentDatas(allData.slice(indexOfFirstData, indexOfLastData));\r\n    }\r\n  }, [value]);\r\n\r\n  const handleClick = (e) =>\r\n    setPagination({ ...pagination, currentPage: Number(e) });\r\n\r\n  const renderDatas =\r\n    itemType === \"stories\" ? (\r\n      <StoriesGrid\r\n        auth={auth}\r\n        gutter={gutter}\r\n        type={type}\r\n        stories={currentDatas}\r\n        columnsCountBreakPoints={columnsCountBreakPoints}\r\n      />\r\n    ) : null;\r\n\r\n  let pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / datasPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"ctrl-section\">\r\n        <Paginate\r\n          size=\"small\"\r\n          showQuickJumper\r\n          onChange={handleClick}\r\n          total={data.length}\r\n          pageSize={datasPerPage}\r\n          showTotal={(total, range) =>\r\n            `${range[0]}-${range[1]} of ${total} items`\r\n          }\r\n        />\r\n        <SortInput setValue={setValue} form={form} />\r\n      </div>\r\n      <div></div>\r\n      <Divider />\r\n      {renderDatas}\r\n      <Divider />\r\n      <Paginate\r\n        size=\"small\"\r\n        showQuickJumper\r\n        onChange={handleClick}\r\n        total={data.length}\r\n        pageSize={datasPerPage}\r\n        showTotal={(total, range) =>\r\n          `${range[0]}-${range[1]} of ${total} items`\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}