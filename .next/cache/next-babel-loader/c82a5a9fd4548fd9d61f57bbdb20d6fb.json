{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Form } from \"antd\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport Filter from \"../components/explore/Filter\";\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\n\nvar Explore = function Explore(props) {\n  _s();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var stories = props.stories,\n      loading = props.loading;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentStories = _React$useState2[0],\n      setCurrentStories = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"a\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentLetter = _React$useState4[0],\n      setCurrentLetter = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentCategory = _React$useState6[0],\n      setCurrentCategory = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentStatus = _React$useState8[0],\n      setCurrentStatus = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      currentLanguage = _React$useState10[0],\n      setCurrentLanguage = _React$useState10[1];\n\n  var _React$useState11 = React.useState(true),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      mature = _React$useState12[0],\n      setMature = _React$useState12[1];\n\n  var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(function () {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(function () {\n    setCurrentStories(stories);\n  }, [stories]);\n  React.useEffect(function () {\n    setCurrentStories(stories.filter(function (s) {\n      return s.category ? s.category.includes(currentCategory) : s.categories.includes(currentCategory);\n    }));\n  }, [currentCategory]);\n  React.useEffect(function () {\n    if (!form.getFieldValue(\"category\") && !form.getFieldValue(\"language\") && !form.getFieldValue(\"status\")) {\n      setCurrentStories(stories);\n      return;\n    } else {\n      console.log(form.getFieldsValue());\n      setCurrentStories(stories.filter(function (story) {\n        return form.getFieldValue(\"category\") ? story.category ? story.category.includes(form.getFieldValue(\"category\")) : story.categories.includes(form.getFieldValue(\"category\")) : story;\n      }).filter(function (story) {\n        return story.mature === form.getFieldValue(\"mature\");\n      }).filter(function (story) {\n        return form.getFieldValue(\"language\") ? story.language === form.getFieldValue(\"language\") : story;\n      }).filter(function (story) {\n        return form.getFieldValue(\"status\") ? story.status === form.getFieldValue(\"status\") : story;\n      }));\n    }\n  }, [form.getFieldsValue()]); // console.log(stories);\n\n  return __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Explore\"), __jsx(Row, {\n    gutter: [32, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(Filter, {\n    form: form,\n    currentCategory: currentCategory,\n    setCurrentCategory: setCurrentCategory,\n    currentStatus: currentStatus,\n    setCurrentStatus: setCurrentStatus,\n    currentLanguage: currentLanguage,\n    setCurrentLanguage: setCurrentLanguage,\n    mature: mature,\n    setMature: setMature,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), __jsx(Col, {\n    span: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, __jsx(AlphabetRow, {\n    alphabet: alphabet,\n    currentLetter: currentLetter,\n    setCurrentLetter: setCurrentLetter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 3,\n      1200: 3,\n      900: 3,\n      750: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Explore, \"WqfJ5jATI9EvEomIQ3vgl9qJ620=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Explore;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stories: state.stories.storiesFromSearch,\n    loading: state.stories.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter: getStoriesByLetter\n})(Explore);\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","Form","onlyUnique","getStoriesByLetter","StoriesGrid","LoadingScreen","Filter","AlphabetRow","Explore","props","useForm","form","stories","loading","useState","currentStories","setCurrentStories","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","currentStatus","setCurrentStatus","currentLanguage","setCurrentLanguage","mature","setMature","alphabet","useEffect","filter","s","category","includes","categories","getFieldValue","console","log","getFieldsValue","story","language","status","mapStateToProps","state","storiesFromSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Form } from \"antd\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\n\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\nimport Filter from \"../components/explore/Filter\";\r\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\r\n\r\nconst Explore = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\r\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\r\n  const [mature, setMature] = React.useState(true);\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(stories);\r\n  }, [stories]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(\r\n      stories.filter((s) =>\r\n        s.category\r\n          ? s.category.includes(currentCategory)\r\n          : s.categories.includes(currentCategory)\r\n      )\r\n    );\r\n  }, [currentCategory]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      !form.getFieldValue(\"category\") &&\r\n      !form.getFieldValue(\"language\") &&\r\n      !form.getFieldValue(\"status\")\r\n    ) {\r\n      setCurrentStories(stories);\r\n      return;\r\n    } else {\r\n      console.log(form.getFieldsValue());\r\n      setCurrentStories(\r\n        stories\r\n          .filter((story) =>\r\n            form.getFieldValue(\"category\")\r\n              ? story.category\r\n                ? story.category.includes(form.getFieldValue(\"category\"))\r\n                : story.categories.includes(form.getFieldValue(\"category\"))\r\n              : story\r\n          )\r\n          .filter((story) => story.mature === form.getFieldValue(\"mature\"))\r\n          .filter((story) =>\r\n            form.getFieldValue(\"language\")\r\n              ? story.language === form.getFieldValue(\"language\")\r\n              : story\r\n          )\r\n          .filter((story) =>\r\n            form.getFieldValue(\"status\")\r\n              ? story.status === form.getFieldValue(\"status\")\r\n              : story\r\n          )\r\n      );\r\n    }\r\n  }, [form.getFieldsValue()]);\r\n\r\n  // console.log(stories);\r\n\r\n  return (\r\n    <div className=\"explore-page\">\r\n      <h2>Explore</h2>\r\n      <Row gutter={[32, 24]}>\r\n        <Filter\r\n          form={form}\r\n          currentCategory={currentCategory}\r\n          setCurrentCategory={setCurrentCategory}\r\n          currentStatus={currentStatus}\r\n          setCurrentStatus={setCurrentStatus}\r\n          currentLanguage={currentLanguage}\r\n          setCurrentLanguage={setCurrentLanguage}\r\n          mature={mature}\r\n          setMature={setMature}\r\n        />\r\n        <Col span={18}>\r\n          <AlphabetRow\r\n            alphabet={alphabet}\r\n            currentLetter={currentLetter}\r\n            setCurrentLetter={setCurrentLetter}\r\n          />\r\n          <LoadingScreen loading={loading}>\r\n            <StoriesGrid\r\n              stories={currentStories}\r\n              gutter=\"16px\"\r\n              columnsCountBreakPoints={{ 1600: 3, 1200: 3, 900: 3, 750: 2 }}\r\n            />\r\n          </LoadingScreen>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}