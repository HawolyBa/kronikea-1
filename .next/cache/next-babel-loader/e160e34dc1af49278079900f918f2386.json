{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_STORY, GET_CHAPTERS } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nexport var getStory = function getStory(id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(id).get().then(function (doc) {\n      dispatch({\n        type: GET_STORY,\n        payload: _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        })\n      });\n    });\n  };\n};\nexport var getChapters = function getChapters(id) {\n  return function (dispatch) {\n    db.collection(\"chapters\").where(\"storyId\", \"==\", id).onSnapshot(function (docs) {});\n  };\n};\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteStories = function getFavoriteStories() {\n  return function (dispatch) {\n    db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().storyId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"stories\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_STORIES,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_STORY","GET_CHAPTERS","db","auth","getStory","id","dispatch","collection","doc","get","then","type","payload","data","getChapters","where","onSnapshot","docs","getUserStories","currentUser","uid","items","forEach","getFavoriteStories","favArr","storyId","users","result","map","user","Promise","all","res","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n} from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      dispatch({\r\n        type: GET_STORY,\r\n        payload: { ...doc.data(), id: doc.id },\r\n      });\r\n    });\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .onSnapshot((docs) => {});\r\n};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}