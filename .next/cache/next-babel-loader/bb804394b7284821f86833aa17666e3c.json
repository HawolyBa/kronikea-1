{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Select.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Col, Popover, Select, Form } from \"antd\";\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\nconst {\n  Option\n} = Select;\n\nconst SelectGroup = ({\n  xs,\n  lg,\n  sm,\n  md,\n  name,\n  options,\n  info,\n  value,\n  onChangeFunc,\n  storyInfo,\n  type,\n  rules,\n  form\n}) => {\n  console.log(form.getFieldValue(name) && form.getFieldValue(name).length);\n  return __jsx(Col, {\n    xs: xs,\n    sm: sm,\n    md: md,\n    lg: lg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    required: true,\n    label: info ? __jsx(React.Fragment, null, capitalizeFirstLetter(name), __jsx(Popover, {\n      title: info,\n      trigger: \"click\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, __jsx(\"ion-icon\", {\n      name: \"information-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }))) : capitalizeFirstLetter(name),\n    colon: false,\n    name: name,\n    rules: rules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, type === \"multiple\" ? __jsx(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    onChange: val => form.setFieldsValue({\n      [name]: val\n    }),\n    defaultValue: [],\n    maxTagCount: 2,\n    disabled: form.getFieldValue(name) && form.getFieldValue(name).length === 2 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort((a, b) => {\n    const keyA = a.name,\n          keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(option => __jsx(Option, {\n    title: \"boubou\",\n    style: {\n      textTransform: \"capitalize\"\n    },\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, option.name))) : __jsx(Select, {\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    onChange: val => form.setFieldsValue({\n      [name]: val\n    }),\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort((a, b) => {\n    const keyA = a.name,\n          keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(option => __jsx(Option, {\n    style: {\n      textTransform: \"capitalize\"\n    },\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, option.name))))));\n};\n\nexport default SelectGroup;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Select.js"],"names":["Col","Popover","Select","Form","capitalizeFirstLetter","Option","SelectGroup","xs","lg","sm","md","name","options","info","value","onChangeFunc","storyInfo","type","rules","form","console","log","getFieldValue","length","width","val","setFieldsValue","sort","a","b","keyA","keyB","map","option","textTransform"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,IAA/B,QAA2C,MAA3C;AAEA,SAASC,qBAAT,QAAsC,qBAAtC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,MAAnB;;AAEA,MAAMI,WAAW,GAAG,CAAC;AACnBC,EAAAA,EADmB;AAEnBC,EAAAA,EAFmB;AAGnBC,EAAAA,EAHmB;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,IALmB;AAMnBC,EAAAA,OANmB;AAOnBC,EAAAA,IAPmB;AAQnBC,EAAAA,KARmB;AASnBC,EAAAA,YATmB;AAUnBC,EAAAA,SAVmB;AAWnBC,EAAAA,IAXmB;AAYnBC,EAAAA,KAZmB;AAanBC,EAAAA;AAbmB,CAAD,KAcd;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,aAAL,CAAmBX,IAAnB,KAA4BQ,IAAI,CAACG,aAAL,CAAmBX,IAAnB,EAAyBY,MAAjE;AACA,SACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAEhB,EAAT;AAAa,IAAA,EAAE,EAAEE,EAAjB;AAAqB,IAAA,EAAE,EAAEC,EAAzB;AAA6B,IAAA,EAAE,EAAEF,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EACHK,IAAI,GACF,4BACGT,qBAAqB,CAACO,IAAD,CADxB,EAEE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEE,IAAhB;AAAsB,MAAA,OAAO,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,IAAI,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADE,GAQFT,qBAAqB,CAACO,IAAD,CAX3B;AAcE,IAAA,KAAK,EAAE,KAdT;AAeE,IAAA,IAAI,EAAEA,IAfR;AAgBE,IAAA,KAAK,EAAEO,KAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,KAAK,UAAT,GACC,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,WAAW,EAAC,eAJd;AAKE,IAAA,QAAQ,EAAGC,GAAD,IACRN,IAAI,CAACO,cAAL,CAAoB;AAClB,OAACf,IAAD,GAAQc;AADU,KAApB,CANJ;AAUE,IAAA,YAAY,EAAE,EAVhB;AAWE,IAAA,WAAW,EAAE,CAXf;AAYE,IAAA,QAAQ,EACNN,IAAI,CAACG,aAAL,CAAmBX,IAAnB,KACAQ,IAAI,CAACG,aAAL,CAAmBX,IAAnB,EAAyBY,MAAzB,KAAoC,CADpC,GAEI,IAFJ,GAGI,KAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBGX,OAnBH,aAmBGA,OAnBH,uBAmBGA,OAAO,CACJe,IADH,CACQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,UAAMC,IAAI,GAAGF,CAAC,CAACjB,IAAf;AAAA,UACEoB,IAAI,GAAGF,CAAC,CAAClB,IADX,CADe,CAGf;;AACA,QAAImB,IAAI,GAAGC,IAAX,EAAiB,OAAO,CAAC,CAAR;AACjB,QAAID,IAAI,GAAGC,IAAX,EAAiB,OAAO,CAAP;AACjB,WAAO,CAAP;AACD,GARF,EASEC,GATF,CASOC,MAAD,IACH,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAFT;AAGE,IAAA,GAAG,EAAED,MAAM,CAACnB,KAHd;AAIE,IAAA,KAAK,EAAEmB,MAAM,CAACnB,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGmB,MAAM,CAACtB,IANV,CAVH,CAnBH,CADD,GAyCC,MAAC,MAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,QAAQ,EAAGC,GAAD,IAASN,IAAI,CAACO,cAAL,CAAoB;AAAE,OAACf,IAAD,GAAQc;AAAV,KAApB,CAJrB;AAKE,IAAA,YAAY,EAAE,EALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGb,OAPH,aAOGA,OAPH,uBAOGA,OAAO,CACJe,IADH,CACQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACf,UAAMC,IAAI,GAAGF,CAAC,CAACjB,IAAf;AAAA,UACEoB,IAAI,GAAGF,CAAC,CAAClB,IADX,CADe,CAGf;;AACA,QAAImB,IAAI,GAAGC,IAAX,EAAiB,OAAO,CAAC,CAAR;AACjB,QAAID,IAAI,GAAGC,IAAX,EAAiB,OAAO,CAAP;AACjB,WAAO,CAAP;AACD,GARF,EASEC,GATF,CASOC,MAAD,IACH,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KADT;AAEE,IAAA,GAAG,EAAED,MAAM,CAACnB,KAFd;AAGE,IAAA,KAAK,EAAEmB,MAAM,CAACnB,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGmB,MAAM,CAACtB,IALV,CAVH,CAPH,CA1CJ,CAlBF,CADF,CADF;AA6FD,CA7GD;;AA+GA,eAAeL,WAAf","sourcesContent":["import { Col, Popover, Select, Form } from \"antd\";\r\n\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectGroup = ({\r\n  xs,\r\n  lg,\r\n  sm,\r\n  md,\r\n  name,\r\n  options,\r\n  info,\r\n  value,\r\n  onChangeFunc,\r\n  storyInfo,\r\n  type,\r\n  rules,\r\n  form,\r\n}) => {\r\n  console.log(form.getFieldValue(name) && form.getFieldValue(name).length);\r\n  return (\r\n    <Col xs={xs} sm={sm} md={md} lg={lg}>\r\n      <Form.Item\r\n        required\r\n        label={\r\n          info ? (\r\n            <>\r\n              {capitalizeFirstLetter(name)}\r\n              <Popover title={info} trigger=\"click\">\r\n                <ion-icon name=\"information-circle\"></ion-icon>\r\n              </Popover>\r\n            </>\r\n          ) : (\r\n            capitalizeFirstLetter(name)\r\n          )\r\n        }\r\n        colon={false}\r\n        name={name}\r\n        rules={rules}\r\n      >\r\n        <div className=\"input-group\">\r\n          {type === \"multiple\" ? (\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              onChange={(val) =>\r\n                form.setFieldsValue({\r\n                  [name]: val,\r\n                })\r\n              }\r\n              defaultValue={[]}\r\n              maxTagCount={2}\r\n              disabled={\r\n                form.getFieldValue(name) &&\r\n                form.getFieldValue(name).length === 2\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    title=\"boubou\"\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          ) : (\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              onChange={(val) => form.setFieldsValue({ [name]: val })}\r\n              defaultValue={\"\"}\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          )}\r\n        </div>\r\n      </Form.Item>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SelectGroup;\r\n"]},"metadata":{},"sourceType":"module"}