{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { auth } from \"../redux/fbConfig\";\nvar userContext = /*#__PURE__*/React.createContext({\n  user: null\n});\nexport var useSession = function useSession() {\n  _s();\n\n  var _useContext = useContext(userContext),\n      user = _useContext.user;\n\n  return user;\n};\n\n_s(useSession, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\nexport var useAuth = function useAuth() {\n  _s2();\n\n  var _React$useState = React.useState(function () {\n    var user = auth.currentUser;\n    return {\n      initializing: !user,\n      user: user\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user: user\n    });\n  }\n\n  React.useEffect(function () {\n    // listen for auth state changes\n    var unsubscribe = auth.onAuthStateChanged(onChange); // unsubscribe to the listener when unmounting\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return state;\n};\n\n_s2(useAuth, \"Q7gfpfGBlGKqaIq/LngHL8pJnOU=\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/userHooks.js"],"names":["React","auth","userContext","createContext","user","useSession","useContext","useAuth","useState","currentUser","initializing","state","setState","onChange","useEffect","unsubscribe","onAuthStateChanged"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,IAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,IAAI,EAAE;AADgC,CAApB,CAApB;AAIA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,oBACbC,UAAU,CAACJ,WAAD,CADG;AAAA,MACtBE,IADsB,eACtBA,IADsB;;AAE9B,SAAOA,IAAP;AACD,CAHM;;GAAMC,U;;AAKb,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,wBACDP,KAAK,CAACQ,QAAN,CAAe,YAAM;AAC7C,QAAMJ,IAAI,GAAGH,IAAI,CAACQ,WAAlB;AACA,WAAO;AAAEC,MAAAA,YAAY,EAAE,CAACN,IAAjB;AAAuBA,MAAAA,IAAI,EAAJA;AAAvB,KAAP;AACD,GAHyB,CADC;AAAA;AAAA,MACpBO,KADoB;AAAA,MACbC,QADa;;AAK3B,WAASC,QAAT,CAAkBT,IAAlB,EAAwB;AACtBQ,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,YAAY,EAAE,KAAhB;AAAuBN,MAAAA,IAAI,EAAJA;AAAvB,KAAD,CAAR;AACD;;AAEDJ,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB;AACA,QAAMC,WAAW,GAAGd,IAAI,CAACe,kBAAL,CAAwBH,QAAxB,CAApB,CAFoB,CAGpB;;AACA,WAAO;AAAA,aAAME,WAAW,EAAjB;AAAA,KAAP;AACD,GALD,EAKG,EALH;AAOA,SAAOJ,KAAP;AACD,CAjBM;;IAAMJ,O","sourcesContent":["import React from \"react\";\r\nimport { auth } from \"../redux/fbConfig\";\r\n\r\nconst userContext = React.createContext({\r\n  user: null,\r\n});\r\n\r\nexport const useSession = () => {\r\n  const { user } = useContext(userContext);\r\n  return user;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const [state, setState] = React.useState(() => {\r\n    const user = auth.currentUser;\r\n    return { initializing: !user, user };\r\n  });\r\n  function onChange(user) {\r\n    setState({ initializing: false, user });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // listen for auth state changes\r\n    const unsubscribe = auth.onAuthStateChanged(onChange);\r\n    // unsubscribe to the listener when unmounting\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}