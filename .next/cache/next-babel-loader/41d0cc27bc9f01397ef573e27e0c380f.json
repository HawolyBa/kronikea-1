{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\[id]\\\\edit.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport { editCharacter, getCharacter, getUserCharacters } from \"../../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../../components/forms/CharacterForm\";\n\nvar EditCharacter = function EditCharacter(props) {\n  _s();\n\n  var character = props.character,\n      characters = props.characters,\n      loadingCharacter = props.loadingCharacter,\n      loading = props.loading,\n      charaExists = props.charaExists,\n      editMessage = props.editMessage;\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibility = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getCharacter(router.query.id);\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    if (editMessage) {\n      message.success(editMessage);\n    }\n  }, [editMessage]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      \"public\": visibility\n    });\n  }, [visibility]);\n\n  var onFailed = function onFailed() {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  var submit = function submit(values) {\n    // props.addCharacter({\n    //   ...values,\n    //   authorId: auth.user.uid,\n    //   authorName: auth.user.username,\n    // });\n    console.log(values);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: charaExists,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === character.authorId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form new-character\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Edit character:\", \" \".concat(character.firstname, \" \").concat(character.lastname && character.lastname)), __jsx(CharacterForm, {\n    submit: submit,\n    onFailed: onFailed,\n    form: form,\n    character: character,\n    characters: characters,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    loadingCharacter: loadingCharacter,\n    type: \"edit\",\n    initialValues: _objectSpread({}, character),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))))) // <LoadingScreen loading={auth.isLoading}>\n  //   <RedirectComp condition={auth.user} type=\"redirect\">\n  //     <div className=\"new-character custom-form\">\n  //       <div className=\"inner\">\n  //         <h2 className=\"side-heading\">Add a new character</h2>\n  //         <CharacterForm\n  //           submit={submit}\n  //           onFailed={onFailed}\n  //           form={form}\n  //           characters={characters}\n  //           visibility={visibility}\n  //           setVisibility={setVisibility}\n  //           loadingCharacter={loadingCharacter}\n  //           type=\"add\"\n  //         />\n  //       </div>\n  //     </div>\n  //   </RedirectComp>\n  // </LoadingScreen>\n  ;\n};\n\n_s(EditCharacter, \"BmEDB6/Oq88cPR3EHWBrfisvGxw=\", false, function () {\n  return [useAuth, Form.useForm, useRouter];\n});\n\n_c = EditCharacter;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    character: state.characters.character,\n    characters: state.characters.userCharacters,\n    loading: state.characters.loading,\n    loadingCharacter: state.characters.loadingCharacter,\n    characterId: state.characters.characterId,\n    charaExists: state.characters.charaExists,\n    editMessage: state.characters.message\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCharacter: getCharacter,\n  editCharacter: editCharacter,\n  getUserCharacters: getUserCharacters\n})(EditCharacter);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCharacter\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/[id]/edit.js"],"names":["React","useRouter","Form","message","connect","useAuth","editCharacter","getCharacter","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","EditCharacter","props","character","characters","loadingCharacter","loading","charaExists","editMessage","auth","useForm","form","router","useState","visibility","setVisibility","useEffect","user","query","id","uid","success","setFieldsValue","onFailed","window","scrollTo","error","submit","values","console","log","authorId","firstname","lastname","mapStateToProps","state","userCharacters","characterId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport {\r\n  editCharacter,\r\n  getCharacter,\r\n  getUserCharacters,\r\n} from \"../../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../../components/forms/CharacterForm\";\r\n\r\nconst EditCharacter = (props) => {\r\n  const {\r\n    character,\r\n    characters,\r\n    loadingCharacter,\r\n    loading,\r\n    charaExists,\r\n    editMessage,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getCharacter(router.query.id);\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (editMessage) {\r\n      message.success(editMessage);\r\n    }\r\n  }, [editMessage]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    // props.addCharacter({\r\n    //   ...values,\r\n    //   authorId: auth.user.uid,\r\n    //   authorName: auth.user.username,\r\n    // });\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={charaExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === character.authorId}\r\n        >\r\n          <div className=\"custom-form new-character\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">\r\n                Edit character:\r\n                {` ${character.firstname} ${\r\n                  character.lastname && character.lastname\r\n                }`}\r\n              </h2>\r\n              <CharacterForm\r\n                submit={submit}\r\n                onFailed={onFailed}\r\n                form={form}\r\n                character={character}\r\n                characters={characters}\r\n                visibility={visibility}\r\n                setVisibility={setVisibility}\r\n                loadingCharacter={loadingCharacter}\r\n                type=\"edit\"\r\n                initialValues={{ ...character }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n    // <LoadingScreen loading={auth.isLoading}>\r\n    //   <RedirectComp condition={auth.user} type=\"redirect\">\r\n    //     <div className=\"new-character custom-form\">\r\n    //       <div className=\"inner\">\r\n    //         <h2 className=\"side-heading\">Add a new character</h2>\r\n    //         <CharacterForm\r\n    //           submit={submit}\r\n    //           onFailed={onFailed}\r\n    //           form={form}\r\n    //           characters={characters}\r\n    //           visibility={visibility}\r\n    //           setVisibility={setVisibility}\r\n    //           loadingCharacter={loadingCharacter}\r\n    //           type=\"add\"\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </RedirectComp>\r\n    // </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  character: state.characters.character,\r\n  characters: state.characters.userCharacters,\r\n  loading: state.characters.loading,\r\n  loadingCharacter: state.characters.loadingCharacter,\r\n  characterId: state.characters.characterId,\r\n  charaExists: state.characters.charaExists,\r\n  editMessage: state.characters.message,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCharacter,\r\n  editCharacter,\r\n  getUserCharacters,\r\n})(EditCharacter);\r\n"]},"metadata":{},"sourceType":"module"}