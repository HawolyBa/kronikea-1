{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Tags.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Tag, Tooltip, Form } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst Tags = ({\n  tags,\n  setTags,\n  form\n}) => {\n  const inputButton = React.useRef();\n  const editInputButton = React.useRef();\n  const [inputVisible, setInputVisible] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [editInputIndex, setEditInputIndex] = React.useState(-1);\n  const [editInputValue, setEditInputValue] = React.useState(\"\");\n\n  const handleClose = removedTag => {\n    setTags(tags.filter(tag => tag !== removedTag));\n    console.log(form);\n    form.setFieldsValue({\n      tags: tags.filter(tag => tag !== removedTag)\n    });\n  };\n\n  const showInput = () => {\n    var _inputButton$current;\n\n    setInputVisible(true);\n    inputButton === null || inputButton === void 0 ? void 0 : (_inputButton$current = inputButton.current) === null || _inputButton$current === void 0 ? void 0 : _inputButton$current.focus(); //editInputButton.current.focus();\n    //;\n  };\n\n  const handleInputChange = e => setInputValue(e.target.value);\n\n  const handleInputConfirm = () => {\n    let newTags = tags;\n\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [...newTags, inputValue];\n    }\n\n    setTags(newTags);\n    setInputValue(\"\");\n    setInputVisible(false);\n  };\n\n  const handleEditInputChange = e => setEditInputValue(e.target.value);\n\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const keyPress = e => {\n    console.log(e.key);\n  };\n\n  return __jsx(Form.Item, {\n    name: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map((tag, i) => {\n    if (editInputIndex === i) {\n      return __jsx(\"input\", {\n        key: i,\n        onChange: handleEditInputChange,\n        onBlur: handleEditInputConfirm,\n        onPressEnter: handleEditInputConfirm,\n        value: editInputValue,\n        ref: editInputButton,\n        className: \"form-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      });\n    }\n\n    const isLongTag = tag.length > 20;\n\n    const TagElem = __jsx(Tag, {\n      onClose: () => handleClose(tag),\n      closable: true,\n      key: tag,\n      className: \"edit-tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      onDoubleClick: e => {\n        if (i !== 0) {\n          setEditInputIndex(i);\n          setEditInputValue(tag);\n          editInputButton.focus();\n          e.preventDefault();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, isLongTag ? `#${tag.slice(0, 20)}...` : `#${tag}`));\n\n    return isLongTag ? __jsx(Tooltip, {\n      title: tag,\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, TagElem) : TagElem;\n  }), inputVisible && __jsx(\"input\", {\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        handleInputConfirm();\n      }\n    },\n    value: inputValue,\n    type: \"text\",\n    ref: inputButton,\n    className: \"tag-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: showInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), \" New Tag\"));\n};\n\nexport default Tags;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Tags.js"],"names":["Tag","Tooltip","Form","PlusOutlined","Tags","tags","setTags","form","inputButton","React","useRef","editInputButton","inputVisible","setInputVisible","useState","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","handleClose","removedTag","filter","tag","console","log","setFieldsValue","showInput","current","focus","handleInputChange","e","target","value","handleInputConfirm","newTags","indexOf","handleEditInputChange","handleEditInputConfirm","keyPress","key","map","i","isLongTag","length","TagElem","preventDefault","slice"],"mappings":"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","sourcesContent":["import { Tag, Tooltip, Form } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Tags = ({ tags, setTags, form }) => {\r\n  const inputButton = React.useRef();\r\n  const editInputButton = React.useRef();\r\n  const [inputVisible, setInputVisible] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [editInputIndex, setEditInputIndex] = React.useState(-1);\r\n  const [editInputValue, setEditInputValue] = React.useState(\"\");\r\n\r\n  const handleClose = (removedTag) => {\r\n    setTags(tags.filter((tag) => tag !== removedTag));\r\n    console.log(form);\r\n    form.setFieldsValue({ tags: tags.filter((tag) => tag !== removedTag) });\r\n  };\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n    inputButton?.current?.focus();\r\n    //editInputButton.current.focus();\r\n    //;\r\n  };\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n  const handleInputConfirm = () => {\r\n    let newTags = tags;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      newTags = [...newTags, inputValue];\r\n    }\r\n\r\n    setTags(newTags);\r\n    setInputValue(\"\");\r\n    setInputVisible(false);\r\n  };\r\n\r\n  const handleEditInputChange = (e) => setEditInputValue(e.target.value);\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setTags(newTags);\r\n    setEditInputIndex(-1);\r\n    setEditInputValue(\"\");\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    console.log(e.key);\r\n  };\r\n\r\n  return (\r\n    <Form.Item name=\"tags\">\r\n      {tags?.map((tag, i) => {\r\n        if (editInputIndex === i) {\r\n          return (\r\n            <input\r\n              key={i}\r\n              onChange={handleEditInputChange}\r\n              onBlur={handleEditInputConfirm}\r\n              onPressEnter={handleEditInputConfirm}\r\n              value={editInputValue}\r\n              ref={editInputButton}\r\n              className=\"form-input\"\r\n            />\r\n          );\r\n        }\r\n        const isLongTag = tag.length > 20;\r\n        const TagElem = (\r\n          <Tag\r\n            onClose={() => handleClose(tag)}\r\n            closable={true}\r\n            key={tag}\r\n            className=\"edit-tag\"\r\n          >\r\n            <span\r\n              onDoubleClick={(e) => {\r\n                if (i !== 0) {\r\n                  setEditInputIndex(i);\r\n                  setEditInputValue(tag);\r\n                  editInputButton.focus();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n            >\r\n              {isLongTag ? `#${tag.slice(0, 20)}...` : `#${tag}`}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {TagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          TagElem\r\n        );\r\n      })}\r\n      {inputVisible && (\r\n        <input\r\n          onChange={handleInputChange}\r\n          onBlur={handleInputConfirm}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleInputConfirm();\r\n            }\r\n          }}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          ref={inputButton}\r\n          className=\"tag-input\"\r\n        />\r\n      )}\r\n      {!inputVisible && (\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined /> New Tag\r\n        </Tag>\r\n      )}\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}