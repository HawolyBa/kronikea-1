{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Tags.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Tag, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar Tags = function Tags(_ref) {\n  _s();\n\n  var tags = _ref.tags,\n      setTags = _ref.setTags,\n      storyInfo = _ref.storyInfo;\n  var inputButton = React.useRef();\n  var editInputButton = React.useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputVisible = _React$useState2[0],\n      setInputVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      inputValue = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(-1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      editInputIndex = _React$useState6[0],\n      setEditInputIndex = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      editInputValue = _React$useState8[0],\n      setEditInputValue = _React$useState8[1];\n\n  var handleClose = function handleClose(removedTag) {\n    return setTags(tags.filter(function (tag) {\n      return tags !== removedTag;\n    }));\n  };\n\n  var showInput = function showInput() {\n    setInputVisible(true); //console.log();\n    //editInputButton.current.focus();\n    //inputButton.current.focus();\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    return setInputValue(e.target.value);\n  };\n\n  var handleInputConfirm = function handleInputConfirm() {\n    var newTags = tags;\n\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [].concat(_toConsumableArray(newTags), [inputValue]);\n    }\n\n    setTags(newTags);\n    setInputValue(\"\");\n    setInputVisible(false);\n  };\n\n  var handleEditInputChange = function handleEditInputChange(e) {\n    return setEditInputValue(e.target.value);\n  };\n\n  var handleEditInputConfirm = function handleEditInputConfirm() {\n    var newTags = _toConsumableArray(tags);\n\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  var keyPress = function keyPress(e) {\n    console.log(e.key);\n  };\n\n  return __jsx(React.Fragment, null, tags === null || tags === void 0 ? void 0 : tags.map(function (tag, i) {\n    if (editInputIndex === i) {\n      return __jsx(\"input\", {\n        key: i,\n        onChange: handleEditInputChange,\n        onBlur: handleEditInputConfirm,\n        onPressEnter: handleEditInputConfirm,\n        value: editInputValue,\n        ref: editInputButton,\n        className: \"form-input\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      });\n    }\n\n    var isLongTag = tag.length > 20;\n\n    var TagElem = __jsx(Tag, {\n      onClose: function onClose() {\n        return handleClose(tag);\n      },\n      closable: true,\n      key: tag,\n      className: \"edit-tag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      onDoubleClick: function onDoubleClick(e) {\n        if (i !== 0) {\n          setEditInputIndex(i);\n          setEditInputValue(tag);\n          editInputButton.focus();\n          e.preventDefault();\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, isLongTag ? \"\".concat(tag.slice(0, 20), \"...\") : tag));\n\n    return isLongTag ? __jsx(Tooltip, {\n      title: tag,\n      key: tag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, TagElem) : TagElem;\n  }), inputVisible && __jsx(\"input\", {\n    onChange: handleInputChange,\n    onBlur: handleInputConfirm,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === \"Enter\") {\n        handleInputConfirm();\n      }\n    },\n    value: inputValue,\n    type: \"text\",\n    ref: inputButton,\n    className: \"form-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), !inputVisible && __jsx(Tag, {\n    className: \"site-tag-plus\",\n    onClick: showInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(PlusOutlined, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), \" New Tag\"));\n};\n\n_s(Tags, \"ZqYdNFlsgwjPlNp0db/U6JG31/U=\");\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Tags.js"],"names":["Tag","Tooltip","PlusOutlined","Tags","tags","setTags","storyInfo","inputButton","React","useRef","editInputButton","useState","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","handleClose","removedTag","filter","tag","showInput","handleInputChange","e","target","value","handleInputConfirm","newTags","indexOf","handleEditInputChange","handleEditInputConfirm","keyPress","console","log","key","map","i","isLongTag","length","TagElem","focus","preventDefault","slice"],"mappings":"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","sourcesContent":["import { Tag, Tooltip } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Tags = ({ tags, setTags, storyInfo }) => {\r\n  const inputButton = React.useRef();\r\n  const editInputButton = React.useRef();\r\n  const [inputVisible, setInputVisible] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const [editInputIndex, setEditInputIndex] = React.useState(-1);\r\n  const [editInputValue, setEditInputValue] = React.useState(\"\");\r\n\r\n  const handleClose = (removedTag) =>\r\n    setTags(tags.filter((tag) => tags !== removedTag));\r\n\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n    //console.log();\r\n    //editInputButton.current.focus();\r\n    //inputButton.current.focus();\r\n  };\r\n\r\n  const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n  const handleInputConfirm = () => {\r\n    let newTags = tags;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      newTags = [...newTags, inputValue];\r\n    }\r\n\r\n    setTags(newTags);\r\n    setInputValue(\"\");\r\n    setInputVisible(false);\r\n  };\r\n\r\n  const handleEditInputChange = (e) => setEditInputValue(e.target.value);\r\n\r\n  const handleEditInputConfirm = () => {\r\n    const newTags = [...tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    setTags(newTags);\r\n    setEditInputIndex(-1);\r\n    setEditInputValue(\"\");\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    console.log(e.key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tags?.map((tag, i) => {\r\n        if (editInputIndex === i) {\r\n          return (\r\n            <input\r\n              key={i}\r\n              onChange={handleEditInputChange}\r\n              onBlur={handleEditInputConfirm}\r\n              onPressEnter={handleEditInputConfirm}\r\n              value={editInputValue}\r\n              ref={editInputButton}\r\n              className=\"form-input\"\r\n            />\r\n          );\r\n        }\r\n        const isLongTag = tag.length > 20;\r\n        const TagElem = (\r\n          <Tag\r\n            onClose={() => handleClose(tag)}\r\n            closable={true}\r\n            key={tag}\r\n            className=\"edit-tag\"\r\n          >\r\n            <span\r\n              onDoubleClick={(e) => {\r\n                if (i !== 0) {\r\n                  setEditInputIndex(i);\r\n                  setEditInputValue(tag);\r\n                  editInputButton.focus();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n            >\r\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n            </span>\r\n          </Tag>\r\n        );\r\n        return isLongTag ? (\r\n          <Tooltip title={tag} key={tag}>\r\n            {TagElem}\r\n          </Tooltip>\r\n        ) : (\r\n          TagElem\r\n        );\r\n      })}\r\n      {inputVisible && (\r\n        <input\r\n          onChange={handleInputChange}\r\n          onBlur={handleInputConfirm}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleInputConfirm();\r\n            }\r\n          }}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          ref={inputButton}\r\n          className=\"form-input\"\r\n        />\r\n      )}\r\n      {!inputVisible && (\r\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\r\n          <PlusOutlined /> New Tag\r\n        </Tag>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}