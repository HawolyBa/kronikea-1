{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Grid.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Empty } from \"antd\";\nimport Link from \"next/link\";\nimport Card from \"../common/Card\";\nimport UserCard from \"../common/UserCard\";\nimport CharacterCard from \"../common/CharacterCard\";\nimport LocationCard from \"../common/LocationCard\";\nimport WithLink from \"../hoc/WithLink\";\n\nvar StoriesGrid = function StoriesGrid(_ref) {\n  var stories = _ref.stories,\n      type = _ref.type,\n      gutter = _ref.gutter,\n      lg = _ref.lg,\n      md = _ref.md,\n      sm = _ref.sm,\n      xs = _ref.xs,\n      xl = _ref.xl;\n  return __jsx(Row, {\n    gutter: gutter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, stories.length > 0 ? stories.map(function (story) {\n    var _jsx;\n\n    return __jsx(Col, (_jsx = {\n      key: story.id,\n      xl: xl,\n      md: md,\n      xs: xs,\n      sm: sm,\n      lg: lg\n    }, _defineProperty(_jsx, \"xl\", xl), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }), _jsx), __jsx(Link, {\n      href: \"/story/$story.id\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, __jsx(Card, {\n      story: story,\n      type: type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }))));\n  }) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No characters yet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = StoriesGrid;\n\nvar UserGrid = function UserGrid() {\n  return __jsx(Row, {\n    gutter: [20, 30],\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(UserCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c2 = UserGrid;\n\nvar LocationGrid = function LocationGrid(_ref2) {\n  var locations = _ref2.locations,\n      gutter = _ref2.gutter,\n      xl = _ref2.xl,\n      xxl = _ref2.xxl,\n      lg = _ref2.lg,\n      md = _ref2.md,\n      sm = _ref2.sm,\n      xs = _ref2.xs,\n      type = _ref2.type;\n  return locations.length > 0 ? __jsx(Row, {\n    gutter: gutter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, locations.map(function (loc) {\n    return __jsx(Col, {\n      xl: xl,\n      xxl: xxl,\n      xs: xs,\n      sm: sm,\n      md: md,\n      lg: lg,\n      key: loc.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(LocationCard, {\n      type: type,\n      location: loc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }));\n  })) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No locations yet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  });\n};\n\n_c3 = LocationGrid;\n\nvar CharacterGrid = function CharacterGrid(_ref3) {\n  var gutter = _ref3.gutter,\n      xxl = _ref3.xxl,\n      xl = _ref3.xl,\n      lg = _ref3.lg,\n      md = _ref3.md,\n      sm = _ref3.sm,\n      xs = _ref3.xs,\n      characters = _ref3.characters,\n      type = _ref3.type;\n  return characters.length > 0 ? __jsx(Row, {\n    gutter: gutter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, characters === null || characters === void 0 ? void 0 : characters.map(function (c) {\n    return __jsx(Col, {\n      key: c.id,\n      xxl: xxl,\n      xl: xl,\n      lg: lg,\n      md: md,\n      sm: sm,\n      xs: xs,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, type === \"show\" ? __jsx(WithLink, {\n      link: \"/character/\".concat(c.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(CharacterCard, {\n      character: c,\n      type: type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    })) : __jsx(CharacterCard, {\n      character: c,\n      type: type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }));\n  })) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No characters yet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  });\n};\n\n_c4 = CharacterGrid;\nexport { StoriesGrid, CharacterGrid, UserGrid, LocationGrid };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StoriesGrid\");\n$RefreshReg$(_c2, \"UserGrid\");\n$RefreshReg$(_c3, \"LocationGrid\");\n$RefreshReg$(_c4, \"CharacterGrid\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Grid.js"],"names":["Row","Col","Empty","Link","Card","UserCard","CharacterCard","LocationCard","WithLink","StoriesGrid","stories","type","gutter","lg","md","sm","xs","xl","length","map","story","id","PRESENTED_IMAGE_SIMPLE","UserGrid","LocationGrid","locations","xxl","loc","CharacterGrid","characters","c"],"mappings":"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","sourcesContent":["import { Row, Col, Empty } from \"antd\";\r\nimport Link from \"next/link\";\r\n\r\nimport Card from \"../common/Card\";\r\nimport UserCard from \"../common/UserCard\";\r\nimport CharacterCard from \"../common/CharacterCard\";\r\nimport LocationCard from \"../common/LocationCard\";\r\nimport WithLink from \"../hoc/WithLink\";\r\n\r\nconst StoriesGrid = ({ stories, type, gutter, lg, md, sm, xs, xl }) => {\r\n  return (\r\n    <Row gutter={gutter}>\r\n      {stories.length > 0 ? (\r\n        stories.map((story) => (\r\n          <Col key={story.id} xl={xl} md={md} xs={xs} sm={sm} lg={lg} xl={xl}>\r\n            <Link href={`/story/$story.id`}>\r\n              <a>\r\n                <Card story={story} type={type} />\r\n              </a>\r\n            </Link>\r\n          </Col>\r\n        ))\r\n      ) : (\r\n        <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          description=\"No characters yet\"\r\n        />\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst UserGrid = () => {\r\n  return (\r\n    <Row gutter={[20, 30]} align=\"center\">\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n      <Col lg={4} md={6} sm={8} xs={12}>\r\n        <UserCard />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst LocationGrid = ({ locations, gutter, xl, xxl, lg, md, sm, xs, type }) => {\r\n  return locations.length > 0 ? (\r\n    <Row gutter={gutter}>\r\n      {locations.map((loc) => (\r\n        <Col xl={xl} xxl={xxl} xs={xs} sm={sm} md={md} lg={lg} key={loc.id}>\r\n          <LocationCard type={type} location={loc} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description=\"No locations yet\"\r\n    />\r\n  );\r\n};\r\n\r\nconst CharacterGrid = ({\r\n  gutter,\r\n  xxl,\r\n  xl,\r\n  lg,\r\n  md,\r\n  sm,\r\n  xs,\r\n  characters,\r\n  type,\r\n}) => {\r\n  return characters.length > 0 ? (\r\n    <Row gutter={gutter}>\r\n      {characters?.map((c) => (\r\n        <Col key={c.id} xxl={xxl} xl={xl} lg={lg} md={md} sm={sm} xs={xs}>\r\n          {type === \"show\" ? (\r\n            <WithLink link={`/character/${c.id}`}>\r\n              <CharacterCard character={c} type={type} />\r\n            </WithLink>\r\n          ) : (\r\n            <CharacterCard character={c} type={type} />\r\n          )}\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description=\"No characters yet\"\r\n    />\r\n  );\r\n};\r\n\r\nexport { StoriesGrid, CharacterGrid, UserGrid, LocationGrid };\r\n"]},"metadata":{},"sourceType":"module"}