{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_STORY, GET_CHAPTERS, ADD_STORY } from \"../../utils/constants\";\nimport { db, auth, storage } from \"../fbConfig\";\nimport firebase from \"firebase\";\nimport { message } from \"antd\";\nimport Router from \"next/router\";\nexport var getStory = function getStory(id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(id).get().then(function (doc) {\n      dispatch({\n        type: GET_STORY,\n        payload: _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        })\n      });\n    });\n  };\n};\nexport var addStory = function addStory(data) {\n  return function (dispatch) {\n    var imageName = data.title.toLowerCase().split(\" \").join(\"_\");\n    console.log(data);\n\n    if (typeof data.banner === \"object\") {\n      storage.ref(\"\".concat(auth.currentUser.uid, \"/\").concat(imageName)).put(data.banner).then(function () {\n        return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n      }).then(function (url) {\n        return db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n          authorId: auth.currentUser.uid,\n          authorName: data.authorName,\n          oneShot: false,\n          banner: url,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          likesCount: 0,\n          chaptersCount: 0,\n          locationsCount: 0,\n          secondaryCharacters: [],\n          featured: false,\n          note: 0\n        }));\n      }).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n        }, 1000);\n        dispatch({\n          type: ADD_STORY,\n          payload: {\n            message: \"Story added successfully\",\n            storyId: res.id\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    } else {\n      db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n        authorId: auth.currentUser.uid,\n        authorName: data.authorName,\n        oneShot: false,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        likesCount: 0,\n        chaptersCount: 0,\n        locationsCount: 0,\n        featured: false,\n        secondaryCharacters: [],\n        note: 0\n      })).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n        }, 1000);\n        dispatch({\n          type: ADD_STORY,\n          payload: {\n            message: \"Story added successfully\",\n            storyId: res.id\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  };\n};\nexport var getChapters = function getChapters(id) {\n  return function (dispatch) {\n    db.collection(\"chapters\").where(\"storyId\", \"==\", id).orderBy(\"number\", \"asc\").onSnapshot(function (docs) {\n      var arr = [];\n      docs.forEach(function (doc) {\n        arr.push({\n          authorId: doc.data().authorId,\n          id: doc.id,\n          createdAt: doc.data().createdAt,\n          number: doc.data().number,\n          title: doc.data().title,\n          commentsCount: doc.data().commentsCount\n        });\n      });\n      dispatch({\n        type: GET_CHAPTERS,\n        payload: arr\n      });\n    });\n  };\n};\nexport var getStoryCharacters = function getStoryCharacters(id) {\n  return function (dispatch) {};\n};\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteStories = function getFavoriteStories() {\n  return function (dispatch) {\n    db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().storyId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"stories\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_STORIES,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_STORY","GET_CHAPTERS","ADD_STORY","db","auth","storage","firebase","message","Router","getStory","id","dispatch","collection","doc","get","then","type","payload","data","addStory","imageName","title","toLowerCase","split","join","console","log","banner","ref","currentUser","uid","put","child","getDownloadURL","url","add","authorId","authorName","oneShot","createdAt","firestore","FieldValue","serverTimestamp","likesCount","chaptersCount","locationsCount","secondaryCharacters","featured","note","res","success","setTimeout","push","storyId","err","error","getChapters","where","orderBy","onSnapshot","docs","arr","forEach","number","commentsCount","getStoryCharacters","getUserStories","items","getFavoriteStories","favArr","users","result","map","user","Promise","all","favUsers"],"mappings":";;;;;;;AAAA,SACEA,gBADF,EAEEC,oBAFF,EAGEC,SAHF,EAIEC,YAJF,EAKEC,SALF,QAMO,uBANP;AAOA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD;AAAA,SAAQ,UAACC,QAAD,EAAc;AAC5CR,IAAAA,EAAE,CAACS,UAAH,CAAc,SAAd,EACGC,GADH,CACOH,EADP,EAEGI,GAFH,GAGGC,IAHH,CAGQ,UAACF,GAAD,EAAS;AACbF,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEhB,SADC;AAEPiB,QAAAA,OAAO,kCAAOJ,GAAG,CAACK,IAAJ,EAAP;AAAmBR,UAAAA,EAAE,EAAEG,GAAG,CAACH;AAA3B;AAFA,OAAD,CAAR;AAID,KARH;AASD,GAVuB;AAAA,CAAjB;AAYP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACD,IAAD;AAAA,SAAU,UAACP,QAAD,EAAc;AAC9C,QAAMS,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,IAApC,CAAyC,GAAzC,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,QAAI,OAAOA,IAAI,CAACS,MAAZ,KAAuB,QAA3B,EAAqC;AACnCtB,MAAAA,OAAO,CACJuB,GADH,WACUxB,IAAI,CAACyB,WAAL,CAAiBC,GAD3B,cACkCV,SADlC,GAEGW,GAFH,CAEOb,IAAI,CAACS,MAFZ,EAGGZ,IAHH,CAGQ,YAAM;AACV,eAAOV,OAAO,CACXuB,GADI,CACAxB,IAAI,CAACyB,WAAL,CAAiBC,GADjB,EAEJE,KAFI,CAEEZ,SAFF,EAGJa,cAHI,EAAP;AAID,OARH,EASGlB,IATH,CASQ,UAACmB,GAAD,EAAS;AACb,eAAO/B,EAAE,CAACS,UAAH,CAAc,SAAd,EAAyBuB,GAAzB,iCACFjB,IADE;AAELkB,UAAAA,QAAQ,EAAEhC,IAAI,CAACyB,WAAL,CAAiBC,GAFtB;AAGLO,UAAAA,UAAU,EAAEnB,IAAI,CAACmB,UAHZ;AAILC,UAAAA,OAAO,EAAE,KAJJ;AAKLX,UAAAA,MAAM,EAAEO,GALH;AAMLK,UAAAA,SAAS,EAAEjC,QAAQ,CAACkC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EANN;AAOLC,UAAAA,UAAU,EAAE,CAPP;AAQLC,UAAAA,aAAa,EAAE,CARV;AASLC,UAAAA,cAAc,EAAE,CATX;AAULC,UAAAA,mBAAmB,EAAE,EAVhB;AAWLC,UAAAA,QAAQ,EAAE,KAXL;AAYLC,UAAAA,IAAI,EAAE;AAZD,WAAP;AAcD,OAxBH,EAyBGjC,IAzBH,CAyBQ,UAACkC,GAAD,EAAS;AACb1C,QAAAA,OAAO,CAAC2C,OAAR,CAAgB,0BAAhB;AACAC,QAAAA,UAAU,CAAC,YAAM;AACf3C,UAAAA,MAAM,CAAC4C,IAAP,kBAAsBH,GAAG,CAACvC,EAA1B;AACD,SAFS,EAEP,IAFO,CAAV;AAGAC,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEd,SADC;AAEPe,UAAAA,OAAO,EAAE;AAAEV,YAAAA,OAAO,EAAE,0BAAX;AAAuC8C,YAAAA,OAAO,EAAEJ,GAAG,CAACvC;AAApD;AAFF,SAAD,CAAR;AAID,OAlCH,WAmCS,UAAC4C,GAAD,EAAS;AACd/C,QAAAA,OAAO,CAACgD,KAAR,CAAcD,GAAG,CAAC/C,OAAlB;AACD,OArCH;AAsCD,KAvCD,MAuCO;AACLJ,MAAAA,EAAE,CAACS,UAAH,CAAc,SAAd,EACGuB,GADH,iCAEOjB,IAFP;AAGIkB,QAAAA,QAAQ,EAAEhC,IAAI,CAACyB,WAAL,CAAiBC,GAH/B;AAIIO,QAAAA,UAAU,EAAEnB,IAAI,CAACmB,UAJrB;AAKIC,QAAAA,OAAO,EAAE,KALb;AAMIC,QAAAA,SAAS,EAAEjC,QAAQ,CAACkC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EANf;AAOIC,QAAAA,UAAU,EAAE,CAPhB;AAQIC,QAAAA,aAAa,EAAE,CARnB;AASIC,QAAAA,cAAc,EAAE,CATpB;AAUIE,QAAAA,QAAQ,EAAE,KAVd;AAWID,QAAAA,mBAAmB,EAAE,EAXzB;AAYIE,QAAAA,IAAI,EAAE;AAZV,UAcGjC,IAdH,CAcQ,UAACkC,GAAD,EAAS;AACb1C,QAAAA,OAAO,CAAC2C,OAAR,CAAgB,0BAAhB;AACAC,QAAAA,UAAU,CAAC,YAAM;AACf3C,UAAAA,MAAM,CAAC4C,IAAP,kBAAsBH,GAAG,CAACvC,EAA1B;AACD,SAFS,EAEP,IAFO,CAAV;AAGAC,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEd,SADC;AAEPe,UAAAA,OAAO,EAAE;AAAEV,YAAAA,OAAO,EAAE,0BAAX;AAAuC8C,YAAAA,OAAO,EAAEJ,GAAG,CAACvC;AAApD;AAFF,SAAD,CAAR;AAID,OAvBH,WAwBS,UAAC4C,GAAD,EAAS;AACd/C,QAAAA,OAAO,CAACgD,KAAR,CAAcD,GAAG,CAAC/C,OAAlB;AACD,OA1BH;AA2BD;AACF,GAvEuB;AAAA,CAAjB;AAyEP,OAAO,IAAMiD,WAAW,GAAG,SAAdA,WAAc,CAAC9C,EAAD;AAAA,SAAQ,UAACC,QAAD,EAAc;AAC/CR,IAAAA,EAAE,CAACS,UAAH,CAAc,UAAd,EACG6C,KADH,CACS,SADT,EACoB,IADpB,EAC0B/C,EAD1B,EAEGgD,OAFH,CAEW,QAFX,EAEqB,KAFrB,EAGGC,UAHH,CAGc,UAACC,IAAD,EAAU;AACpB,UAAIC,GAAG,GAAG,EAAV;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACjD,GAAD,EAAS;AACpBgD,QAAAA,GAAG,CAACT,IAAJ,CAAS;AACPhB,UAAAA,QAAQ,EAAEvB,GAAG,CAACK,IAAJ,GAAWkB,QADd;AAEP1B,UAAAA,EAAE,EAAEG,GAAG,CAACH,EAFD;AAGP6B,UAAAA,SAAS,EAAE1B,GAAG,CAACK,IAAJ,GAAWqB,SAHf;AAIPwB,UAAAA,MAAM,EAAElD,GAAG,CAACK,IAAJ,GAAW6C,MAJZ;AAKP1C,UAAAA,KAAK,EAAER,GAAG,CAACK,IAAJ,GAAWG,KALX;AAMP2C,UAAAA,aAAa,EAAEnD,GAAG,CAACK,IAAJ,GAAW8C;AANnB,SAAT;AAQD,OATD;AAUArD,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEf,YADC;AAEPgB,QAAAA,OAAO,EAAE4C;AAFF,OAAD,CAAR;AAID,KAnBH;AAoBD,GArB0B;AAAA,CAApB;AAuBP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACvD,EAAD;AAAA,SAAQ,UAACC,QAAD,EAAc,CAAE,CAAxB;AAAA,CAA3B;AAEP,OAAO,IAAMuD,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAACvD,QAAD,EAAc;AAChDR,IAAAA,EAAE,CAACS,UAAH,CAAc,SAAd,EACG6C,KADH,CACS,UADT,EACqB,IADrB,EAC2BrD,IAAI,CAACyB,WAAL,CAAiBC,GAD5C,EAEGhB,GAFH,GAGGC,IAHH,CAGQ,UAAC6C,IAAD,EAAU;AACd,UAAIO,KAAK,GAAG,EAAZ;AACAP,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACjD,GAAD,EAAS;AACpBsD,QAAAA,KAAK,gCAAOA,KAAP;AAAgBzD,UAAAA,EAAE,EAAEG,GAAG,CAACH;AAAxB,WAA+BG,GAAG,CAACK,IAAJ,EAA/B,GAAL;AACD,OAFD;AAGA,aAAOiD,KAAP;AACD,KATH,EAUGpD,IAVH,CAUQ,UAACoD,KAAD,EAAW;AACfxD,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAElB,gBAAR;AAA0BmB,QAAAA,OAAO,EAAEkD;AAAnC,OAAD,CAAR;AACD,KAZH;AAaD,GAd6B;AAAA,CAAvB;AAgBP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,UAACzD,QAAD,EAAc;AACpDR,IAAAA,EAAE,CAACS,UAAH,CAAc,cAAd,EACG6C,KADH,CACS,UADT,EACqB,IADrB,EAC2BrD,IAAI,CAACyB,WAAL,CAAiBC,GAD5C,EAEGhB,GAFH,GAGGC,IAHH,CAGQ,UAAC6C,IAAD,EAAU;AACd,UAAIS,MAAM,GAAG,EAAb;AACAT,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACjD,GAAD,EAAS;AACpBwD,QAAAA,MAAM,gCAAOA,MAAP,IAAexD,GAAG,CAACK,IAAJ,GAAWmC,OAA1B,EAAN;AACD,OAFD;AAGA,aAAOgB,MAAP;AACD,KATH,EAUGtD,IAVH,CAUQ,UAACuD,KAAD,EAAW;AACf,UAAMC,MAAM,GAAGD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,eACvBtE,EAAE,CAACS,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6B4D,IAA7B,EAAmC3D,GAAnC,EADuB;AAAA,OAAV,CAAf;AAGA4D,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoBxD,IAApB,CAAyB,UAACkC,GAAD,EAAS;AAChC,YAAI2B,QAAQ,GAAG,EAAf;AACA3B,QAAAA,GAAG,CAACa,OAAJ,CACE,UAACjD,GAAD;AAAA,iBAAU+D,QAAQ,gCAAOA,QAAP;AAAmBlE,YAAAA,EAAE,EAAEG,GAAG,CAACH;AAA3B,aAAkCG,GAAG,CAACK,IAAJ,EAAlC,GAAlB;AAAA,SADF;AAGAP,QAAAA,QAAQ,CAAC;AACPK,UAAAA,IAAI,EAAEjB,oBADC;AAEPkB,UAAAA,OAAO,EAAE2D;AAFF,SAAD,CAAR;AAID,OATD;AAUD,KAxBH;AAyBD,GA1BiC;AAAA,CAA3B","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n  ADD_STORY,\r\n} from \"../../utils/constants\";\r\nimport { db, auth, storage } from \"../fbConfig\";\r\nimport firebase from \"firebase\";\r\nimport { message } from \"antd\";\r\nimport Router from \"next/router\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      dispatch({\r\n        type: GET_STORY,\r\n        payload: { ...doc.data(), id: doc.id },\r\n      });\r\n    });\r\n};\r\n\r\nexport const addStory = (data) => (dispatch) => {\r\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\r\n  console.log(data);\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db.collection(\"stories\").add({\r\n          ...data,\r\n          authorId: auth.currentUser.uid,\r\n          authorName: data.authorName,\r\n          oneShot: false,\r\n          banner: url,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          likesCount: 0,\r\n          chaptersCount: 0,\r\n          locationsCount: 0,\r\n          secondaryCharacters: [],\r\n          featured: false,\r\n          note: 0,\r\n        });\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n        }, 1000);\r\n        dispatch({\r\n          type: ADD_STORY,\r\n          payload: { message: \"Story added successfully\", storyId: res.id },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .add({\r\n        ...data,\r\n        authorId: auth.currentUser.uid,\r\n        authorName: data.authorName,\r\n        oneShot: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesCount: 0,\r\n        chaptersCount: 0,\r\n        locationsCount: 0,\r\n        featured: false,\r\n        secondaryCharacters: [],\r\n        note: 0,\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n        }, 1000);\r\n        dispatch({\r\n          type: ADD_STORY,\r\n          payload: { message: \"Story added successfully\", storyId: res.id },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .orderBy(\"number\", \"asc\")\r\n    .onSnapshot((docs) => {\r\n      let arr = [];\r\n      docs.forEach((doc) => {\r\n        arr.push({\r\n          authorId: doc.data().authorId,\r\n          id: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          number: doc.data().number,\r\n          title: doc.data().title,\r\n          commentsCount: doc.data().commentsCount,\r\n        });\r\n      });\r\n      dispatch({\r\n        type: GET_CHAPTERS,\r\n        payload: arr,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getStoryCharacters = (id) => (dispatch) => {};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}