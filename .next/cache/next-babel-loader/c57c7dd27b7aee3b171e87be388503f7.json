{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\common\\\\Select.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Col, Popover, Select, Form } from \"antd\";\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\nvar Option = Select.Option;\n\nvar SelectGroup = function SelectGroup(_ref) {\n  var xs = _ref.xs,\n      lg = _ref.lg,\n      sm = _ref.sm,\n      md = _ref.md,\n      name = _ref.name,\n      options = _ref.options,\n      info = _ref.info,\n      value = _ref.value,\n      onChangeFunc = _ref.onChangeFunc,\n      storyInfo = _ref.storyInfo,\n      type = _ref.type,\n      rules = _ref.rules,\n      form = _ref.form;\n  return __jsx(Col, {\n    xs: xs,\n    sm: sm,\n    md: md,\n    lg: lg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    required: true,\n    label: info ? __jsx(React.Fragment, null, capitalizeFirstLetter(name), __jsx(Popover, {\n      title: info,\n      trigger: \"click\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, __jsx(\"ion-icon\", {\n      name: \"information-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }))) : capitalizeFirstLetter(name),\n    colon: false,\n    name: name,\n    rules: rules,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, type === \"multiple\" ? __jsx(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(val) {\n      return form.setFieldsValue(_defineProperty({}, name, [].concat(_toConsumableArray(form.getFieldValue(name)), [val])));\n    },\n    defaultValue: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (option) {\n    return __jsx(Option, {\n      title: \"boubou\",\n      style: {\n        textTransform: \"capitalize\"\n      },\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, option.name);\n  })) : __jsx(Select, {\n    allowClear: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    onChange: function onChange(val) {\n      return form.setFieldsValue(_defineProperty({}, name, val));\n    },\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, options === null || options === void 0 ? void 0 : options.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (option) {\n    return __jsx(Option, {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, option.name);\n  })))));\n};\n\n_c = SelectGroup;\nexport default SelectGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectGroup\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/common/Select.js"],"names":["Col","Popover","Select","Form","capitalizeFirstLetter","Option","SelectGroup","xs","lg","sm","md","name","options","info","value","onChangeFunc","storyInfo","type","rules","form","width","val","setFieldsValue","getFieldValue","sort","a","b","keyA","keyB","map","option","textTransform"],"mappings":"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","sourcesContent":["import { Col, Popover, Select, Form } from \"antd\";\r\n\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectGroup = ({\r\n  xs,\r\n  lg,\r\n  sm,\r\n  md,\r\n  name,\r\n  options,\r\n  info,\r\n  value,\r\n  onChangeFunc,\r\n  storyInfo,\r\n  type,\r\n  rules,\r\n  form,\r\n}) => {\r\n  return (\r\n    <Col xs={xs} sm={sm} md={md} lg={lg}>\r\n      <Form.Item\r\n        required\r\n        label={\r\n          info ? (\r\n            <>\r\n              {capitalizeFirstLetter(name)}\r\n              <Popover title={info} trigger=\"click\">\r\n                <ion-icon name=\"information-circle\"></ion-icon>\r\n              </Popover>\r\n            </>\r\n          ) : (\r\n            capitalizeFirstLetter(name)\r\n          )\r\n        }\r\n        colon={false}\r\n        name={name}\r\n        rules={rules}\r\n      >\r\n        <div className=\"input-group\">\r\n          {type === \"multiple\" ? (\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              onChange={(val) =>\r\n                form.setFieldsValue({\r\n                  [name]: [...form.getFieldValue(name), val],\r\n                })\r\n              }\r\n              defaultValue={[]}\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    title=\"boubou\"\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          ) : (\r\n            <Select\r\n              allowClear\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Please select\"\r\n              onChange={(val) => form.setFieldsValue({ [name]: val })}\r\n              defaultValue={\"\"}\r\n            >\r\n              {options\r\n                ?.sort((a, b) => {\r\n                  const keyA = a.name,\r\n                    keyB = b.name;\r\n                  // Compare the 2 dates\r\n                  if (keyA < keyB) return -1;\r\n                  if (keyA > keyB) return 1;\r\n                  return 0;\r\n                })\r\n                .map((option) => (\r\n                  <Option\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          )}\r\n        </div>\r\n      </Form.Item>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default SelectGroup;\r\n"]},"metadata":{},"sourceType":"module"}