{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\auth.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { connect } from \"react-redux\";\nimport Login from \"../components/auth/Login\";\nimport Register from \"../components/auth/Register\";\nimport { log_in } from \"../redux/actions/userActions\";\n\nconst auth = ({\n  log_in\n}) => {\n  const {\n    0: isFlipped,\n    1: setIsFlipped\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsFlipped(!isFlipped);\n  };\n\n  console.log(username, email);\n  return __jsx(\"div\", {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Login, {\n    email: email,\n    password: password,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(Register, {\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  log_in\n})(auth);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/auth.js"],"names":["React","useState","ReactCardFlip","connect","Login","Register","log_in","auth","isFlipped","setIsFlipped","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleClick","e","preventDefault","console","log","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,MAAT,QAAuB,8BAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAgB;AAC3B,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACe,eAAD;AAAA,OAAkBC;AAAlB,MAAwChB,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMiB,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAKAa,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAsBE,KAAtB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAEJ,SAA1B;AAAqC,IAAA,aAAa,EAAC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,KAAd;AAAqB,IAAA,QAAQ,EAAEE,QAA/B;AAAyC,IAAA,WAAW,EAAEI,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEA,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAtBD;;AAwBA,MAAMK,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAEA,eAAerB,OAAO,CAACoB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAqCC,IAArC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"../components/auth/Login\";\r\nimport Register from \"../components/auth/Register\";\r\nimport { log_in } from \"../redux/actions/userActions\";\r\n\r\nconst auth = ({ log_in }) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  console.log(username, email);\r\n\r\n  return (\r\n    <div className=\"authentication\">\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <Login email={email} password={password} handleClick={handleClick} />\r\n        <Register handleClick={handleClick} />\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { log_in })(auth);\r\n"]},"metadata":{},"sourceType":"module"}