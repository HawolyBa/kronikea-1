{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport StoryForm from \"../../components/forms/StoryForm\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\n\nconst NewStory = props => {\n  const [form] = Form.useForm();\n  const auth = useAuth();\n  const router = useRouter();\n  const [mature, setMature] = React.useState(false);\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      mature\n    });\n  }, [mature]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      public: visibility\n    });\n  }, [visibility]);\n  React.useEffect(() => {\n    if (props.storyId) {\n      router.push(`/story/${props.storyId}`);\n    }\n  }, [props.storyId]);\n  React.useEffect(() => {\n    if (props.confirmMessage) {\n      message.success(props.confirmMessage);\n    }\n  }, [props.confirmMessage]);\n\n  const submit = values => {\n    delete values.currentChar;\n    if (typeof values.banner === null) values.banner = \"\";\n    if (!values.banner) delete values.imageCopyright;\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      userImage: auth.user.image,\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\"\n    }));\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user && auth.user.emailVerified,\n    type: \"verify\",\n    verifyEmail: auth.verifyEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Add a new story\"), __jsx(StoryForm, {\n    type: \"add\",\n    submit: submit,\n    characters: props.characters,\n    loading: props.loading,\n    storyId: props.storyId,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  confirmMessage: state.stories.message,\n  storyId: state.stories.storyId,\n  loading: state.stories.loadingStory\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  addStory\n})(NewStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Form","message","connect","useRouter","useAuth","getUserCharacters","addStory","StoryForm","RedirectComp","LoadingScreen","NewStory","props","form","useForm","auth","router","mature","setMature","useState","visibility","setVisibility","useEffect","user","uid","setFieldsValue","public","storyId","push","confirmMessage","success","submit","values","currentChar","banner","imageCopyright","authorName","username","userImage","image","getFieldValue","isLoading","emailVerified","verifyEmail","characters","loading","mapStateToProps","state","userCharacters","stories","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport StoryForm from \"../../components/forms/StoryForm\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\n\r\nconst NewStory = (props) => {\r\n  const [form] = Form.useForm();\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ mature });\r\n  }, [mature]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.storyId) {\r\n      router.push(`/story/${props.storyId}`);\r\n    }\r\n  }, [props.storyId]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.confirmMessage) {\r\n      message.success(props.confirmMessage);\r\n    }\r\n  }, [props.confirmMessage]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    if (typeof values.banner === null) values.banner = \"\";\r\n    if (!values.banner) delete values.imageCopyright;\r\n\r\n    props.addStory({\r\n      ...values,\r\n      authorName: auth.user.username,\r\n      userImage: auth.user.image,\r\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <RedirectComp\r\n          condition={auth.user && auth.user.emailVerified}\r\n          type=\"verify\"\r\n          verifyEmail={auth.verifyEmail}\r\n        >\r\n          <div className=\"new-story custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new story</h2>\r\n              <StoryForm\r\n                type=\"add\"\r\n                submit={submit}\r\n                characters={props.characters}\r\n                loading={props.loading}\r\n                storyId={props.storyId}\r\n                form={form}\r\n                mature={mature}\r\n                setMature={setMature}\r\n                visibility={visibility}\r\n                setVisibility={setVisibility}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}