{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\[chapid]\\\\edit.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, message } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../../hooks/userHooks\";\nimport { getStoryCharacters, getChapter, editChapter, getUserLocations } from \"../../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\nimport { arr_diff } from \"../../../../../utils/helpers\";\n\nconst EditChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    locations,\n    loadingChapter,\n    chapter,\n    chapterExists,\n    editMessage,\n    story,\n    secondaryCharacters\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [body, setBody] = React.useState(\"\");\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n    props.getChapter(router.query.id, router.query.chapid);\n  }, [router.query.id, router.query.chapid]);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    if (editMessage) {\n      props.getStory(router.query.id);\n      props.getChapter(router.query.id, router.query.chapid);\n      message.success(editMessage);\n    }\n  }, [editMessage]);\n\n  const submit = values => {\n    delete values.currentChar;\n    delete values.currentLoc;\n    const originArr = chapter.characters; // Array d'ids\n\n    let secondaryCharactersArr = [...secondaryCharacters]; // Array d'objets contenant les perso et le nombre de fois\n\n    let charInChapter = values.characters.filter(c => !story.mainArr.includes(c)); // Array contenant les nouveaux perso moins les mains\n\n    let newArr = arr_diff(originArr, charInChapter); // Array contenant tous les changements à traiter\n    // Vérifie si le perso est nouvellement ajouté ou retiré\n\n    newArr.forEach(char => {\n      const index = secondaryCharactersArr.findIndex(c => c.id === char); // Vérifier si rajouté ou retiré\n\n      if (!originArr.includes(char)) {\n        // Char n'existe pas\n        if (index === -1) {\n          secondaryCharactersArr.push({\n            id: char,\n            times: 1\n          });\n        } else {\n          // char existe donc on ajoute time 1\n          secondaryCharactersArr[index].times = secondaryCharactersArr[index].times + 1;\n        }\n      } else {\n        // char retiré donc on enlève time 1\n        secondaryCharactersArr[index].times = secondaryCharactersArr[index].times - 1;\n      }\n    }); // Retirer les objets dont le times =0\n\n    secondaryCharactersArr = secondaryCharactersArr.filter(c => c.times > 0);\n    props.editChapter(_objectSpread(_objectSpread({}, values), {}, {\n      body,\n      status: values.status === \"true\"\n    }), router.query.id, router.query.chapid, secondaryCharactersArr);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: chapterExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === chapter.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    body: body,\n    setBody: setBody,\n    type: \"edit\",\n    loadingChapter: loadingChapter,\n    loading: loading,\n    chapter: chapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  chapter: state.stories.chapter,\n  secondaryCharacters: state.characters.secondaryCharacters,\n  characters: state.characters.userCharacters,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations,\n  loadingChapter: state.stories.loadingChapter,\n  chapterExists: state.stories.chapterExists,\n  editMessage: state.stories.message\n});\n\nexport default connect(mapStateToProps, {\n  getChapter,\n  getUserCharacters,\n  getUserLocations,\n  editChapter,\n  getStoryCharacters\n})(EditChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/[chapid]/edit.js"],"names":["React","connect","Form","message","useRouter","useAuth","getStoryCharacters","getChapter","editChapter","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","arr_diff","EditChapter","props","form","useForm","characters","loading","locations","loadingChapter","chapter","chapterExists","editMessage","story","secondaryCharacters","auth","router","body","setBody","useState","useEffect","getStory","query","id","chapid","user","uid","success","submit","values","currentChar","currentLoc","originArr","secondaryCharactersArr","charInChapter","filter","c","mainArr","includes","newArr","forEach","char","index","findIndex","push","times","status","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SACEC,kBADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,gBAJF,QAKO,6CALP;AAMA,SAASC,iBAAT,QAAkC,gDAAlC;AAEA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,IAAD,IAASf,IAAI,CAACgB,OAAL,EAAf;AACA,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,cAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,KARI;AASJC,IAAAA;AATI,MAUFX,KAVJ;AAWA,QAAMY,IAAI,GAAGvB,OAAO,EAApB;AACA,QAAMwB,MAAM,GAAGzB,SAAS,EAAxB;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB/B,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAxB;AAEAhC,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpBjB,IAAAA,KAAK,CAACkB,QAAN,CAAeL,MAAM,CAACM,KAAP,CAAaC,EAA5B;AACApB,IAAAA,KAAK,CAACT,UAAN,CAAiBsB,MAAM,CAACM,KAAP,CAAaC,EAA9B,EAAkCP,MAAM,CAACM,KAAP,CAAaE,MAA/C;AACD,GAHD,EAGG,CAACR,MAAM,CAACM,KAAP,CAAaC,EAAd,EAAkBP,MAAM,CAACM,KAAP,CAAaE,MAA/B,CAHH;AAKArC,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpB,QAAIL,IAAI,CAACU,IAAT,EAAe;AACbtB,MAAAA,KAAK,CAACN,iBAAN,CAAwBkB,IAAI,CAACU,IAAL,CAAUC,GAAlC;AACAvB,MAAAA,KAAK,CAACP,gBAAN,CAAuBmB,IAAI,CAACU,IAAL,CAAUC,GAAjC;AACD;AACF,GALD,EAKG,CAACX,IAAD,CALH;AAOA5B,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AACpB,QAAIR,WAAJ,EAAiB;AACfT,MAAAA,KAAK,CAACkB,QAAN,CAAeL,MAAM,CAACM,KAAP,CAAaC,EAA5B;AACApB,MAAAA,KAAK,CAACT,UAAN,CAAiBsB,MAAM,CAACM,KAAP,CAAaC,EAA9B,EAAkCP,MAAM,CAACM,KAAP,CAAaE,MAA/C;AACAlC,MAAAA,OAAO,CAACqC,OAAR,CAAgBf,WAAhB;AACD;AACF,GAND,EAMG,CAACA,WAAD,CANH;;AAQA,QAAMgB,MAAM,GAAIC,MAAD,IAAY;AACzB,WAAOA,MAAM,CAACC,WAAd;AACA,WAAOD,MAAM,CAACE,UAAd;AAEA,UAAMC,SAAS,GAAGtB,OAAO,CAACJ,UAA1B,CAJyB,CAIa;;AACtC,QAAI2B,sBAAsB,GAAG,CAAC,GAAGnB,mBAAJ,CAA7B,CALyB,CAK8B;;AACvD,QAAIoB,aAAa,GAAGL,MAAM,CAACvB,UAAP,CAAkB6B,MAAlB,CACjBC,CAAD,IAAO,CAACvB,KAAK,CAACwB,OAAN,CAAcC,QAAd,CAAuBF,CAAvB,CADU,CAApB,CANyB,CAQtB;;AACH,QAAIG,MAAM,GAAGtC,QAAQ,CAAC+B,SAAD,EAAYE,aAAZ,CAArB,CATyB,CASwB;AAEjD;;AACAK,IAAAA,MAAM,CAACC,OAAP,CAAgBC,IAAD,IAAU;AACvB,YAAMC,KAAK,GAAGT,sBAAsB,CAACU,SAAvB,CAAkCP,CAAD,IAAOA,CAAC,CAACb,EAAF,KAASkB,IAAjD,CAAd,CADuB,CAEvB;;AACA,UAAI,CAACT,SAAS,CAACM,QAAV,CAAmBG,IAAnB,CAAL,EAA+B;AAC7B;AACA,YAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBT,UAAAA,sBAAsB,CAACW,IAAvB,CAA4B;AAAErB,YAAAA,EAAE,EAAEkB,IAAN;AAAYI,YAAAA,KAAK,EAAE;AAAnB,WAA5B;AACD,SAFD,MAEO;AACL;AACAZ,UAAAA,sBAAsB,CAACS,KAAD,CAAtB,CAA8BG,KAA9B,GACEZ,sBAAsB,CAACS,KAAD,CAAtB,CAA8BG,KAA9B,GAAsC,CADxC;AAED;AACF,OATD,MASO;AACL;AACAZ,QAAAA,sBAAsB,CAACS,KAAD,CAAtB,CAA8BG,KAA9B,GACEZ,sBAAsB,CAACS,KAAD,CAAtB,CAA8BG,KAA9B,GAAsC,CADxC;AAED;AACF,KAjBD,EAZyB,CA+BzB;;AACAZ,IAAAA,sBAAsB,GAAGA,sBAAsB,CAACE,MAAvB,CAA+BC,CAAD,IAAOA,CAAC,CAACS,KAAF,GAAU,CAA/C,CAAzB;AAEA1C,IAAAA,KAAK,CAACR,WAAN,iCAEOkC,MAFP;AAGIZ,MAAAA,IAHJ;AAII6B,MAAAA,MAAM,EAAEjB,MAAM,CAACiB,MAAP,KAAkB;AAJ9B,QAME9B,MAAM,CAACM,KAAP,CAAaC,EANf,EAOEP,MAAM,CAACM,KAAP,CAAaE,MAPf,EAQES,sBARF;AAUD,GA5CD;;AA8CA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAE1B,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAEI,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,SAAS,EAAEI,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACU,IAAL,CAAUC,GAAV,KAAkBhB,OAAO,CAACqC,QAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,MAAC,WAAD;AACE,IAAA,MAAM,EAAEnB,MADV;AAEE,IAAA,IAAI,EAAExB,IAFR;AAGE,IAAA,UAAU,EAAEE,UAHd;AAIE,IAAA,SAAS,EAAEE,SAJb;AAKE,IAAA,IAAI,EAAES,IALR;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,IAAI,EAAC,MAPP;AAQE,IAAA,cAAc,EAAET,cARlB;AASE,IAAA,OAAO,EAAEF,OATX;AAUE,IAAA,OAAO,EAAEG,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAJF,CADF,CADF,CADF;AA4BD,CA/GD;;AAiHA,MAAMsC,eAAe,GAAIC,KAAD,KAAY;AAClCvC,EAAAA,OAAO,EAAEuC,KAAK,CAACC,OAAN,CAAcxC,OADW;AAElCI,EAAAA,mBAAmB,EAAEmC,KAAK,CAAC3C,UAAN,CAAiBQ,mBAFJ;AAGlCR,EAAAA,UAAU,EAAE2C,KAAK,CAAC3C,UAAN,CAAiB6C,cAHK;AAIlC5C,EAAAA,OAAO,EAAE0C,KAAK,CAACC,OAAN,CAAc3C,OAJW;AAKlCC,EAAAA,SAAS,EAAEyC,KAAK,CAACC,OAAN,CAAcE,aALS;AAMlC3C,EAAAA,cAAc,EAAEwC,KAAK,CAACC,OAAN,CAAczC,cANI;AAOlCE,EAAAA,aAAa,EAAEsC,KAAK,CAACC,OAAN,CAAcvC,aAPK;AAQlCC,EAAAA,WAAW,EAAEqC,KAAK,CAACC,OAAN,CAAc5D;AARO,CAAZ,CAAxB;;AAWA,eAAeF,OAAO,CAAC4D,eAAD,EAAkB;AACtCtD,EAAAA,UADsC;AAEtCG,EAAAA,iBAFsC;AAGtCD,EAAAA,gBAHsC;AAItCD,EAAAA,WAJsC;AAKtCF,EAAAA;AALsC,CAAlB,CAAP,CAMZS,WANY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, message } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../../hooks/userHooks\";\r\nimport {\r\n  getStoryCharacters,\r\n  getChapter,\r\n  editChapter,\r\n  getUserLocations,\r\n} from \"../../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\r\nimport { arr_diff } from \"../../../../../utils/helpers\";\r\n\r\nconst EditChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const {\r\n    characters,\r\n    loading,\r\n    locations,\r\n    loadingChapter,\r\n    chapter,\r\n    chapterExists,\r\n    editMessage,\r\n    story,\r\n    secondaryCharacters,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const [body, setBody] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n    props.getChapter(router.query.id, router.query.chapid);\r\n  }, [router.query.id, router.query.chapid]);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (editMessage) {\r\n      props.getStory(router.query.id);\r\n      props.getChapter(router.query.id, router.query.chapid);\r\n      message.success(editMessage);\r\n    }\r\n  }, [editMessage]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    delete values.currentLoc;\r\n\r\n    const originArr = chapter.characters; // Array d'ids\r\n    let secondaryCharactersArr = [...secondaryCharacters]; // Array d'objets contenant les perso et le nombre de fois\r\n    let charInChapter = values.characters.filter(\r\n      (c) => !story.mainArr.includes(c)\r\n    ); // Array contenant les nouveaux perso moins les mains\r\n    let newArr = arr_diff(originArr, charInChapter); // Array contenant tous les changements à traiter\r\n\r\n    // Vérifie si le perso est nouvellement ajouté ou retiré\r\n    newArr.forEach((char) => {\r\n      const index = secondaryCharactersArr.findIndex((c) => c.id === char);\r\n      // Vérifier si rajouté ou retiré\r\n      if (!originArr.includes(char)) {\r\n        // Char n'existe pas\r\n        if (index === -1) {\r\n          secondaryCharactersArr.push({ id: char, times: 1 });\r\n        } else {\r\n          // char existe donc on ajoute time 1\r\n          secondaryCharactersArr[index].times =\r\n            secondaryCharactersArr[index].times + 1;\r\n        }\r\n      } else {\r\n        // char retiré donc on enlève time 1\r\n        secondaryCharactersArr[index].times =\r\n          secondaryCharactersArr[index].times - 1;\r\n      }\r\n    });\r\n\r\n    // Retirer les objets dont le times =0\r\n    secondaryCharactersArr = secondaryCharactersArr.filter((c) => c.times > 0);\r\n\r\n    props.editChapter(\r\n      {\r\n        ...values,\r\n        body,\r\n        status: values.status === \"true\",\r\n      },\r\n      router.query.id,\r\n      router.query.chapid,\r\n      secondaryCharactersArr\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={chapterExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === chapter.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n                body={body}\r\n                setBody={setBody}\r\n                type=\"edit\"\r\n                loadingChapter={loadingChapter}\r\n                loading={loading}\r\n                chapter={chapter}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  chapter: state.stories.chapter,\r\n  secondaryCharacters: state.characters.secondaryCharacters,\r\n  characters: state.characters.userCharacters,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n  loadingChapter: state.stories.loadingChapter,\r\n  chapterExists: state.stories.chapterExists,\r\n  editMessage: state.stories.message,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getChapter,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n  editChapter,\r\n  getStoryCharacters,\r\n})(EditChapter);\r\n"]},"metadata":{},"sourceType":"module"}