{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_CHARACTERS, GET_FAVORITE_CHARACTERS, ADD_CHARACTER } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nexport var addCharacter = function addCharacter(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_CHARACTER,\n      payload: {\n        loading: true\n      }\n    });\n    var imageName = \"\".concat(data.firstname.toLowerCase()).concat(data.lastname && \"_\").concat(data.lastname && data.lastname.toLowerCase());\n\n    if (typeof data.banner === \"object\") {\n      storage.ref(\"\".concat(auth.currentUser.uid, \"/\").concat(imageName)).put(data.banner).then(function () {\n        return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n      }).then(function (url) {\n        return db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n          authorId: auth.currentUser.uid,\n          authorName: data.authorName,\n          oneShot: false,\n          banner: url,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          likesCount: 0,\n          chaptersCount: 0,\n          locationsCount: 0,\n          secondaryCharacters: [],\n          featured: false,\n          note: 0\n        }));\n      }).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n          dispatch({\n            type: ADD_STORY,\n            payload: {\n              message: \"Story added successfully\",\n              storyId: res.id,\n              loading: false\n            }\n          });\n        }, 1000);\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    } else {\n      db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n        authorId: auth.currentUser.uid,\n        authorName: data.authorName,\n        oneShot: false,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        likesCount: 0,\n        chaptersCount: 0,\n        locationsCount: 0,\n        featured: false,\n        secondaryCharacters: [],\n        note: 0\n      })).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n          dispatch({\n            type: ADD_STORY,\n            payload: {\n              message: \"Story added successfully\",\n              storyId: res.id,\n              loading: false\n            }\n          });\n        }, 1000);\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  };\n};\nexport var getUserCharacters = function getUserCharacters() {\n  return function (dispatch) {\n    db.collection(\"characters\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_CHARACTERS,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteCharacters = function getFavoriteCharacters() {\n  return function (dispatch) {\n    db.collection(\"charactersLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().characterId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"characters\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_CHARACTERS,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/charactersActions.js"],"names":["GET_USER_CHARACTERS","GET_FAVORITE_CHARACTERS","ADD_CHARACTER","db","auth","addCharacter","data","dispatch","type","payload","loading","imageName","firstname","toLowerCase","lastname","banner","storage","ref","currentUser","uid","put","then","child","getDownloadURL","url","collection","add","authorId","authorName","oneShot","createdAt","firebase","firestore","FieldValue","serverTimestamp","likesCount","chaptersCount","locationsCount","secondaryCharacters","featured","note","res","message","success","setTimeout","Router","push","id","ADD_STORY","storyId","err","error","getUserCharacters","where","get","docs","items","forEach","doc","getFavoriteCharacters","favArr","characterId","users","result","map","user","Promise","all","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_CHARACTERS,\r\n  GET_FAVORITE_CHARACTERS,\r\n  ADD_CHARACTER,\r\n} from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\n\r\nexport const addCharacter = (data) => (dispatch) => {\r\n  dispatch({ type: ADD_CHARACTER, payload: { loading: true } });\r\n  const imageName = `${data.firstname.toLowerCase()}${data.lastname && \"_\"}${\r\n    data.lastname && data.lastname.toLowerCase()\r\n  }`;\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db.collection(\"stories\").add({\r\n          ...data,\r\n          authorId: auth.currentUser.uid,\r\n          authorName: data.authorName,\r\n          oneShot: false,\r\n          banner: url,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          likesCount: 0,\r\n          chaptersCount: 0,\r\n          locationsCount: 0,\r\n          secondaryCharacters: [],\r\n          featured: false,\r\n          note: 0,\r\n        });\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .add({\r\n        ...data,\r\n        authorId: auth.currentUser.uid,\r\n        authorName: data.authorName,\r\n        oneShot: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesCount: 0,\r\n        chaptersCount: 0,\r\n        locationsCount: 0,\r\n        featured: false,\r\n        secondaryCharacters: [],\r\n        note: 0,\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getUserCharacters = () => (dispatch) => {\r\n  db.collection(\"characters\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_CHARACTERS, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteCharacters = () => (dispatch) => {\r\n  db.collection(\"charactersLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().characterId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"characters\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_CHARACTERS,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}