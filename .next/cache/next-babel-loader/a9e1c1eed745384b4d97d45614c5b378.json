{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, Divider, Row, Col } from \"antd\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory, getUserLocations } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\nimport CharacterSelector from \"../../../../components/forms/CharacterSelector\";\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\n\nconst NewChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    storyExists,\n    story,\n    locations\n  } = props;\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  const auth = useAuth();\n  const router = useRouter();\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n  }, []);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n  const [value, setValue] = React.useState([{\n    type: \"paragraph\",\n    children: [{\n      text: \"A line of text in a paragraph.\"\n    }]\n  }]);\n\n  const submit = values => {\n    console.log(values);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  story: state.stories.story,\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations\n});\n\nexport default connect(mapStateToProps, {\n  getStory,\n  getUserCharacters,\n  getUserLocations\n})(NewChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","connect","Form","Divider","Row","Col","createEditor","Slate","Editable","withReact","useRouter","useAuth","getStory","getUserLocations","getUserCharacters","ChapterForm","CharacterSelector","LoadingScreen","RedirectComp","NewChapter","props","form","useForm","characters","loading","storyExists","story","locations","editor","useMemo","auth","router","useEffect","query","id","user","uid","value","setValue","useState","type","children","text","submit","values","console","log","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Divider, Row, Col } from \"antd\";\r\nimport { createEditor } from \"slate\";\r\nimport { Slate, Editable, withReact } from \"slate-react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  getUserLocations,\r\n} from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\nimport CharacterSelector from \"../../../../components/forms/CharacterSelector\";\r\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\r\n\r\nconst NewChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { characters, loading, storyExists, story, locations } = props;\r\n  const editor = React.useMemo(() => withReact(createEditor()), []);\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const [value, setValue] = React.useState([\r\n    {\r\n      type: \"paragraph\",\r\n      children: [{ text: \"A line of text in a paragraph.\" }],\r\n    },\r\n  ]);\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n              />\r\n              {/* <Slate\r\n              editor={editor}\r\n              value={value}\r\n              onChange={(newValue) => setValue(newValue)}\r\n            >\r\n              <Editable\r\n                onKeyDown={(event) => {\r\n                  if (event.key === \"&\") {\r\n                    event.preventDefault();\r\n                    // editor.insertText(\"and\");\r\n                  }\r\n                }}\r\n              />\r\n            </Slate> */}\r\n              <Divider />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStory,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n})(NewChapter);\r\n"]},"metadata":{},"sourceType":"module"}