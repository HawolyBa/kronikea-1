{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\location\\\\[id]\\\\edit.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, message } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { getLocation, editLocation, getUserStories, deleteLocation } from \"../../../redux/actions/storiesActions\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport LocationForm from \"../../../components/forms/LocationForm\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\n\nconst EditLocation = props => {\n  const {\n    stories,\n    loadingLoc,\n    actionMessage,\n    location,\n    loading,\n    locationExists,\n    deleted\n  } = props;\n  const [form] = Form.useForm();\n  const auth = useAuth();\n  const router = useRouter();\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserStories();\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    if (deleted) {\n      router.push(\"/profile\");\n    }\n  }, [deleted]);\n  React.useEffect(() => {\n    props.getLocation(router.query.id);\n  }, [router.query.id]);\n  React.useEffect(() => {\n    if (actionMessage) {\n      message.success(actionMessage);\n    }\n  }, [actionMessage]);\n\n  const submit = values => {\n    props.editLocation(values);\n  };\n\n  console.log(location);\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: locationExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === location.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"new-location custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Edit location: \", location.name), __jsx(LocationForm, {\n    form: form,\n    location: location,\n    stories: stories,\n    type: \"edit\",\n    loadingLoc: loadingLoc,\n    submit: submit,\n    deleteLocation: props.deleteLocation,\n    initialValues: {\n      name: location.name,\n      storyId: location.storyId,\n      description: location.description,\n      image: location.image,\n      imageCopyright: location.imageCopyright\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  stories: state.stories.userStories,\n  location: state.stories.location,\n  loading: state.stories.loading,\n  actionMessage: state.stories.message,\n  loadingLoc: state.stories.loadingLoc,\n  locationExists: state.stories.locationExists,\n  deleted: state.stories.deleted\n});\n\nexport default connect(mapStateToProps, {\n  getLocation,\n  editLocation,\n  getUserStories,\n  deleteLocation\n})(EditLocation);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/location/[id]/edit.js"],"names":["React","connect","Form","message","useRouter","getLocation","editLocation","getUserStories","deleteLocation","useAuth","LocationForm","RedirectComp","LoadingScreen","EditLocation","props","stories","loadingLoc","actionMessage","location","loading","locationExists","deleted","form","useForm","auth","router","useEffect","user","push","query","id","success","submit","values","console","log","uid","authorId","name","storyId","description","image","imageCopyright","mapStateToProps","state","userStories"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, message } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport {\r\n  getLocation,\r\n  editLocation,\r\n  getUserStories,\r\n  deleteLocation,\r\n} from \"../../../redux/actions/storiesActions\";\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\n\r\nimport LocationForm from \"../../../components/forms/LocationForm\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\n\r\nconst EditLocation = (props) => {\r\n  const {\r\n    stories,\r\n    loadingLoc,\r\n    actionMessage,\r\n    location,\r\n    loading,\r\n    locationExists,\r\n    deleted,\r\n  } = props;\r\n  const [form] = Form.useForm();\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserStories();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (deleted) {\r\n      router.push(\"/profile\");\r\n    }\r\n  }, [deleted]);\r\n\r\n  React.useEffect(() => {\r\n    props.getLocation(router.query.id);\r\n  }, [router.query.id]);\r\n\r\n  React.useEffect(() => {\r\n    if (actionMessage) {\r\n      message.success(actionMessage);\r\n    }\r\n  }, [actionMessage]);\r\n\r\n  const submit = (values) => {\r\n    props.editLocation(values);\r\n  };\r\n  console.log(location);\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={locationExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === location.authorId}\r\n        >\r\n          <div className=\"new-location custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Edit location: {location.name}</h2>\r\n              <LocationForm\r\n                form={form}\r\n                location={location}\r\n                stories={stories}\r\n                type=\"edit\"\r\n                loadingLoc={loadingLoc}\r\n                submit={submit}\r\n                deleteLocation={props.deleteLocation}\r\n                initialValues={{\r\n                  name: location.name,\r\n                  storyId: location.storyId,\r\n                  description: location.description,\r\n                  image: location.image,\r\n                  imageCopyright: location.imageCopyright,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.userStories,\r\n  location: state.stories.location,\r\n  loading: state.stories.loading,\r\n  actionMessage: state.stories.message,\r\n  loadingLoc: state.stories.loadingLoc,\r\n  locationExists: state.stories.locationExists,\r\n  deleted: state.stories.deleted,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getLocation,\r\n  editLocation,\r\n  getUserStories,\r\n  deleteLocation,\r\n})(EditLocation);\r\n"]},"metadata":{},"sourceType":"module"}