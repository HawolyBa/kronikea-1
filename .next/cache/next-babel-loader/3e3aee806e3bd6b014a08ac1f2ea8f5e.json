{"ast":null,"code":"import React from \"react\";\nimport { auth } from \"../redux/fbConfig\";\nexport const userContext = /*#__PURE__*/React.createContext({\n  user: null\n});\nexport const useSession = () => {\n  const {\n    user\n  } = useContext(userContext);\n  return user;\n};\nexport const useAuth = () => {\n  const [state, setState] = React.useState(() => {\n    const user = auth.currentUser;\n    return {\n      initializing: !user,\n      user\n    };\n  });\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user\n    });\n  }\n\n  React.useEffect(() => {\n    // listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged(onChange); // unsubscribe to the listener when unmounting\n\n    return () => unsubscribe();\n  }, []);\n  return state;\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/userHooks.js"],"names":["React","auth","userContext","createContext","user","useSession","useContext","useAuth","state","setState","useState","currentUser","initializing","onChange","useEffect","unsubscribe","onAuthStateChanged"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,IAAI,EAAE;AADuC,CAApB,CAApB;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM;AAAED,IAAAA;AAAF,MAAWE,UAAU,CAACJ,WAAD,CAA3B;AACA,SAAOE,IAAP;AACD,CAHM;AAKP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,MAAM;AAC7C,UAAMN,IAAI,GAAGH,IAAI,CAACU,WAAlB;AACA,WAAO;AAAEC,MAAAA,YAAY,EAAE,CAACR,IAAjB;AAAuBA,MAAAA;AAAvB,KAAP;AACD,GAHyB,CAA1B;;AAIA,WAASS,QAAT,CAAkBT,IAAlB,EAAwB;AACtBK,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,YAAY,EAAE,KAAhB;AAAuBR,MAAAA;AAAvB,KAAD,CAAR;AACD;;AAEDJ,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMC,WAAW,GAAGd,IAAI,CAACe,kBAAL,CAAwBH,QAAxB,CAApB,CAFoB,CAGpB;;AACA,WAAO,MAAME,WAAW,EAAxB;AACD,GALD,EAKG,EALH;AAOA,SAAOP,KAAP;AACD,CAjBM","sourcesContent":["import React from \"react\";\r\nimport { auth } from \"../redux/fbConfig\";\r\n\r\nexport const userContext = React.createContext({\r\n  user: null,\r\n});\r\n\r\nexport const useSession = () => {\r\n  const { user } = useContext(userContext);\r\n  return user;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const [state, setState] = React.useState(() => {\r\n    const user = auth.currentUser;\r\n    return { initializing: !user, user };\r\n  });\r\n  function onChange(user) {\r\n    setState({ initializing: false, user });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // listen for auth state changes\r\n    const unsubscribe = auth.onAuthStateChanged(onChange);\r\n    // unsubscribe to the listener when unmounting\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}