{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\Relatives.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Form, Select, Input, Divider } from \"antd\";\nimport CharacterCard, { CharacterGrid } from \"../common/CharacterCard\";\n\nconst Relatives = ({\n  characters\n}) => {\n  const [relations, setRelations] = React.useState([]);\n  const [currentChar, setCurrentChar] = React.useState(\"\");\n  const [currentRel, setCurrentRel] = React.useState(\"\");\n  const [selectedCharacters, setSelectedCharacters] = React.useState([]);\n\n  const addRelation = () => {\n    let newRelations = [...relations];\n\n    if (currentChar && currentRel) {\n      newRelations = [...newRelations, {\n        character: currentChar,\n        relation: currentRel\n      }];\n    }\n\n    setRelations(newRelations);\n    setSelectedCharacters([...selectedCharacters, _objectSpread(_objectSpread({}, characters.find(c => c.id === currentChar)), {}, {\n      relation: currentRel\n    })]);\n    setCurrentChar(\"\");\n    setCurrentRel(\"\");\n  };\n\n  console.log(selectedCharacters);\n  return __jsx(Form.Item, {\n    label: \"Relationships\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    align: \"bottom\",\n    gutter: [24, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: 11,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    onChange: val => setCurrentChar(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Option, {\n    value: \"none\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Select a character\"), characters === null || characters === void 0 ? void 0 : characters.map(c => __jsx(Option, {\n    key: c.id,\n    value: c.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, `${c.firstname} ${c.lastname}`)))), __jsx(Col, {\n    md: 11,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    onChange: e => setCurrentRel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    md: 2,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"add-btn\",\n    onClick: addRelation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Add\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, selectedCharacters === null || selectedCharacters === void 0 ? void 0 : selectedCharacters.map(rel => __jsx(Col, {\n    lg: 4,\n    md: 6,\n    sm: 8,\n    key: rel.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(CharacterCard, {\n    type: \"add\",\n    character: rel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Relatives;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/Relatives.js"],"names":["Row","Col","Form","Select","Input","Divider","CharacterCard","CharacterGrid","Relatives","characters","relations","setRelations","React","useState","currentChar","setCurrentChar","currentRel","setCurrentRel","selectedCharacters","setSelectedCharacters","addRelation","newRelations","character","relation","find","c","id","console","log","val","map","firstname","lastname","e","target","value","rel"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,MAAvD;AAEA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,yBAA7C;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BL,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CP,KAAK,CAACC,QAAN,CAAe,EAAf,CAApD;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAIC,YAAY,GAAG,CAAC,GAAGX,SAAJ,CAAnB;;AACA,QAAII,WAAW,IAAIE,UAAnB,EAA+B;AAC7BK,MAAAA,YAAY,GAAG,CACb,GAAGA,YADU,EAEb;AAAEC,QAAAA,SAAS,EAAER,WAAb;AAA0BS,QAAAA,QAAQ,EAAEP;AAApC,OAFa,CAAf;AAID;;AAEDL,IAAAA,YAAY,CAACU,YAAD,CAAZ;AACAF,IAAAA,qBAAqB,CAAC,CACpB,GAAGD,kBADiB,kCAGfT,UAAU,CAACe,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASZ,WAAhC,CAHe;AAIlBS,MAAAA,QAAQ,EAAEP;AAJQ,OAAD,CAArB;AAOAD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAnBD;;AAqBAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,kBAAZ;AAEA,SACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGW,GAAD,IAASd,cAAc,CAACc,GAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIGpB,UAJH,aAIGA,UAJH,uBAIGA,UAAU,CAAEqB,GAAZ,CAAiBL,CAAD,IACf,MAAC,MAAD;AACE,IAAA,GAAG,EAAEA,CAAC,CAACC,EADT;AAEE,IAAA,KAAK,EAAED,CAAC,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,GAAED,CAAC,CAACM,SAAU,IAAGN,CAAC,CAACO,QAAS,EAH/B,CADD,CAJH,CADF,CADF,EAcE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAGC,CAAD,IAAOhB,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,EAiBE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEf,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAjBF,CADF,EAwBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EAyBE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,kBADH,aACGA,kBADH,uBACGA,kBAAkB,CAAEY,GAApB,CAAyBM,GAAD,IACvB,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,GAAG,EAAEA,GAAG,CAACV,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAC,KAApB;AAA0B,IAAA,SAAS,EAAEU,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAzBF,CADF;AAmCD,CAhED;;AAkEA,eAAe5B,SAAf","sourcesContent":["import { Row, Col, Form, Select, Input, Divider } from \"antd\";\r\n\r\nimport CharacterCard, { CharacterGrid } from \"../common/CharacterCard\";\r\n\r\nconst Relatives = ({ characters }) => {\r\n  const [relations, setRelations] = React.useState([]);\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n  const [currentRel, setCurrentRel] = React.useState(\"\");\r\n  const [selectedCharacters, setSelectedCharacters] = React.useState([]);\r\n\r\n  const addRelation = () => {\r\n    let newRelations = [...relations];\r\n    if (currentChar && currentRel) {\r\n      newRelations = [\r\n        ...newRelations,\r\n        { character: currentChar, relation: currentRel },\r\n      ];\r\n    }\r\n\r\n    setRelations(newRelations);\r\n    setSelectedCharacters([\r\n      ...selectedCharacters,\r\n      {\r\n        ...characters.find((c) => c.id === currentChar),\r\n        relation: currentRel,\r\n      },\r\n    ]);\r\n    setCurrentChar(\"\");\r\n    setCurrentRel(\"\");\r\n  };\r\n\r\n  console.log(selectedCharacters);\r\n\r\n  return (\r\n    <Form.Item label=\"Relationships\">\r\n      <Row align=\"bottom\" gutter={[24, 24]}>\r\n        <Col md={11} sm={24}>\r\n          <Select onChange={(val) => setCurrentChar(val)}>\r\n            <Option value=\"none\" disabled>\r\n              Select a character\r\n            </Option>\r\n            {characters?.map((c) => (\r\n              <Option\r\n                key={c.id}\r\n                value={c.id}\r\n              >{`${c.firstname} ${c.lastname}`}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n        <Col md={11} sm={24}>\r\n          <Input onChange={(e) => setCurrentRel(e.target.value)} />\r\n        </Col>\r\n        <Col md={2} sm={24}>\r\n          <div className=\"add-btn\" onClick={addRelation}>\r\n            Add\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n      <Row gutter={[16, 16]}>\r\n        {selectedCharacters?.map((rel) => (\r\n          <Col lg={4} md={6} sm={8} key={rel.id}>\r\n            <CharacterCard type=\"add\" character={rel} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default Relatives;\r\n"]},"metadata":{},"sourceType":"module"}