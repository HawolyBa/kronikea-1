{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\profile\\\\LinkComp.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Input, Tooltip, Space } from \"antd\";\nimport React from \"react\";\n\nvar LinkComp = function LinkComp(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      info = _ref.info,\n      setInfo = _ref.setInfo;\n  // const validate_url = (url, name) => {\n  //   if (name === \"twitter\") {\n  //     if (\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)twitter\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(url)\n  //     ) {\n  //       setInfo({\n  //         ...info,\n  //         twitter: {\n  //           ...info.twitter,\n  //           errors: ``,\n  //         },\n  //       });\n  //     } else {\n  //       setInfo({\n  //         ...info,\n  //         twitter: {\n  //           ...info.twitter,\n  //           errors: `The link is not a valid Twitter url`,\n  //         },\n  //       });\n  //     }\n  //   } else if (name === \"facebook\") {\n  //     if (\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)facebook\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(url)\n  //     ) {\n  //       setInfo({\n  //         ...info,\n  //         facebook: {\n  //           ...info.facebook,\n  //           errors: ``,\n  //         },\n  //       });\n  //     } else {\n  //       setInfo({\n  //         ...info,\n  //         facebook: {\n  //           ...info.facebook,\n  //           errors: `The link is not a valid Facebook url`,\n  //         },\n  //       });\n  //     }\n  //   } else if (name === \"instagram\") {\n  //     if (\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)instagram\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(\n  //         url\n  //       )\n  //     ) {\n  //       return true;\n  //     } else {\n  //       setInfo({\n  //         ...info,\n  //         instagram: {\n  //           ...info.instagram,\n  //           errors: `The link is not a valid Instagram url`,\n  //         },\n  //       });\n  //     }\n  //   } else if (name === \"deviantart\") {\n  //     if (\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)deviantart\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(\n  //         url\n  //       )\n  //     ) {\n  //       return true;\n  //     } else {\n  //       setInfo({\n  //         ...info,\n  //         deviantart: {\n  //           ...info.deviantart,\n  //           errors: `The link is not a valid Deviantart url`,\n  //         },\n  //       });\n  //     }\n  //   } else if (!url) {\n  //     setInfo({\n  //       ...info,\n  //       [name]: {\n  //         ...info[name],\n  //         errors: ``,\n  //       },\n  //     });\n  //   }\n  // };\n  // React.useEffect(() => {\n  //   validate_url(info.facebook.value, \"facebook\");\n  // }, [info.facebook.value]);\n  // React.useEffect(() => {\n  //   validate_url(info.twitter.value, \"twitter\");\n  // }, [info.twitter.value]);\n  // React.useEffect(() => {\n  //   validate_url(info.instagram.value, \"instagram\");\n  // }, [info.instagram.value]);\n  // React.useEffect(() => {\n  //   validate_url(info.deviantart.value, \"deviantart\");\n  // }, [info.deviantart.value]);\n  return __jsx(Input, {\n    addonBefore: __jsx(Space, {\n      align: \"middle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(Tooltip, {\n      title: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(\"ion-icon\", {\n      name: \"logo-\".concat(name),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"https://\".concat(name, \".com/\"))),\n    addonAfter: !info[name].errors && __jsx(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }),\n    onChange: function onChange(e) {\n      setInfo(_objectSpread(_objectSpread({}, info), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, info[name]), {}, {\n        value: e.target.value\n      }))));\n    },\n    value: info[name].value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  });\n};\n\n_c = LinkComp;\nexport default LinkComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkComp\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/profile/LinkComp.js"],"names":["Form","Input","Tooltip","Space","React","LinkComp","name","label","info","setInfo","errors","e","value","target"],"mappings":";;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,IAAI,iBAAUD,IAAV,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBA,IAAlB,WAJF,CAFJ;AASE,IAAA,UAAU,EAAE,CAACE,IAAI,CAACF,IAAD,CAAJ,CAAWI,MAAZ,IAAsB;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATpC;AAUE,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfF,MAAAA,OAAO,iCACFD,IADE,2BAEJF,IAFI,kCAEQE,IAAI,CAACF,IAAD,CAFZ;AAEoBM,QAAAA,KAAK,EAAED,CAAC,CAACE,MAAF,CAASD;AAFpC,WAAP;AAID,KAfH;AAgBE,IAAA,KAAK,EAAEJ,IAAI,CAACF,IAAD,CAAJ,CAAWM,KAhBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoBD,CAtHD;;KAAMP,Q;AAwHN,eAAeA,QAAf","sourcesContent":["import { Form, Input, Tooltip, Space } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst LinkComp = ({ name, label, info, setInfo }) => {\r\n  // const validate_url = (url, name) => {\r\n  //   if (name === \"twitter\") {\r\n  //     if (\r\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)twitter\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(url)\r\n  //     ) {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         twitter: {\r\n  //           ...info.twitter,\r\n  //           errors: ``,\r\n  //         },\r\n  //       });\r\n  //     } else {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         twitter: {\r\n  //           ...info.twitter,\r\n  //           errors: `The link is not a valid Twitter url`,\r\n  //         },\r\n  //       });\r\n  //     }\r\n  //   } else if (name === \"facebook\") {\r\n  //     if (\r\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)facebook\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(url)\r\n  //     ) {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         facebook: {\r\n  //           ...info.facebook,\r\n  //           errors: ``,\r\n  //         },\r\n  //       });\r\n  //     } else {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         facebook: {\r\n  //           ...info.facebook,\r\n  //           errors: `The link is not a valid Facebook url`,\r\n  //         },\r\n  //       });\r\n  //     }\r\n  //   } else if (name === \"instagram\") {\r\n  //     if (\r\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)instagram\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(\r\n  //         url\r\n  //       )\r\n  //     ) {\r\n  //       return true;\r\n  //     } else {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         instagram: {\r\n  //           ...info.instagram,\r\n  //           errors: `The link is not a valid Instagram url`,\r\n  //         },\r\n  //       });\r\n  //     }\r\n  //   } else if (name === \"deviantart\") {\r\n  //     if (\r\n  //       /^(https?:\\/\\/)?((w{3}\\.)?)deviantart\\.com\\/(#!\\/)?[a-z0-9_]+$/i.test(\r\n  //         url\r\n  //       )\r\n  //     ) {\r\n  //       return true;\r\n  //     } else {\r\n  //       setInfo({\r\n  //         ...info,\r\n  //         deviantart: {\r\n  //           ...info.deviantart,\r\n  //           errors: `The link is not a valid Deviantart url`,\r\n  //         },\r\n  //       });\r\n  //     }\r\n  //   } else if (!url) {\r\n  //     setInfo({\r\n  //       ...info,\r\n  //       [name]: {\r\n  //         ...info[name],\r\n  //         errors: ``,\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // React.useEffect(() => {\r\n  //   validate_url(info.facebook.value, \"facebook\");\r\n  // }, [info.facebook.value]);\r\n  // React.useEffect(() => {\r\n  //   validate_url(info.twitter.value, \"twitter\");\r\n  // }, [info.twitter.value]);\r\n  // React.useEffect(() => {\r\n  //   validate_url(info.instagram.value, \"instagram\");\r\n  // }, [info.instagram.value]);\r\n  // React.useEffect(() => {\r\n  //   validate_url(info.deviantart.value, \"deviantart\");\r\n  // }, [info.deviantart.value]);\r\n\r\n  return (\r\n    <Input\r\n      addonBefore={\r\n        <Space align=\"middle\">\r\n          <Tooltip title={label}>\r\n            <ion-icon name={`logo-${name}`}></ion-icon>\r\n          </Tooltip>\r\n          <span>{`https://${name}.com/`}</span>\r\n        </Space>\r\n      }\r\n      addonAfter={!info[name].errors && <ion-icon name=\"checkmark\"></ion-icon>}\r\n      onChange={(e) => {\r\n        setInfo({\r\n          ...info,\r\n          [name]: { ...info[name], value: e.target.value },\r\n        });\r\n      }}\r\n      value={info[name].value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LinkComp;\r\n"]},"metadata":{},"sourceType":"module"}