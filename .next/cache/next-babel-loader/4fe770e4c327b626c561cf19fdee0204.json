{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_USER_LOCATIONS, GET_STORY, GET_CHAPTERS, ADD_STORY, ADD_CHAPTER, EDIT_CHAPTER, GET_CHAPTER, EDIT_STORY, DISPATCH_ERROR } from \"../../utils/constants\";\nimport { db, auth, storage } from \"../fbConfig\";\nimport firebase from \"firebase/app\";\nimport { message } from \"antd\";\nimport Router from \"next/router\";\nexport var getStory = function getStory(id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(id).get().then(function (doc) {\n      if (doc.exists) {\n        var main = doc.data().mainCharacters;\n        var secondary = doc.data().secobdaryCharacters;\n        var mainArr = [];\n        var secondaryArr = [];\n        var mainQuery = main.map(function (c) {\n          return db.collection(\"characters\").doc(c).get();\n        });\n        var secondaryQuery = secondary.map(function (c) {\n          return db.collection(\"characters\").doc(c.id).get();\n        });\n        Promise.all([mainQuery, secondaryQuery]).then(function (result) {\n          // result.forEach((docu) => {\n          //   mainArr = [...mainArr, { ...docu.data(), id: docu.id }];\n          // });\n          // dispatch({\n          //   type: GET_STORY,\n          //   storyExists: true,\n          //   payload: {\n          //     ...doc.data(),\n          //     id: doc.id,\n          //     mainCharacters: mainArr,\n          //     mainArr: doc.data().mainCharacters,\n          //   },\n          // });\n          console.log(result);\n        });\n      } else {\n        dispatch({\n          type: DISPATCH_ERROR,\n          storyExists: false\n        });\n      }\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var addStory = function addStory(data) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_STORY,\n      payload: {\n        loading: true\n      }\n    });\n    var imageName = data.title.toLowerCase().split(\" \").join(\"_\");\n    console.log(data);\n\n    if (typeof data.banner === \"object\") {\n      storage.ref(\"\".concat(auth.currentUser.uid, \"/\").concat(imageName)).put(data.banner).then(function () {\n        return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n      }).then(function (url) {\n        return db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n          authorId: auth.currentUser.uid,\n          authorName: data.authorName,\n          oneShot: false,\n          banner: url,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          likesCount: 0,\n          chaptersCount: 0,\n          locationsCount: 0,\n          secondaryCharacters: [],\n          featured: false,\n          note: 0\n        }));\n      }).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n          dispatch({\n            type: ADD_STORY,\n            payload: {\n              message: \"Story added successfully\",\n              storyId: res.id,\n              loading: false\n            }\n          });\n        }, 1000);\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    } else {\n      db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n        authorId: auth.currentUser.uid,\n        authorName: data.authorName,\n        oneShot: false,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        likesCount: 0,\n        chaptersCount: 0,\n        locationsCount: 0,\n        featured: false,\n        secondaryCharacters: [],\n        note: 0\n      })).then(function (res) {\n        message.success(\"Story added successfully\");\n        setTimeout(function () {\n          Router.push(\"/story/\".concat(res.id));\n          dispatch({\n            type: ADD_STORY,\n            payload: {\n              message: \"Story added successfully\",\n              storyId: res.id,\n              loading: false\n            }\n          });\n        }, 1000);\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  };\n};\nexport var editStory = function editStory(data, storyId) {\n  return function (dispatch) {\n    dispatch({\n      type: EDIT_STORY,\n      payload: {\n        loadingStory: true\n      }\n    });\n    var imageName = data.title.toLowerCase().split(\" \").join(\"_\");\n\n    if (typeof data.banner === \"object\") {\n      storage.ref(\"\".concat(auth.currentUser.uid, \"/\").concat(imageName)).put(data.banner).then(function () {\n        return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n      }).then(function (url) {\n        return db.collection(\"stories\").doc(storyId).update(_objectSpread(_objectSpread({}, data), {}, {\n          banner: url\n        }));\n      }).then(function () {\n        message.success(\"Story added successfully\");\n        dispatch({\n          type: EDIT_STORY,\n          payload: {\n            message: \"Story edited successfully\"\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    } else {\n      db.collection(\"stories\").doc(storyId).update(_objectSpread({}, data)).then(function () {\n        message.success(\"Story added successfully\");\n        dispatch({\n          type: EDIT_STORY,\n          payload: {\n            message: \"Story edited successfully\"\n          }\n        });\n      })[\"catch\"](function (err) {\n        message.error(err.message);\n      });\n    }\n  };\n};\nexport var addChapter = function addChapter(data, secondaryCharacters) {\n  return function (dispatch) {\n    dispatch({\n      type: ADD_CHAPTER,\n      payload: {\n        loading: true\n      }\n    });\n    db.collection(\"chapters\").add(_objectSpread(_objectSpread({}, data), {}, {\n      authorId: auth.currentUser.uid,\n      commentsCount: 0,\n      note: 0,\n      voters: [],\n      votesCount: 0,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    })).then(function (res) {\n      db.collection(\"stories\").doc(data.storyId).get().then(function (doc) {\n        db.collection(\"stories\").doc(data.storyId).update({\n          secondaryCharacters: secondaryCharacters\n        }).then(function () {\n          dispatch({\n            type: ADD_CHAPTER,\n            payload: {\n              message: \"Chapter added successfully\",\n              chapId: res.id,\n              loading: false\n            }\n          });\n        });\n      });\n    }); // .then((res) => {\n    //   dispatch({\n    //     type: ADD_CHAPTER,\n    //     payload: {\n    //       message: \"Chapter added successfully\",\n    //       chapId: res.id,\n    //     },\n    //   });\n    // })\n    // .catch((err) =>\n    //   dispatch({\n    //     type: ADD_CHAPTER,\n    //     payload: { message: err.message, chapId: \"\" },\n    //   })\n    // );\n  };\n};\nexport var getChapter = function getChapter(storyId, id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(storyId).get().then(function (doc) {\n      if (doc.exists) {\n        db.collection(\"chapters\").doc(id).get().then(function (doc) {\n          if (doc.exists) {\n            dispatch({\n              type: GET_CHAPTER,\n              payload: {\n                chapter: _objectSpread(_objectSpread({}, doc.data()), {}, {\n                  id: doc.id\n                }),\n                chapterExists: true\n              }\n            });\n          } else {\n            dispatch({\n              type: GET_CHAPTER,\n              payload: {\n                chapterExists: false\n              }\n            });\n          }\n        });\n      } else {\n        dispatch({\n          type: GET_CHAPTER,\n          payload: {\n            chapterExists: false\n          }\n        });\n      }\n    });\n  };\n};\nexport var editChapter = function editChapter(data, storyId, chapid, secondaryCharacters) {\n  return function (dispatch) {\n    dispatch({\n      type: EDIT_CHAPTER,\n      payload: {\n        loading: true\n      }\n    });\n    db.collection(\"chapters\").doc(chapid).update(_objectSpread({}, data)).then(function () {\n      db.collection(\"stories\").doc(storyId).get().then(function (doc) {\n        db.collection(\"stories\").doc(storyId).update({\n          secondaryCharacters: secondaryCharacters\n        }).then(function () {\n          dispatch({\n            type: EDIT_CHAPTER,\n            payload: {\n              message: \"Chapter edited successfully\",\n              loading: false\n            }\n          });\n        });\n      });\n    });\n  };\n};\nexport var getChapters = function getChapters(id) {\n  return function (dispatch) {\n    db.collection(\"chapters\").where(\"storyId\", \"==\", id).orderBy(\"number\", \"asc\").onSnapshot(function (docs) {\n      var arr = [];\n      docs.forEach(function (doc) {\n        arr.push({\n          authorId: doc.data().authorId,\n          id: doc.id,\n          createdAt: doc.data().createdAt,\n          number: doc.data().number,\n          title: doc.data().title,\n          commentsCount: doc.data().commentsCount\n        });\n      });\n      dispatch({\n        type: GET_CHAPTERS,\n        payload: arr\n      });\n    });\n  };\n};\nexport var getStoryCharacters = function getStoryCharacters(id) {\n  return function (dispatch) {};\n};\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};\nexport var getUserLocations = function getUserLocations() {\n  return function (dispatch) {\n    db.collection(\"locations\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var locations = [];\n      docs.forEach(function (doc) {\n        locations = [].concat(_toConsumableArray(locations), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      dispatch({\n        type: GET_USER_LOCATIONS,\n        payload: locations\n      });\n    });\n  };\n};\nexport var getFavoriteStories = function getFavoriteStories() {\n  return function (dispatch) {\n    db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().storyId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"stories\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_STORIES,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_USER_LOCATIONS","GET_STORY","GET_CHAPTERS","ADD_STORY","ADD_CHAPTER","EDIT_CHAPTER","GET_CHAPTER","EDIT_STORY","DISPATCH_ERROR","db","auth","storage","firebase","message","Router","getStory","id","dispatch","collection","doc","get","then","exists","main","data","mainCharacters","secondary","secobdaryCharacters","mainArr","secondaryArr","mainQuery","map","c","secondaryQuery","Promise","all","result","console","log","type","storyExists","err","addStory","payload","loading","imageName","title","toLowerCase","split","join","banner","ref","currentUser","uid","put","child","getDownloadURL","url","add","authorId","authorName","oneShot","createdAt","firestore","FieldValue","serverTimestamp","likesCount","chaptersCount","locationsCount","secondaryCharacters","featured","note","res","success","setTimeout","push","storyId","error","editStory","loadingStory","update","addChapter","commentsCount","voters","votesCount","chapId","getChapter","chapter","chapterExists","editChapter","chapid","getChapters","where","orderBy","onSnapshot","docs","arr","forEach","number","getStoryCharacters","getUserStories","items","getUserLocations","locations","getFavoriteStories","favArr","users","user","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_USER_LOCATIONS,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n  ADD_STORY,\r\n  ADD_CHAPTER,\r\n  EDIT_CHAPTER,\r\n  GET_CHAPTER,\r\n  EDIT_STORY,\r\n  DISPATCH_ERROR,\r\n} from \"../../utils/constants\";\r\nimport { db, auth, storage } from \"../fbConfig\";\r\nimport firebase from \"firebase/app\";\r\nimport { message } from \"antd\";\r\nimport Router from \"next/router\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        const main = doc.data().mainCharacters;\r\n        const secondary = doc.data().secobdaryCharacters;\r\n        let mainArr = [];\r\n        let secondaryArr = [];\r\n        const mainQuery = main.map((c) =>\r\n          db.collection(\"characters\").doc(c).get()\r\n        );\r\n        const secondaryQuery = secondary.map((c) =>\r\n          db.collection(\"characters\").doc(c.id).get()\r\n        );\r\n        Promise.all([mainQuery, secondaryQuery]).then((result) => {\r\n          // result.forEach((docu) => {\r\n          //   mainArr = [...mainArr, { ...docu.data(), id: docu.id }];\r\n          // });\r\n          // dispatch({\r\n          //   type: GET_STORY,\r\n          //   storyExists: true,\r\n          //   payload: {\r\n          //     ...doc.data(),\r\n          //     id: doc.id,\r\n          //     mainCharacters: mainArr,\r\n          //     mainArr: doc.data().mainCharacters,\r\n          //   },\r\n          // });\r\n          console.log(result);\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: DISPATCH_ERROR,\r\n          storyExists: false,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addStory = (data) => (dispatch) => {\r\n  dispatch({ type: ADD_STORY, payload: { loading: true } });\r\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\r\n  console.log(data);\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db.collection(\"stories\").add({\r\n          ...data,\r\n          authorId: auth.currentUser.uid,\r\n          authorName: data.authorName,\r\n          oneShot: false,\r\n          banner: url,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          likesCount: 0,\r\n          chaptersCount: 0,\r\n          locationsCount: 0,\r\n          secondaryCharacters: [],\r\n          featured: false,\r\n          note: 0,\r\n        });\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .add({\r\n        ...data,\r\n        authorId: auth.currentUser.uid,\r\n        authorName: data.authorName,\r\n        oneShot: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesCount: 0,\r\n        chaptersCount: 0,\r\n        locationsCount: 0,\r\n        featured: false,\r\n        secondaryCharacters: [],\r\n        note: 0,\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const editStory = (data, storyId) => (dispatch) => {\r\n  dispatch({ type: EDIT_STORY, payload: { loadingStory: true } });\r\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\r\n\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db\r\n          .collection(\"stories\")\r\n          .doc(storyId)\r\n          .update({\r\n            ...data,\r\n            banner: url,\r\n          });\r\n      })\r\n      .then(() => {\r\n        message.success(\"Story added successfully\");\r\n        dispatch({\r\n          type: EDIT_STORY,\r\n          payload: {\r\n            message: \"Story edited successfully\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .doc(storyId)\r\n      .update({\r\n        ...data,\r\n      })\r\n      .then(() => {\r\n        message.success(\"Story added successfully\");\r\n        dispatch({\r\n          type: EDIT_STORY,\r\n          payload: {\r\n            message: \"Story edited successfully\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const addChapter = (data, secondaryCharacters) => (dispatch) => {\r\n  dispatch({ type: ADD_CHAPTER, payload: { loading: true } });\r\n  db.collection(\"chapters\")\r\n    .add({\r\n      ...data,\r\n      authorId: auth.currentUser.uid,\r\n      commentsCount: 0,\r\n      note: 0,\r\n      voters: [],\r\n      votesCount: 0,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n    .then((res) => {\r\n      db.collection(\"stories\")\r\n        .doc(data.storyId)\r\n        .get()\r\n        .then((doc) => {\r\n          db.collection(\"stories\")\r\n            .doc(data.storyId)\r\n            .update({\r\n              secondaryCharacters,\r\n            })\r\n            .then(() => {\r\n              dispatch({\r\n                type: ADD_CHAPTER,\r\n                payload: {\r\n                  message: \"Chapter added successfully\",\r\n                  chapId: res.id,\r\n                  loading: false,\r\n                },\r\n              });\r\n            });\r\n        });\r\n    });\r\n  // .then((res) => {\r\n  //   dispatch({\r\n  //     type: ADD_CHAPTER,\r\n  //     payload: {\r\n  //       message: \"Chapter added successfully\",\r\n  //       chapId: res.id,\r\n  //     },\r\n  //   });\r\n  // })\r\n  // .catch((err) =>\r\n  //   dispatch({\r\n  //     type: ADD_CHAPTER,\r\n  //     payload: { message: err.message, chapId: \"\" },\r\n  //   })\r\n  // );\r\n};\r\n\r\nexport const getChapter = (storyId, id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(storyId)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        db.collection(\"chapters\")\r\n          .doc(id)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              dispatch({\r\n                type: GET_CHAPTER,\r\n                payload: {\r\n                  chapter: { ...doc.data(), id: doc.id },\r\n                  chapterExists: true,\r\n                },\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: GET_CHAPTER,\r\n                payload: { chapterExists: false },\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        dispatch({\r\n          type: GET_CHAPTER,\r\n          payload: { chapterExists: false },\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\nexport const editChapter = (data, storyId, chapid, secondaryCharacters) => (\r\n  dispatch\r\n) => {\r\n  dispatch({ type: EDIT_CHAPTER, payload: { loading: true } });\r\n  db.collection(\"chapters\")\r\n    .doc(chapid)\r\n    .update({ ...data })\r\n    .then(() => {\r\n      db.collection(\"stories\")\r\n        .doc(storyId)\r\n        .get()\r\n        .then((doc) => {\r\n          db.collection(\"stories\")\r\n            .doc(storyId)\r\n            .update({\r\n              secondaryCharacters,\r\n            })\r\n            .then(() => {\r\n              dispatch({\r\n                type: EDIT_CHAPTER,\r\n                payload: {\r\n                  message: \"Chapter edited successfully\",\r\n                  loading: false,\r\n                },\r\n              });\r\n            });\r\n        });\r\n    });\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .orderBy(\"number\", \"asc\")\r\n    .onSnapshot((docs) => {\r\n      let arr = [];\r\n      docs.forEach((doc) => {\r\n        arr.push({\r\n          authorId: doc.data().authorId,\r\n          id: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          number: doc.data().number,\r\n          title: doc.data().title,\r\n          commentsCount: doc.data().commentsCount,\r\n        });\r\n      });\r\n      dispatch({\r\n        type: GET_CHAPTERS,\r\n        payload: arr,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getStoryCharacters = (id) => (dispatch) => {};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getUserLocations = () => (dispatch) => {\r\n  db.collection(\"locations\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let locations = [];\r\n      docs.forEach((doc) => {\r\n        locations = [...locations, { id: doc.id, ...doc.data() }];\r\n      });\r\n      dispatch({\r\n        type: GET_USER_LOCATIONS,\r\n        payload: locations,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}