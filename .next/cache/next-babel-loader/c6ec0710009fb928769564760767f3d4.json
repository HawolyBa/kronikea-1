{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, PageHeader, Button, Modal } from \"antd\";\nimport { SlidersOutlined } from \"@ant-design/icons\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport Filter from \"../components/explore/Filter\";\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\n\nvar Explore = function Explore(props) {\n  _s();\n\n  var stories = props.stories,\n      loading = props.loading;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentStories = _React$useState2[0],\n      setCurrentStories = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"a\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentLetter = _React$useState4[0],\n      setCurrentLetter = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentCategory = _React$useState6[0],\n      setCurrentCategory = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentStatus = _React$useState8[0],\n      setCurrentStatus = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      currentLanguage = _React$useState10[0],\n      setCurrentLanguage = _React$useState10[1];\n\n  var _React$useState11 = React.useState(true),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      mature = _React$useState12[0],\n      setMature = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      openFilter = _React$useState14[0],\n      setOpenFilter = _React$useState14[1];\n\n  var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(function () {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(function () {\n    setCurrentStories(stories.filter(function (story) {\n      return story.mature === mature;\n    }));\n    setCurrentCategory(\"\");\n    setCurrentStatus(\"\");\n    setCurrentLanguage(\"\");\n  }, [stories]); // // CATEGORY\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((s) =>\n  //       s.category\n  //         ? s.category.includes(currentCategory)\n  //         : s.categories.includes(currentCategory)\n  //     )\n  //   );\n  // }, [currentCategory]);\n  // // LANGUAGE\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.language === currentLanguage)\n  //   );\n  // }, [currentLanguage]);\n  // // MATURE\n  // React.useEffect(() => {\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\n  // }, [mature]);\n  // // STATUS\n  // React.useEffect(() => {\n  //   setCurrentStories(\n  //     stories.filter((story) => story.status === currentStatus)\n  //   );\n  // }, [currentStatus]);\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(PageHeader, {\n    title: \"Explore\",\n    extra: __jsx(Button, {\n      onClick: openFilter,\n      icon: __jsx(SlidersOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 48\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Filter\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    gutter: [32, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(AlphabetRow, {\n    alphabet: alphabet,\n    currentLetter: currentLetter,\n    setCurrentLetter: setCurrentLetter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 3,\n      1200: 3,\n      900: 3,\n      750: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }))))), __jsx(Modal, {\n    width: \"100%\",\n    title: \"Filter Stories\",\n    visible: openFilter,\n    onCancel: !openFilter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Filter, {\n    currentCategory: currentCategory,\n    setCurrentCategory: setCurrentCategory,\n    currentStatus: currentStatus,\n    setCurrentStatus: setCurrentStatus,\n    currentLanguage: currentLanguage,\n    setCurrentLanguage: setCurrentLanguage,\n    mature: mature,\n    setMature: setMature,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Explore, \"SUisSpLsR7/uR69FVfqLxVpDw4A=\");\n\n_c = Explore;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stories: state.stories.storiesFromSearch,\n    loading: state.stories.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter: getStoriesByLetter\n})(Explore);\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","PageHeader","Button","Modal","SlidersOutlined","onlyUnique","getStoriesByLetter","StoriesGrid","LoadingScreen","Filter","AlphabetRow","Explore","props","stories","loading","useState","currentStories","setCurrentStories","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","currentStatus","setCurrentStatus","currentLanguage","setCurrentLanguage","mature","setMature","openFilter","setOpenFilter","alphabet","useEffect","filter","story","mapStateToProps","state","storiesFromSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, PageHeader, Button, Modal } from \"antd\";\r\nimport { SlidersOutlined } from \"@ant-design/icons\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\n\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\nimport Filter from \"../components/explore/Filter\";\r\nimport AlphabetRow from \"../components/explore/AlphabetRow\";\r\n\r\nconst Explore = (props) => {\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const [currentStatus, setCurrentStatus] = React.useState(\"\");\r\n  const [currentLanguage, setCurrentLanguage] = React.useState(\"\");\r\n  const [mature, setMature] = React.useState(true);\r\n  const [openFilter, setOpenFilter] = React.useState(false);\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(stories.filter((story) => story.mature === mature));\r\n    setCurrentCategory(\"\");\r\n    setCurrentStatus(\"\");\r\n    setCurrentLanguage(\"\");\r\n  }, [stories]);\r\n\r\n  // // CATEGORY\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((s) =>\r\n  //       s.category\r\n  //         ? s.category.includes(currentCategory)\r\n  //         : s.categories.includes(currentCategory)\r\n  //     )\r\n  //   );\r\n  // }, [currentCategory]);\r\n\r\n  // // LANGUAGE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.language === currentLanguage)\r\n  //   );\r\n  // }, [currentLanguage]);\r\n\r\n  // // MATURE\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(stories.filter((story) => story.mature === mature));\r\n  // }, [mature]);\r\n\r\n  // // STATUS\r\n  // React.useEffect(() => {\r\n  //   setCurrentStories(\r\n  //     stories.filter((story) => story.status === currentStatus)\r\n  //   );\r\n  // }, [currentStatus]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"explore-page\">\r\n        <PageHeader\r\n          title={`Explore`}\r\n          extra={\r\n            <Button onClick={openFilter} icon={<SlidersOutlined />}>\r\n              Filter\r\n            </Button>\r\n          }\r\n        />\r\n        <Row gutter={[32, 24]}>\r\n          <Col span={24}>\r\n            <AlphabetRow\r\n              alphabet={alphabet}\r\n              currentLetter={currentLetter}\r\n              setCurrentLetter={setCurrentLetter}\r\n            />\r\n            <LoadingScreen loading={loading}>\r\n              <StoriesGrid\r\n                stories={currentStories}\r\n                gutter=\"16px\"\r\n                columnsCountBreakPoints={{ 1600: 3, 1200: 3, 900: 3, 750: 2 }}\r\n              />\r\n            </LoadingScreen>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Modal\r\n        width=\"100%\"\r\n        title=\"Filter Stories\"\r\n        visible={openFilter}\r\n        onCancel={!openFilter}\r\n      >\r\n        <Filter\r\n          currentCategory={currentCategory}\r\n          setCurrentCategory={setCurrentCategory}\r\n          currentStatus={currentStatus}\r\n          setCurrentStatus={setCurrentStatus}\r\n          currentLanguage={currentLanguage}\r\n          setCurrentLanguage={setCurrentLanguage}\r\n          mature={mature}\r\n          setMature={setMature}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}