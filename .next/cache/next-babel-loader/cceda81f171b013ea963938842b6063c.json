{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { CATEGORIES } from \"../utils/constants\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\n\nvar Explore = function Explore(props) {\n  _s();\n\n  var stories = props.stories,\n      loading = props.loading;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentStories = _React$useState2[0],\n      setCurrentStories = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"a\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentLetter = _React$useState4[0],\n      setCurrentLetter = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentCategory = _React$useState6[0],\n      setCurrentCategory = _React$useState6[1];\n\n  var alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(function () {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(function () {\n    setCurrentStories(stories); // setCategories(\n    //   stories\n    //     .map((story) =>\n    //       story.categories ? [...story.categories] : story.category\n    //     )\n    //     .filter(onlyUnique)\n    // );\n  }, [stories]);\n  React.useState(function () {\n    console.log(\"coucou\"); // setCurrentStories(\n    //   currentStories.filter((s) => s.category === currentCategory)\n    // );\n  }, [currentCategory]);\n  console.log(currentCategory);\n  return __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Explore\"), __jsx(Row, {\n    gutter: [32, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"aside\", {\n    className: \"filter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Filter\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"by categories\"), __jsx(\"select\", {\n    value: currentCategory,\n    onChange: function onChange(e) {\n      return setCurrentCategory(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Choose a category\"), CATEGORIES.map(function (c) {\n    return __jsx(\"option\", {\n      key: c.value,\n      value: c.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, c.name);\n  }))))), __jsx(Col, {\n    span: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"alphabetic-search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, alphabet.map(function (a) {\n    return __jsx(\"span\", {\n      className: currentLetter === a ? \"current\" : \"\",\n      key: a,\n      onClick: function onClick() {\n        return setCurrentLetter(a);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, a);\n  })), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 3,\n      1200: 3,\n      900: 3,\n      750: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Explore, \"XYGDuVh6HB5hgGmPfOWQejQ3aCI=\");\n\n_c = Explore;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stories: state.stories.storiesFromSearch,\n    loading: state.stories.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter: getStoriesByLetter\n})(Explore);\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","onlyUnique","CATEGORIES","StoriesGrid","LoadingScreen","getStoriesByLetter","Explore","props","stories","loading","useState","currentStories","setCurrentStories","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","alphabet","useEffect","console","log","e","target","value","map","c","name","a","mapStateToProps","state","storiesFromSearch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { CATEGORIES } from \"../utils/constants\";\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\n\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\n\r\nconst Explore = (props) => {\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(stories);\r\n    // setCategories(\r\n    //   stories\r\n    //     .map((story) =>\r\n    //       story.categories ? [...story.categories] : story.category\r\n    //     )\r\n    //     .filter(onlyUnique)\r\n    // );\r\n  }, [stories]);\r\n\r\n  React.useState(() => {\r\n    console.log(\"coucou\");\r\n    // setCurrentStories(\r\n    //   currentStories.filter((s) => s.category === currentCategory)\r\n    // );\r\n  }, [currentCategory]);\r\n\r\n  console.log(currentCategory);\r\n\r\n  return (\r\n    <div className=\"explore-page\">\r\n      <h2>Explore</h2>\r\n      <Row gutter={[32, 24]}>\r\n        <Col span={6}>\r\n          <aside className=\"filter\">\r\n            <h4>Filter</h4>\r\n            <div>\r\n              <h5>by categories</h5>\r\n              <select\r\n                value={currentCategory}\r\n                onChange={(e) => setCurrentCategory(e.target.value)}\r\n              >\r\n                <option value=\"\">Choose a category</option>\r\n                {CATEGORIES.map((c) => (\r\n                  <option key={c.value} value={c.value}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </aside>\r\n        </Col>\r\n        <Col span={18}>\r\n          <div className=\"alphabetic-search\">\r\n            {alphabet.map((a) => (\r\n              <span\r\n                className={currentLetter === a ? \"current\" : \"\"}\r\n                key={a}\r\n                onClick={() => setCurrentLetter(a)}\r\n              >\r\n                {a}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <LoadingScreen loading={loading}>\r\n            <StoriesGrid\r\n              stories={currentStories}\r\n              gutter=\"16px\"\r\n              columnsCountBreakPoints={{ 1600: 3, 1200: 3, 900: 3, 750: 2 }}\r\n            />\r\n          </LoadingScreen>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}