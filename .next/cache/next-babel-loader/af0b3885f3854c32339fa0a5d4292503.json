{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\edit.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, message, PageHeader } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../../redux/actions/charactersActions\";\nimport { getStory, editStory, deleteStory } from \"../../../redux/actions/storiesActions\";\nimport StoryForm from \"../../../components/forms/StoryForm\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\n\nconst EditStory = props => {\n  const auth = useAuth();\n  const router = useRouter();\n  const {\n    story,\n    loading,\n    characters,\n    loadingStory,\n    storyExists,\n    deleted,\n    confirmMessage\n  } = props;\n  const [form] = Form.useForm();\n  const [mature, setMature] = React.useState(false);\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    if (router.query.id) {\n      props.getStory(router.query.id);\n    }\n  }, [router.query.id]);\n  React.useEffect(() => {\n    if (deleted) {\n      router.push(\"/profile\");\n    }\n  }, [deleted]);\n  React.useEffect(() => {\n    if (confirmMessage) {\n      message.success(confirmMessage);\n    }\n  }, [confirmMessage]);\n\n  const submit = values => {\n    delete values.currentChar;\n    props.editStory(values, router.query.id);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(PageHeader, {\n    className: \"site-page-header\",\n    onBack: () => router.push(`/story/${router.query.id}`),\n    title: \"Back to story\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Edit story: \", story.title), __jsx(StoryForm, {\n    type: \"edit\",\n    submit: submit,\n    characters: characters,\n    loading: loading,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    story: story,\n    loadingStory: loadingStory,\n    deleteStory: props.deleteStory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  confirmMessage: state.stories.message,\n  storyId: state.stories.storyId,\n  loadingStory: state.stories.loadingStory,\n  story: state.stories.story,\n  loading: state.stories.loading,\n  storyExists: state.stories.storyExists,\n  deleted: state.stories.deleted\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  editStory,\n  getStory,\n  deleteStory\n})(EditStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/edit.js"],"names":["React","Form","message","PageHeader","connect","useRouter","useAuth","getUserCharacters","getStory","editStory","deleteStory","StoryForm","LoadingScreen","RedirectComp","EditStory","props","auth","router","story","loading","characters","loadingStory","storyExists","deleted","confirmMessage","form","useForm","mature","setMature","useState","visibility","setVisibility","useEffect","user","uid","query","id","push","success","submit","values","currentChar","authorId","title","mapStateToProps","state","userCharacters","stories","storyId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, message, PageHeader } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../../redux/actions/charactersActions\";\r\nimport {\r\n  getStory,\r\n  editStory,\r\n  deleteStory,\r\n} from \"../../../redux/actions/storiesActions\";\r\n\r\nimport StoryForm from \"../../../components/forms/StoryForm\";\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\n\r\nconst EditStory = (props) => {\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const {\r\n    story,\r\n    loading,\r\n    characters,\r\n    loadingStory,\r\n    storyExists,\r\n    deleted,\r\n    confirmMessage,\r\n  } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (router.query.id) {\r\n      props.getStory(router.query.id);\r\n    }\r\n  }, [router.query.id]);\r\n\r\n  React.useEffect(() => {\r\n    if (deleted) {\r\n      router.push(\"/profile\");\r\n    }\r\n  }, [deleted]);\r\n\r\n  React.useEffect(() => {\r\n    if (confirmMessage) {\r\n      message.success(confirmMessage);\r\n    }\r\n  }, [confirmMessage]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    props.editStory(values, router.query.id);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type={\"404\"} condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          <div className=\"new-story custom-form\">\r\n            <div className=\"inner\">\r\n              <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => router.push(`/story/${router.query.id}`)}\r\n                title=\"Back to story\"\r\n              />\r\n              <h2 className=\"side-heading\">Edit story: {story.title}</h2>\r\n              <StoryForm\r\n                type=\"edit\"\r\n                submit={submit}\r\n                characters={characters}\r\n                loading={loading}\r\n                form={form}\r\n                mature={mature}\r\n                setMature={setMature}\r\n                visibility={visibility}\r\n                setVisibility={setVisibility}\r\n                story={story}\r\n                loadingStory={loadingStory}\r\n                deleteStory={props.deleteStory}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loadingStory: state.stories.loadingStory,\r\n  story: state.stories.story,\r\n  loading: state.stories.loading,\r\n  storyExists: state.stories.storyExists,\r\n  deleted: state.stories.deleted,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserCharacters,\r\n  editStory,\r\n  getStory,\r\n  deleteStory,\r\n})(EditStory);\r\n"]},"metadata":{},"sourceType":"module"}