{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Form, Input } from \"antd\";\n\nvar Register = function Register(_ref) {\n  _s();\n\n  var handleClick = _ref.handleClick,\n      auth = _ref.auth;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  return __jsx(\"div\", {\n    className: \"inner-auth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Welcome to Kronikea\"), __jsx(Form, {\n    onFinish: function onFinish(_ref2) {\n      var password = _ref2.password,\n          email = _ref2.email,\n          username = _ref2.username;\n      return auth.signup(email, password, username);\n    },\n    layout: \"vertical\",\n    form: form,\n    initialValues: {\n      password: \"\",\n      email: \"\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"email\",\n    label: \"Email Address\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"This is not valid E-mail!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })), auth.errors.email && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, auth.errors.email))), __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    label: \"Username\",\n    rules: [{\n      required: true,\n      message: \"A username is required\"\n    }, {\n      max: 15,\n      type: \"string\",\n      message: \"Your username cannot exceed 15 characters\"\n    }, {\n      min: 4,\n      type: \"string\",\n      message: \"Your username needs to be at least 4 characters long\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), auth.errors.username && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, auth.errors.username))), __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: \"A password is required\"\n    }, {\n      min: 8,\n      message: \"Password must be at least 8 characters.\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), auth.errors.password && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, auth.errors.password))), __jsx(Col, {\n    span: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"confirmpassword\",\n    label: \"Confirm Password\",\n    rules: [{\n      required: true,\n      message: \"Please confirm your password!\"\n    }, function (_ref3) {\n      var getFieldValue = _ref3.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (!value || getFieldValue(\"password\") === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(\"The two passwords that you entered do not match!\"));\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Password, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), auth.errors.confirmPassword && __jsx(\"div\", {\n    className: \"ant-form-item-explain ant-form-item-explain-error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    role: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, auth.errors.confirmPassword)))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"login-btn custom-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Register\"))), __jsx(\"p\", {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Already have an account ? Login here\"));\n};\n\n_s(Register, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/auth/Register.js"],"names":["React","Row","Col","Form","Input","Register","handleClick","auth","useForm","form","password","email","username","signup","required","type","message","errors","max","min","getFieldValue","validator","_","value","Promise","resolve","reject","Error","confirmPassword"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Form, Input } from \"antd\";\r\n\r\nconst Register = ({ handleClick, auth }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  return (\r\n    <div className=\"inner-auth\">\r\n      <h2>Welcome to Kronikea</h2>\r\n      <Form\r\n        onFinish={({ password, email, username }) =>\r\n          auth.signup(email, password, username)\r\n        }\r\n        layout=\"vertical\"\r\n        form={form}\r\n        initialValues={{ password: \"\", email: \"\" }}\r\n      >\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: \"email\",\r\n                  message: \"This is not valid E-mail!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            {auth.errors.email && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.email}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A username is required\",\r\n                },\r\n                {\r\n                  max: 15,\r\n                  type: \"string\",\r\n                  message: \"Your username cannot exceed 15 characters\",\r\n                },\r\n                {\r\n                  min: 4,\r\n                  type: \"string\",\r\n                  message:\r\n                    \"Your username needs to be at least 4 characters long\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            {auth.errors.username && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.username}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"A password is required\",\r\n                },\r\n                { min: 8, message: \"Password must be at least 8 characters.\" },\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            {auth.errors.password && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.password}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"confirmpassword\"\r\n              label=\"Confirm Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please confirm your password!\",\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(_, value) {\r\n                    if (!value || getFieldValue(\"password\") === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      new Error(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      )\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            {auth.errors.confirmPassword && (\r\n              <div className=\"ant-form-item-explain ant-form-item-explain-error\">\r\n                <div role=\"alert\">{auth.errors.confirmPassword}</div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <button type=\"submit\" className=\"login-btn custom-btn\">\r\n          <span>Register</span>\r\n        </button>\r\n      </Form>\r\n      <p onClick={handleClick}>Already have an account ? Login here</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}