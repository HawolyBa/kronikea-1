{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\[chapid]\\\\edit.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form, message } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../../hooks/userHooks\";\nimport { getStory, getChapter, editChapter, getUserLocations } from \"../../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\n\nconst EditChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    locations,\n    loadingChapter,\n    chapter,\n    chapterExists,\n    editMessage,\n    story\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [body, setBody] = React.useState(\"\");\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n    props.getChapter(router.query.id, router.query.chapid);\n  }, [router.query.id, router.query.chapid]);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    if (editMessage) {\n      message.success(editMessage);\n    }\n  }, [editMessage]);\n\n  const submit = values => {\n    delete values.currentChar;\n    delete values.currentLoc;\n    const main = story.mainArr;\n    let secondaryCharacters = [...story.secondaryCharacters];\n    let charInChapter = values.characters.filter(c => !main.includes(c));\n    secondaryCharacters.forEach((char, i) => {\n      if (!charInChapter.includes(char.id)) {\n        secondaryCharacters[i].times = secondaryCharacters[i].times - 1;\n      }\n    });\n    secondaryCharacters.filter(c => c.times > 0); // charInChapter.forEach((char) => {\n    //   const index = secondaryCharacters.findIndex((c) => c.id === char);\n    //   if (index === -1) {\n    //     secondaryCharacters.push({ id: char, times: 1 });\n    //   }\n    // });\n\n    console.log(secondaryCharacters); // props.editChapter(\n    //   {\n    //     ...values,\n    //     body,\n    //     status: values.status === \"true\",\n    //   },\n    //   router.query.id,\n    //   router.query.chapid,\n    //   secondaryCharacters\n    // );\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: chapterExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === chapter.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    body: body,\n    setBody: setBody,\n    type: \"edit\",\n    loadingChapter: loadingChapter,\n    loading: loading,\n    chapter: chapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  chapter: state.stories.chapter,\n  story: state.stories.story,\n  characters: state.characters.userCharacters,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations,\n  loadingChapter: state.stories.loadingChapter,\n  chapterExists: state.stories.chapterExists,\n  editMessage: state.stories.message\n});\n\nexport default connect(mapStateToProps, {\n  getChapter,\n  getUserCharacters,\n  getUserLocations,\n  editChapter,\n  getStory\n})(EditChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/[chapid]/edit.js"],"names":["React","connect","Form","message","useRouter","useAuth","getStory","getChapter","editChapter","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","EditChapter","props","form","useForm","characters","loading","locations","loadingChapter","chapter","chapterExists","editMessage","story","auth","router","body","setBody","useState","useEffect","query","id","chapid","user","uid","success","submit","values","currentChar","currentLoc","main","mainArr","secondaryCharacters","charInChapter","filter","c","includes","forEach","char","i","times","console","log","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, message } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  getChapter,\r\n  editChapter,\r\n  getUserLocations,\r\n} from \"../../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../../components/hoc/RedirectComp\";\r\n\r\nconst EditChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const {\r\n    characters,\r\n    loading,\r\n    locations,\r\n    loadingChapter,\r\n    chapter,\r\n    chapterExists,\r\n    editMessage,\r\n    story,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const [body, setBody] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n    props.getChapter(router.query.id, router.query.chapid);\r\n  }, [router.query.id, router.query.chapid]);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (editMessage) {\r\n      message.success(editMessage);\r\n    }\r\n  }, [editMessage]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    delete values.currentLoc;\r\n\r\n    const main = story.mainArr;\r\n    let secondaryCharacters = [...story.secondaryCharacters];\r\n    let charInChapter = values.characters.filter((c) => !main.includes(c));\r\n\r\n    secondaryCharacters.forEach((char, i) => {\r\n      if (!charInChapter.includes(char.id)) {\r\n        secondaryCharacters[i].times = secondaryCharacters[i].times - 1;\r\n      }\r\n    });\r\n\r\n    secondaryCharacters.filter((c) => c.times > 0);\r\n\r\n    // charInChapter.forEach((char) => {\r\n    //   const index = secondaryCharacters.findIndex((c) => c.id === char);\r\n    //   if (index === -1) {\r\n    //     secondaryCharacters.push({ id: char, times: 1 });\r\n    //   }\r\n    // });\r\n\r\n    console.log(secondaryCharacters);\r\n\r\n    // props.editChapter(\r\n    //   {\r\n    //     ...values,\r\n    //     body,\r\n    //     status: values.status === \"true\",\r\n    //   },\r\n    //   router.query.id,\r\n    //   router.query.chapid,\r\n    //   secondaryCharacters\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={chapterExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === chapter.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n                body={body}\r\n                setBody={setBody}\r\n                type=\"edit\"\r\n                loadingChapter={loadingChapter}\r\n                loading={loading}\r\n                chapter={chapter}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  chapter: state.stories.chapter,\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n  loadingChapter: state.stories.loadingChapter,\r\n  chapterExists: state.stories.chapterExists,\r\n  editMessage: state.stories.message,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getChapter,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n  editChapter,\r\n  getStory,\r\n})(EditChapter);\r\n"]},"metadata":{},"sourceType":"module"}