{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_STORY, GET_CHAPTERS } from \"../../utils/constants\";\nimport { db, auth } from \"../fbConfig\";\nexport var getStory = function getStory(id) {\n  return function (dispatch) {\n    db.collection(\"stories\").doc(id).get().then(function (doc) {\n      dispatch({\n        type: GET_STORY,\n        payload: _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        })\n      });\n    });\n  };\n};\nexport var getChapters = function getChapters(id) {\n  return function (dispatch) {\n    db.collection(\"chapters\").where(\"storyId\", \"==\", id).orderBy(\"number\", \"asc\").onSnapshot(function (docs) {\n      var arr = [];\n      docs.forEach(function (doc) {\n        arr.push({\n          authorId: doc.data().authorId,\n          id: doc.id,\n          createdAt: doc.data().createdAt,\n          number: doc.data().number,\n          title: doc.data().title,\n          commentsCount: doc.data().commentsCount\n        });\n      });\n      dispatch({\n        type: GET_CHAPTERS,\n        payload: arr\n      });\n    });\n  };\n};\nexport var getStoryCharacters = function getStoryCharacters(id) {\n  return function (dispatch) {\n    var characters = {\n      mainCharacters: [],\n      secondaryCharacters: []\n    };\n    db.collection(\"stories\").doc(id).get().then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(doc) {\n        var mainsArr, mainsQuery;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                mainsArr = doc.data().mainCharacters;\n                _context.next = 3;\n                return db.collection(\"characters\").doc(char).get();\n\n              case 3:\n                mainsQuery = _context.sent;\n                console.log(mainsQuery);\n                mains.forEach(function (_char) {\n                  db.collection(\"characters\").doc(_char).get().then(function (c) {\n                    characters.mainCharacters.push(_objectSpread(_objectSpread({}, c.data()), {}, {\n                      id: c.id\n                    }));\n                    console.log(characters);\n                    db.collection(\"chapters\").where(\"storyId\", \"==\", id).get().then(function (chapters) {\n                      var chapCharacters = [];\n                      chapters.forEach(function (chap) {\n                        console.log(chap.data());\n                        chapCharacters.push.apply(chapCharacters, _toConsumableArray(chap.data().characters));\n                        console.log(chapCharacters);\n                      });\n                    });\n                  });\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n};\nexport var getUserStories = function getUserStories() {\n  return function (dispatch) {\n    db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: GET_USER_STORIES,\n        payload: items\n      });\n    });\n  };\n};\nexport var getFavoriteStories = function getFavoriteStories() {\n  return function (dispatch) {\n    db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var favArr = [];\n      docs.forEach(function (doc) {\n        favArr = [].concat(_toConsumableArray(favArr), [doc.data().storyId]);\n      });\n      return favArr;\n    }).then(function (users) {\n      var result = users.map(function (user) {\n        return db.collection(\"stories\").doc(user).get();\n      });\n      Promise.all(result).then(function (res) {\n        var favUsers = [];\n        res.forEach(function (doc) {\n          return favUsers = [].concat(_toConsumableArray(favUsers), [_objectSpread({\n            id: doc.id\n          }, doc.data())]);\n        });\n        dispatch({\n          type: GET_FAVORITE_STORIES,\n          payload: favUsers\n        });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_STORY","GET_CHAPTERS","db","auth","getStory","id","dispatch","collection","doc","get","then","type","payload","data","getChapters","where","orderBy","onSnapshot","docs","arr","forEach","push","authorId","createdAt","number","title","commentsCount","getStoryCharacters","characters","mainCharacters","secondaryCharacters","mainsArr","char","mainsQuery","console","log","mains","c","chapters","chapCharacters","chap","getUserStories","currentUser","uid","items","getFavoriteStories","favArr","storyId","users","result","map","user","Promise","all","res","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n} from \"../../utils/constants\";\r\nimport { db, auth } from \"../fbConfig\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      dispatch({\r\n        type: GET_STORY,\r\n        payload: { ...doc.data(), id: doc.id },\r\n      });\r\n    });\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .orderBy(\"number\", \"asc\")\r\n    .onSnapshot((docs) => {\r\n      let arr = [];\r\n      docs.forEach((doc) => {\r\n        arr.push({\r\n          authorId: doc.data().authorId,\r\n          id: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          number: doc.data().number,\r\n          title: doc.data().title,\r\n          commentsCount: doc.data().commentsCount,\r\n        });\r\n      });\r\n      dispatch({\r\n        type: GET_CHAPTERS,\r\n        payload: arr,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getStoryCharacters = (id) => (dispatch) => {\r\n  let characters = { mainCharacters: [], secondaryCharacters: [] };\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then(async (doc) => {\r\n      const mainsArr = doc.data().mainCharacters;\r\n      const mainsQuery = await db.collection(\"characters\").doc(char).get();\r\n      console.log(mainsQuery);\r\n\r\n      mains.forEach((char) => {\r\n        db.collection(\"characters\")\r\n          .doc(char)\r\n          .get()\r\n          .then((c) => {\r\n            characters.mainCharacters.push({ ...c.data(), id: c.id });\r\n            console.log(characters);\r\n            db.collection(\"chapters\")\r\n              .where(\"storyId\", \"==\", id)\r\n              .get()\r\n              .then((chapters) => {\r\n                let chapCharacters = [];\r\n                chapters.forEach((chap) => {\r\n                  console.log(chap.data());\r\n                  chapCharacters.push(...chap.data().characters);\r\n                  console.log(chapCharacters);\r\n                });\r\n              });\r\n          });\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}