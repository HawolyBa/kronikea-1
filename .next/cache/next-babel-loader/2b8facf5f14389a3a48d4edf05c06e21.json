{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\profile\\\\LinkComp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input } from \"antd\";\n\nconst LinkComp = ({\n  name,\n  label,\n  info,\n  setInfo\n}) => {\n  return __jsx(Form.Item, {\n    name: name,\n    rules: [{\n      type: \"url\",\n      message: \"This field must be a valid url.\"\n    }, () => ({\n      validator(_, value) {\n        if (value.includes(name)) {\n          return Promise.resolve();\n        } else if (value.length === 0) {\n          return Promise.resolve();\n        } else {\n          return Promise.reject(new Error(`The link is not a valid ${label} url`));\n        }\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    addonBefore: __jsx(Tooltip, {\n      title: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(\"ion-icon\", {\n      name: `logo-${name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })),\n    addonAfter: __jsx(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }),\n    onChange: e => setInfo(_objectSpread(_objectSpread({}, info), {}, {\n      [name]: e.target.value\n    })),\n    value: info[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LinkComp;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/profile/LinkComp.js"],"names":["Form","Input","LinkComp","name","label","info","setInfo","type","message","validator","_","value","includes","Promise","resolve","length","reject","Error","e","target"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KAAoC;AACnD,SACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAE,CACL;AACEI,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADK,EAKL,OAAO;AACLC,MAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAClB,YAAIA,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxB,iBAAOU,OAAO,CAACC,OAAR,EAAP;AACD,SAFD,MAEO,IAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AAC7B,iBAAOF,OAAO,CAACC,OAAR,EAAP;AACD,SAFM,MAEA;AACL,iBAAOD,OAAO,CAACG,MAAR,CACL,IAAIC,KAAJ,CAAW,2BAA0Bb,KAAM,MAA3C,CADK,CAAP;AAGD;AACF;;AAXI,KAAP,CALK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE,MAAC,KAAD;AACE,IAAA,WAAW,EACT,MAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAU,MAAA,IAAI,EAAG,QAAOD,IAAK,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ;AAME,IAAA,UAAU,EAAE;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd;AAOE,IAAA,QAAQ,EAAGe,CAAD,IAAOZ,OAAO,iCAAMD,IAAN;AAAY,OAACF,IAAD,GAAQe,CAAC,CAACC,MAAF,CAASR;AAA7B,OAP1B;AAQE,IAAA,KAAK,EAAEN,IAAI,CAACF,IAAD,CARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AAmCD,CApCD;;AAsCA,eAAeD,QAAf","sourcesContent":["import { Form, Input } from \"antd\";\r\n\r\nconst LinkComp = ({ name, label, info, setInfo }) => {\r\n  return (\r\n    <Form.Item\r\n      name={name}\r\n      rules={[\r\n        {\r\n          type: \"url\",\r\n          message: \"This field must be a valid url.\",\r\n        },\r\n        () => ({\r\n          validator(_, value) {\r\n            if (value.includes(name)) {\r\n              return Promise.resolve();\r\n            } else if (value.length === 0) {\r\n              return Promise.resolve();\r\n            } else {\r\n              return Promise.reject(\r\n                new Error(`The link is not a valid ${label} url`)\r\n              );\r\n            }\r\n          },\r\n        }),\r\n      ]}\r\n    >\r\n      <Input\r\n        addonBefore={\r\n          <Tooltip title={label}>\r\n            <ion-icon name={`logo-${name}`}></ion-icon>\r\n          </Tooltip>\r\n        }\r\n        addonAfter={<ion-icon name=\"checkmark\"></ion-icon>}\r\n        onChange={(e) => setInfo({ ...info, [name]: e.target.value })}\r\n        value={info[name]}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default LinkComp;\r\n"]},"metadata":{},"sourceType":"module"}