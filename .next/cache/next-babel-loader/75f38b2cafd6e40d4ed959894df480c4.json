{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\components\\\\forms\\\\CustomEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from \"draft-js\";\nvar styleMap = {\n  CODE: {\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 4\n  },\n  BOLD: {\n    color: \"#395296\",\n    fontWeight: \"bold\"\n  },\n  ANYCUSTOMSTYLE: {\n    color: \"#00e400\"\n  }\n};\n\nvar CustomEditor = function CustomEditor() {\n  _s();\n\n  var _Reat$useState = Reat.useState({\n    editorState: EditorState.createWithContent(convertFromRaw(initialData)),\n    showToolbar: false,\n    windowWidth: 0,\n    toolbarMeasures: {\n      w: 0,\n      h: 0\n    },\n    selectionMeasures: {\n      w: 0,\n      h: 0\n    },\n    selectionCoordinates: {\n      x: 0,\n      y: 0\n    },\n    toolbarCoordinates: {\n      x: 0,\n      y: 0\n    },\n    showRawData: false\n  }),\n      _Reat$useState2 = _slicedToArray(_Reat$useState, 2),\n      state = _Reat$useState2[0],\n      setState = _Reat$useState2[1];\n\n  var onClickEditor = function onClickEditor() {\n    focus();\n    checkSelectedText();\n  };\n\n  var checkSelectedText = function checkSelectedText() {\n    if (true) {\n      var text = window.getSelection().toString();\n\n      if (text !== \"\") {\n        // 1-a Define the selection coordinates\n        setSelectionXY();\n      } else {\n        // Hide the toolbar if nothing is selected\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          showToolbar: false\n        }));\n      }\n    }\n  };\n\n  var setSelectionXY = function setSelectionXY() {\n    var r = window.getSelection().getRangeAt(0).getBoundingClientRect();\n    var relative = document.body.parentNode.getBoundingClientRect(); // 2-a Set the selection coordinates in the state\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      selectionCoordinates: r,\n      windowWidth: relative.width,\n      selectionMeasures: {\n        w: r.width,\n        h: r.height\n      }\n    }), function () {\n      return showToolbar();\n    });\n  };\n\n  var showToolbar = function showToolbar() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      showToolbar: true\n    }), function () {\n      return measureToolbar();\n    });\n  };\n\n  var measureToolbar = function measureToolbar() {\n    // 4-a Define the toolbar width and height, as it is now visible\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      toolbarMeasures: {\n        w: elemWidth,\n        h: elemHeight\n      }\n    }), function () {\n      return setToolbarXY();\n    });\n  };\n\n  var setToolbarXY = function setToolbarXY() {\n    var coordinates = {};\n    var selectionMeasures = state.selectionMeasures,\n        selectionCoordinates = state.selectionCoordinates,\n        toolbarMeasures = state.toolbarMeasures,\n        windowWidth = state.windowWidth;\n    var hiddenTop = selectionCoordinates.y < toolbarMeasures.h;\n    var hiddenRight = windowWidth - selectionCoordinates.x < toolbarMeasures.w / 2;\n    var hiddenLeft = selectionCoordinates.x < toolbarMeasures.w / 2;\n    var normalX = selectionCoordinates.x - toolbarMeasures.w / 2 + selectionMeasures.w / 2;\n    var normalY = selectionCoordinates.y - toolbarMeasures.h;\n    var invertedY = selectionCoordinates.y + selectionMeasures.h;\n    var moveXToLeft = windowWidth - toolbarMeasures.w;\n    var moveXToRight = 0;\n    coordinates = {\n      x: normalX,\n      y: normalY\n    };\n\n    if (hiddenTop) {\n      coordinates.y = invertedY;\n    }\n\n    if (hiddenRight) {\n      coordinates.x = moveXToLeft;\n    }\n\n    if (hiddenLeft) {\n      coordinates.x = moveXToRight;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      toolbarCoordinates: coordinates\n    }));\n  };\n\n  var toggleToolbar = function toggleToolbar(inlineStyle) {\n    onChange(RichUtils.toggleInlineStyle(state.editorState, inlineStyle));\n  };\n\n  var editorState = state.editorState;\n  React.useEffect(function () {\n    if (true) {\n      window.addEventListener(\"resize\", checkSelectedText);\n    }\n  }, [window]);\n  var toolbarStyle = {\n    display: state.showToolbar ? \"block\" : \"none\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    position: \"absolute\",\n    left: state.toolbarCoordinates.x,\n    top: state.toolbarCoordinates.y,\n    zIndex: 999,\n    padding: 10\n  };\n\n  var handleKeyCommand = function handleKeyCommand(command) {\n    var editorState = state.editorState;\n    var newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      onChange(newState);\n      return true;\n    }\n\n    return false;\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    ref: function ref(elem) {\n      elemWidth = elem ? elem.clientWidth : 0;\n      elemHeight = elem ? elem.clientHeight : 0;\n    },\n    style: toolbarStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, __jsx(ToolBar, {\n    editorState: editorState,\n    onToggle: toggleToolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    onClick: onClickEditor,\n    onBlur: checkSelectedText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, __jsx(Editor, {\n    customStyleMap: styleMap,\n    editorState: editorState,\n    handleKeyCommand: handleKeyCommand,\n    onChange: onChange,\n    placeholder: \"Tell a story...\",\n    editorKey: \"foobar\",\n    spellCheck: false,\n    ref: function ref(element) {\n      editor = element;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        showRawData: !state.showRawData\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, !state.showRawData ? \"Show\" : \"Hide\", \" Raw Data\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), state.showRawData && JSON.stringify(convertToRaw(editorState.getCurrentContent()))));\n};\n\n_s(CustomEditor, \"6is9J7COwmzP+XDirNCMmPCC+9g=\");\n\n_c = CustomEditor;\n\nvar ToolbarButton = function ToolbarButton(props) {\n  _s2();\n\n  var onToggle = function onToggle(e) {\n    e.preventDefault();\n    props.onToggle(props.style);\n  };\n\n  var _React$useState = React.useState({\n    padding: 10\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      buttonStyle = _React$useState2[0];\n\n  return __jsx(\"span\", {\n    onMouseDown: onToggle,\n    style: buttonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, props.label);\n};\n\n_s2(ToolbarButton, \"SwErKiwKVX/o8Ngk3OugoYr38oI=\");\n\n_c2 = ToolbarButton;\nvar toolbarItems = [{\n  label: \"Bold\",\n  style: \"BOLD\"\n}, {\n  label: \"Italic\",\n  style: \"ITALIC\"\n}, {\n  label: \"Underline\",\n  style: \"UNDERLINE\"\n}, {\n  label: \"Code\",\n  style: \"CODE\"\n}, {\n  label: \"Surprise\",\n  style: \"ANYCUSTOMSTYLE\"\n}];\n\nvar ToolBar = function ToolBar(props) {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, toolbarItems.map(function (toolbarItem) {\n    return __jsx(ToolbarButton, {\n      key: toolbarItem.label,\n      active: currentStyle.has(toolbarItem.style),\n      label: toolbarItem.label,\n      onToggle: props.onToggle,\n      style: toolbarItem.style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_c3 = ToolBar;\nvar initialData = {\n  blocks: [{\n    key: \"16d0k\",\n    text: \"You can edit this text.\",\n    type: \"unstyled\",\n    depth: 0,\n    inlineStyleRanges: [{\n      offset: 0,\n      length: 23,\n      style: \"BOLD\"\n    }],\n    entityRanges: [],\n    data: {}\n  }, {\n    key: \"98peq\",\n    text: \"\",\n    type: \"unstyled\",\n    depth: 0,\n    inlineStyleRanges: [],\n    entityRanges: [],\n    data: {}\n  }, {\n    key: \"ecmnc\",\n    text: \"Luke Skywalker has vanished. In his absence, the sinister FIRST ORDER has risen from the ashes of the Empire and will not rest until Skywalker, the last Jedi, has been destroyed.\",\n    type: \"unstyled\",\n    depth: 0,\n    inlineStyleRanges: [{\n      offset: 0,\n      length: 14,\n      style: \"BOLD\"\n    }, {\n      offset: 133,\n      length: 9,\n      style: \"BOLD\"\n    }],\n    entityRanges: [],\n    data: {}\n  }, {\n    key: \"fe2gn\",\n    text: \"\",\n    type: \"unstyled\",\n    depth: 0,\n    inlineStyleRanges: [],\n    entityRanges: [],\n    data: {}\n  }, {\n    key: \"4481k\",\n    text: \"With the support of the REPUBLIC, General Leia Organa leads a brave RESISTANCE. She is desperate to find her brother Luke and gain his help in restoring peace and justice to the galaxy.\",\n    type: \"unstyled\",\n    depth: 0,\n    inlineStyleRanges: [{\n      offset: 34,\n      length: 19,\n      style: \"BOLD\"\n    }, {\n      offset: 117,\n      length: 4,\n      style: \"BOLD\"\n    }, {\n      offset: 68,\n      length: 10,\n      style: \"ANYCUSTOMSTYLE\"\n    }],\n    entityRanges: [],\n    data: {}\n  }],\n  entityMap: {}\n};\nexport default CustomEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CustomEditor\");\n$RefreshReg$(_c2, \"ToolbarButton\");\n$RefreshReg$(_c3, \"ToolBar\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/components/forms/CustomEditor.js"],"names":["React","Editor","EditorState","RichUtils","convertToRaw","convertFromRaw","styleMap","CODE","backgroundColor","fontFamily","fontSize","padding","BOLD","color","fontWeight","ANYCUSTOMSTYLE","CustomEditor","Reat","useState","editorState","createWithContent","initialData","showToolbar","windowWidth","toolbarMeasures","w","h","selectionMeasures","selectionCoordinates","x","y","toolbarCoordinates","showRawData","state","setState","onClickEditor","focus","checkSelectedText","text","window","getSelection","toString","setSelectionXY","r","getRangeAt","getBoundingClientRect","relative","document","body","parentNode","width","height","measureToolbar","elemWidth","elemHeight","setToolbarXY","coordinates","hiddenTop","hiddenRight","hiddenLeft","normalX","normalY","invertedY","moveXToLeft","moveXToRight","toggleToolbar","inlineStyle","onChange","toggleInlineStyle","useEffect","addEventListener","toolbarStyle","display","position","left","top","zIndex","handleKeyCommand","command","newState","elem","clientWidth","clientHeight","element","editor","marginTop","JSON","stringify","getCurrentContent","ToolbarButton","props","onToggle","e","preventDefault","style","buttonStyle","label","toolbarItems","ToolBar","currentStyle","getCurrentInlineStyle","map","toolbarItem","has","blocks","key","type","depth","inlineStyleRanges","offset","length","entityRanges","data","entityMap"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Editor,\r\n  EditorState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\n\r\nconst styleMap = {\r\n  CODE: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n    fontSize: 16,\r\n    padding: 4,\r\n  },\r\n  BOLD: {\r\n    color: \"#395296\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  ANYCUSTOMSTYLE: {\r\n    color: \"#00e400\",\r\n  },\r\n};\r\n\r\nconst CustomEditor = () => {\r\n  const [state, setState] = Reat.useState({\r\n    editorState: EditorState.createWithContent(convertFromRaw(initialData)),\r\n    showToolbar: false,\r\n    windowWidth: 0,\r\n    toolbarMeasures: {\r\n      w: 0,\r\n      h: 0,\r\n    },\r\n    selectionMeasures: {\r\n      w: 0,\r\n      h: 0,\r\n    },\r\n    selectionCoordinates: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    toolbarCoordinates: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    showRawData: false,\r\n  });\r\n\r\n  const onClickEditor = () => {\r\n    focus();\r\n    checkSelectedText();\r\n  };\r\n\r\n  const checkSelectedText = () => {\r\n    if (typeof window !== \"undefined\") {\r\n      const text = window.getSelection().toString();\r\n      if (text !== \"\") {\r\n        // 1-a Define the selection coordinates\r\n        setSelectionXY();\r\n      } else {\r\n        // Hide the toolbar if nothing is selected\r\n        setState({\r\n          ...state,\r\n          showToolbar: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const setSelectionXY = () => {\r\n    var r = window.getSelection().getRangeAt(0).getBoundingClientRect();\r\n    var relative = document.body.parentNode.getBoundingClientRect();\r\n    // 2-a Set the selection coordinates in the state\r\n    setState(\r\n      {\r\n        ...state,\r\n        selectionCoordinates: r,\r\n        windowWidth: relative.width,\r\n        selectionMeasures: {\r\n          w: r.width,\r\n          h: r.height,\r\n        },\r\n      },\r\n      () => showToolbar()\r\n    );\r\n  };\r\n\r\n  const showToolbar = () => {\r\n    setState(\r\n      {\r\n        ...state,\r\n        showToolbar: true,\r\n      },\r\n      () => measureToolbar()\r\n    );\r\n  };\r\n\r\n  const measureToolbar = () => {\r\n    // 4-a Define the toolbar width and height, as it is now visible\r\n    setState(\r\n      {\r\n        ...state,\r\n        toolbarMeasures: {\r\n          w: elemWidth,\r\n          h: elemHeight,\r\n        },\r\n      },\r\n      () => setToolbarXY()\r\n    );\r\n  };\r\n\r\n  const setToolbarXY = () => {\r\n    let coordinates = {};\r\n\r\n    const {\r\n      selectionMeasures,\r\n      selectionCoordinates,\r\n      toolbarMeasures,\r\n      windowWidth,\r\n    } = state;\r\n\r\n    const hiddenTop = selectionCoordinates.y < toolbarMeasures.h;\r\n    const hiddenRight =\r\n      windowWidth - selectionCoordinates.x < toolbarMeasures.w / 2;\r\n    const hiddenLeft = selectionCoordinates.x < toolbarMeasures.w / 2;\r\n\r\n    const normalX =\r\n      selectionCoordinates.x - toolbarMeasures.w / 2 + selectionMeasures.w / 2;\r\n    const normalY = selectionCoordinates.y - toolbarMeasures.h;\r\n\r\n    const invertedY = selectionCoordinates.y + selectionMeasures.h;\r\n    const moveXToLeft = windowWidth - toolbarMeasures.w;\r\n    const moveXToRight = 0;\r\n\r\n    coordinates = {\r\n      x: normalX,\r\n      y: normalY,\r\n    };\r\n\r\n    if (hiddenTop) {\r\n      coordinates.y = invertedY;\r\n    }\r\n\r\n    if (hiddenRight) {\r\n      coordinates.x = moveXToLeft;\r\n    }\r\n\r\n    if (hiddenLeft) {\r\n      coordinates.x = moveXToRight;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      toolbarCoordinates: coordinates,\r\n    });\r\n  };\r\n\r\n  const toggleToolbar = (inlineStyle) => {\r\n    onChange(RichUtils.toggleInlineStyle(state.editorState, inlineStyle));\r\n  };\r\n\r\n  const { editorState } = state;\r\n\r\n  React.useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"resize\", checkSelectedText);\r\n    }\r\n  }, [window]);\r\n\r\n  const toolbarStyle = {\r\n    display: state.showToolbar ? \"block\" : \"none\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    left: state.toolbarCoordinates.x,\r\n    top: state.toolbarCoordinates.y,\r\n    zIndex: 999,\r\n    padding: 10,\r\n  };\r\n\r\n  const handleKeyCommand = (command) => {\r\n    const { editorState } = state;\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      onChange(newState);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={(elem) => {\r\n          elemWidth = elem ? elem.clientWidth : 0;\r\n          elemHeight = elem ? elem.clientHeight : 0;\r\n        }}\r\n        style={toolbarStyle}\r\n      >\r\n        <ToolBar editorState={editorState} onToggle={toggleToolbar} />\r\n      </div>\r\n      <div onClick={onClickEditor} onBlur={checkSelectedText}>\r\n        <Editor\r\n          customStyleMap={styleMap}\r\n          editorState={editorState}\r\n          handleKeyCommand={handleKeyCommand}\r\n          onChange={onChange}\r\n          placeholder=\"Tell a story...\"\r\n          editorKey=\"foobar\"\r\n          spellCheck={false}\r\n          ref={(element) => {\r\n            editor = element;\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{ marginTop: 40 }}>\r\n        <button\r\n          onClick={() =>\r\n            setState({ ...state, showRawData: !state.showRawData })\r\n          }\r\n        >\r\n          {!state.showRawData ? \"Show\" : \"Hide\"} Raw Data\r\n        </button>\r\n        <br />\r\n        {state.showRawData &&\r\n          JSON.stringify(convertToRaw(editorState.getCurrentContent()))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ToolbarButton = (props) => {\r\n  const onToggle = (e) => {\r\n    e.preventDefault();\r\n    props.onToggle(props.style);\r\n  };\r\n\r\n  const [buttonStyle] = React.useState({ padding: 10 });\r\n\r\n  return (\r\n    <span onMouseDown={onToggle} style={buttonStyle}>\r\n      {props.label}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst toolbarItems = [\r\n  { label: \"Bold\", style: \"BOLD\" },\r\n  { label: \"Italic\", style: \"ITALIC\" },\r\n  { label: \"Underline\", style: \"UNDERLINE\" },\r\n  { label: \"Code\", style: \"CODE\" },\r\n  { label: \"Surprise\", style: \"ANYCUSTOMSTYLE\" },\r\n];\r\n\r\nconst ToolBar = (props) => {\r\n  const currentStyle = props.editorState.getCurrentInlineStyle();\r\n  return (\r\n    <div>\r\n      {toolbarItems.map((toolbarItem) => (\r\n        <ToolbarButton\r\n          key={toolbarItem.label}\r\n          active={currentStyle.has(toolbarItem.style)}\r\n          label={toolbarItem.label}\r\n          onToggle={props.onToggle}\r\n          style={toolbarItem.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst initialData = {\r\n  blocks: [\r\n    {\r\n      key: \"16d0k\",\r\n      text: \"You can edit this text.\",\r\n      type: \"unstyled\",\r\n      depth: 0,\r\n      inlineStyleRanges: [{ offset: 0, length: 23, style: \"BOLD\" }],\r\n      entityRanges: [],\r\n      data: {},\r\n    },\r\n    {\r\n      key: \"98peq\",\r\n      text: \"\",\r\n      type: \"unstyled\",\r\n      depth: 0,\r\n      inlineStyleRanges: [],\r\n      entityRanges: [],\r\n      data: {},\r\n    },\r\n    {\r\n      key: \"ecmnc\",\r\n      text:\r\n        \"Luke Skywalker has vanished. In his absence, the sinister FIRST ORDER has risen from the ashes of the Empire and will not rest until Skywalker, the last Jedi, has been destroyed.\",\r\n      type: \"unstyled\",\r\n      depth: 0,\r\n      inlineStyleRanges: [\r\n        { offset: 0, length: 14, style: \"BOLD\" },\r\n        { offset: 133, length: 9, style: \"BOLD\" },\r\n      ],\r\n      entityRanges: [],\r\n      data: {},\r\n    },\r\n    {\r\n      key: \"fe2gn\",\r\n      text: \"\",\r\n      type: \"unstyled\",\r\n      depth: 0,\r\n      inlineStyleRanges: [],\r\n      entityRanges: [],\r\n      data: {},\r\n    },\r\n    {\r\n      key: \"4481k\",\r\n      text:\r\n        \"With the support of the REPUBLIC, General Leia Organa leads a brave RESISTANCE. She is desperate to find her brother Luke and gain his help in restoring peace and justice to the galaxy.\",\r\n      type: \"unstyled\",\r\n      depth: 0,\r\n      inlineStyleRanges: [\r\n        { offset: 34, length: 19, style: \"BOLD\" },\r\n        { offset: 117, length: 4, style: \"BOLD\" },\r\n        { offset: 68, length: 10, style: \"ANYCUSTOMSTYLE\" },\r\n      ],\r\n      entityRanges: [],\r\n      data: {},\r\n    },\r\n  ],\r\n  entityMap: {},\r\n};\r\n\r\nexport default CustomEditor;\r\n"]},"metadata":{},"sourceType":"module"}