{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_USER_CHARACTERS } from \"../../utils/constants\";\nconst initialState = {\n  userCharacters: [],\n  loading: true\n};\n\nconst charactersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_CHARACTERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        userCharacters: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default charactersReducer;","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/reducers/charactersReducer.js"],"names":["GET_USER_CHARACTERS","initialState","userCharacters","loading","charactersReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,mBAAT,QAAoC,uBAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,EADG;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,mBAAL;AACE,6CACKK,KADL;AAEEF,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAHzB;;AAKF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,iBAAf","sourcesContent":["import { GET_USER_CHARACTERS } from \"../../utils/constants\";\r\n\r\nconst initialState = {\r\n  userCharacters: [],\r\n  loading: true,\r\n};\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userCharacters: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default charactersReducer;\r\n"]},"metadata":{},"sourceType":"module"}