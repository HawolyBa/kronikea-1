{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { addCharacter, getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../components/forms/CharacterForm\";\n\nconst newCharacter = props => {\n  const {\n    characters,\n    characterId,\n    loadingCharacter\n  } = props;\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      public: visibility\n    });\n  }, [visibility]);\n  React.useEffect(() => {\n    if (characterId) {\n      router.push(`/character/${characterId}`);\n    }\n  }, [characterId]);\n\n  const onFailed = () => {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  const submit = values => {\n    props.addCharacter(_objectSpread(_objectSpread({}, values), {}, {\n      authorId: auth.user.uid,\n      authorName: auth.user.username,\n      authorImage: auth.user.image ? auth.user.image : \"\"\n    }));\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"new-character custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), __jsx(CharacterForm, {\n    submit: submit,\n    onFailed: onFailed,\n    form: form,\n    characters: characters,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    loadingCharacter: loadingCharacter,\n    type: \"add\",\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      age: 0,\n      public: true,\n      ethnicity: \"\",\n      group: \"\",\n      residence: \"\",\n      description: \"\",\n      nickname: \"\",\n      occupation: \"\",\n      relatives: []\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  loadingCharacter: state.characters.loadingCharacter,\n  characterId: state.characters.characterId\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  addCharacter\n})(newCharacter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/new.js"],"names":["React","useRouter","Form","message","connect","useAuth","addCharacter","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","newCharacter","props","characters","characterId","loadingCharacter","auth","form","useForm","router","visibility","setVisibility","useState","useEffect","user","uid","setFieldsValue","public","push","onFailed","window","scrollTo","error","submit","values","authorId","authorName","username","authorImage","image","isLoading","firstname","lastname","age","ethnicity","group","residence","description","nickname","occupation","relatives","mapStateToProps","state","userCharacters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport {\r\n  addCharacter,\r\n  getUserCharacters,\r\n} from \"../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../components/forms/CharacterForm\";\r\n\r\nconst newCharacter = (props) => {\r\n  const { characters, characterId, loadingCharacter } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  React.useEffect(() => {\r\n    if (characterId) {\r\n      router.push(`/character/${characterId}`);\r\n    }\r\n  }, [characterId]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    props.addCharacter({\r\n      ...values,\r\n      authorId: auth.user.uid,\r\n      authorName: auth.user.username,\r\n      authorImage: auth.user.image ? auth.user.image : \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <div className=\"new-character custom-form\">\r\n          <div className=\"inner\">\r\n            <h2 className=\"side-heading\">Add a new character</h2>\r\n            <CharacterForm\r\n              submit={submit}\r\n              onFailed={onFailed}\r\n              form={form}\r\n              characters={characters}\r\n              visibility={visibility}\r\n              setVisibility={setVisibility}\r\n              loadingCharacter={loadingCharacter}\r\n              type=\"add\"\r\n              initialValues={{\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                age: 0,\r\n                public: true,\r\n                ethnicity: \"\",\r\n                group: \"\",\r\n                residence: \"\",\r\n                description: \"\",\r\n                nickname: \"\",\r\n                occupation: \"\",\r\n                relatives: [],\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  loadingCharacter: state.characters.loadingCharacter,\r\n  characterId: state.characters.characterId,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addCharacter })(\r\n  newCharacter\r\n);\r\n"]},"metadata":{},"sourceType":"module"}