{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { addCharacter, getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../components/forms/CharacterForm\";\n\nvar newCharacter = function newCharacter(props) {\n  _s();\n\n  var characters = props.characters,\n      characterId = props.characterId,\n      loadingCharacter = props.loadingCharacter;\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visibility = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      \"public\": visibility\n    });\n  }, [visibility]);\n  React.useEffect(function () {\n    if (characterId) {\n      router.push(\"/character/\".concat(characterId));\n    }\n  }, [characterId]);\n\n  var onFailed = function onFailed() {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  var submit = function submit(values) {\n    // props.addCharacter({\n    //   ...values,\n    //   authorId: auth.user.uid,\n    //   authorName: auth.user.username,\n    //   authorImage: auth.user.image ? auth.user.image : \"\",\n    // });\n    console.log(values);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"new-character custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), __jsx(CharacterForm, {\n    submit: submit,\n    onFailed: onFailed,\n    form: form,\n    characters: characters,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    loadingCharacter: loadingCharacter,\n    type: \"add\",\n    initialValues: {\n      firstname: \"\",\n      lastname: \"\",\n      age: 0,\n      gender: \"\",\n      \"public\": true,\n      ethnicity: \"\",\n      group: \"\",\n      residence: \"\",\n      description: \"\",\n      nickname: \"\",\n      occupation: \"\",\n      relatives: []\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(newCharacter, \"BmEDB6/Oq88cPR3EHWBrfisvGxw=\", false, function () {\n  return [useAuth, Form.useForm, useRouter];\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    loadingCharacter: state.characters.loadingCharacter,\n    characterId: state.characters.characterId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  addCharacter: addCharacter\n})(newCharacter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/new.js"],"names":["React","useRouter","Form","message","connect","useAuth","addCharacter","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","newCharacter","props","characters","characterId","loadingCharacter","auth","useForm","form","router","useState","visibility","setVisibility","useEffect","user","uid","setFieldsValue","push","onFailed","window","scrollTo","error","submit","values","console","log","isLoading","firstname","lastname","age","gender","ethnicity","group","residence","description","nickname","occupation","relatives","mapStateToProps","state","userCharacters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport {\r\n  addCharacter,\r\n  getUserCharacters,\r\n} from \"../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../components/forms/CharacterForm\";\r\n\r\nconst newCharacter = (props) => {\r\n  const { characters, characterId, loadingCharacter } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  React.useEffect(() => {\r\n    if (characterId) {\r\n      router.push(`/character/${characterId}`);\r\n    }\r\n  }, [characterId]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    // props.addCharacter({\r\n    //   ...values,\r\n    //   authorId: auth.user.uid,\r\n    //   authorName: auth.user.username,\r\n    //   authorImage: auth.user.image ? auth.user.image : \"\",\r\n    // });\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <div className=\"new-character custom-form\">\r\n          <div className=\"inner\">\r\n            <h2 className=\"side-heading\">Add a new character</h2>\r\n            <CharacterForm\r\n              submit={submit}\r\n              onFailed={onFailed}\r\n              form={form}\r\n              characters={characters}\r\n              visibility={visibility}\r\n              setVisibility={setVisibility}\r\n              loadingCharacter={loadingCharacter}\r\n              type=\"add\"\r\n              initialValues={{\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                age: 0,\r\n                gender: \"\",\r\n                public: true,\r\n                ethnicity: \"\",\r\n                group: \"\",\r\n                residence: \"\",\r\n                description: \"\",\r\n                nickname: \"\",\r\n                occupation: \"\",\r\n                relatives: [],\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  loadingCharacter: state.characters.loadingCharacter,\r\n  characterId: state.characters.characterId,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addCharacter })(\r\n  newCharacter\r\n);\r\n"]},"metadata":{},"sourceType":"module"}