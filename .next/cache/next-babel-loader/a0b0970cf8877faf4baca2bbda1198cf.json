{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Image, Divider, Space, Empty } from \"antd\";\nimport { dummy } from \"../../../utils/dummy\";\nimport { getCharacter, getUserCharacters } from \"../../../redux/actions/charactersActions\";\nimport Comments from \"../../../components/chapter/Comments\";\nimport CharacterCard from \"../../../components/common/CharacterCard\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport WithLink from \"../../../components/hoc/withLink\";\n\nconst Character = props => {\n  const {\n    character,\n    loading,\n    charaExists,\n    userCharacters\n  } = props;\n  const router = useRouter();\n  const auth = useAuth();\n  const [relatives, setRelatives] = React.useState([]);\n  React.useEffect(() => {\n    props.getCharacter(router.query.id);\n  }, [router.query.id]);\n  React.useEffect(() => {\n    if (character.authorId && character.public || auth.user && character.authorId === auth.user.uid) {\n      props.getUserCharacters(character.authorId);\n    }\n  }, [character, auth]);\n  React.useEffect(() => {\n    if (userCharacters.length > 0 && character.relatives.length > 0) {\n      setRelatives(character.relatives.map(c => ({\n        firstname: userCharacters.find(char => char.id === c.character_id).firstname,\n        lastname: userCharacters.find(char => char.id === c.character_id).lastname,\n        image: userCharacters.find(char => char.id === c.character_id).image,\n        id: userCharacters.find(char => char.id === c.character_id).id,\n        relation: c.relation,\n        public: userCharacters.find(char => char.id === c.character_id).public\n      })).filter(c => auth.user.uid !== character.authorId ? c.public : c));\n    }\n  }, [userCharacters]);\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: charaExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: character.public || character.authorId === auth.user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"main-character\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(\"section\", {\n    className: \"character-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"character-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: \"/profile/1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, __jsx(Space, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: character.authorImage ? character.authorImage : dummy.avatar,\n    alt: character.authorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, __jsx(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }\n  }, \"Author:\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }\n  }, character.authorName)))))), auth.user && auth.user.uid === character.authorId ? __jsx(\"div\", {\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, __jsx(WithLink, {\n    link: `/character/${character.id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(Space, {\n    size: 5,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Edit\")))) : __jsx(\"div\", {\n    className: \"like-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, __jsx(Space, {\n    size: 5,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, \"Like\")))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, `${character.firstname} ${character.lastname && character.lastname}`), __jsx(\"div\", {\n    className: \"character-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: character.image ? character.image : dummy.avatar,\n    width: \"100%\",\n    height: 600,\n    alt: \"character\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }))), __jsx(\"div\", {\n    className: \"character-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Biography\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, character.description)), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"character-relationships\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Relationships\"), relatives.length > 0 ? __jsx(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, relatives === null || relatives === void 0 ? void 0 : relatives.map(r => __jsx(Col, {\n    md: 8,\n    lg: 6,\n    key: r.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, __jsx(WithLink, {\n    link: `/character/${r.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, __jsx(CharacterCard, {\n    type: \"show\",\n    character: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 27\n    }\n  }))))) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }))), __jsx(\"section\", {\n    className: \"character-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Feedback\"), __jsx(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  character: state.characters.character,\n  loading: state.characters.loading,\n  charaExists: state.characters.charaExists,\n  userCharacters: state.characters.userCharacters\n});\n\nexport default connect(mapStateToProps, {\n  getCharacter,\n  getUserCharacters\n})(Character);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/[id]/index.js"],"names":["React","Link","useRouter","connect","Row","Col","Image","Divider","Space","Empty","dummy","getCharacter","getUserCharacters","Comments","CharacterCard","LoadingScreen","RedirectComp","useAuth","WithLink","Character","props","character","loading","charaExists","userCharacters","router","auth","relatives","setRelatives","useState","useEffect","query","id","authorId","public","user","uid","length","map","c","firstname","find","char","character_id","lastname","image","relation","filter","authorImage","avatar","authorName","description","r","PRESENTED_IMAGE_SIMPLE","mapStateToProps","state","characters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Image, Divider, Space, Empty } from \"antd\";\r\n\r\nimport { dummy } from \"../../../utils/dummy\";\r\nimport {\r\n  getCharacter,\r\n  getUserCharacters,\r\n} from \"../../../redux/actions/charactersActions\";\r\n\r\nimport Comments from \"../../../components/chapter/Comments\";\r\nimport CharacterCard from \"../../../components/common/CharacterCard\";\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport WithLink from \"../../../components/hoc/withLink\";\r\n\r\nconst Character = (props) => {\r\n  const { character, loading, charaExists, userCharacters } = props;\r\n  const router = useRouter();\r\n  const auth = useAuth();\r\n\r\n  const [relatives, setRelatives] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    props.getCharacter(router.query.id);\r\n  }, [router.query.id]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      (character.authorId && character.public) ||\r\n      (auth.user && character.authorId === auth.user.uid)\r\n    ) {\r\n      props.getUserCharacters(character.authorId);\r\n    }\r\n  }, [character, auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (userCharacters.length > 0 && character.relatives.length > 0) {\r\n      setRelatives(\r\n        character.relatives\r\n          .map((c) => ({\r\n            firstname: userCharacters.find((char) => char.id === c.character_id)\r\n              .firstname,\r\n            lastname: userCharacters.find((char) => char.id === c.character_id)\r\n              .lastname,\r\n            image: userCharacters.find((char) => char.id === c.character_id)\r\n              .image,\r\n            id: userCharacters.find((char) => char.id === c.character_id).id,\r\n            relation: c.relation,\r\n            public: userCharacters.find((char) => char.id === c.character_id)\r\n              .public,\r\n          }))\r\n          .filter((c) => (auth.user.uid !== character.authorId ? c.public : c))\r\n      );\r\n    }\r\n  }, [userCharacters]);\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={charaExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={character.public || character.authorId === auth.user.uid}\r\n        >\r\n          <div className=\"main-character\">\r\n            <section className=\"character-page\">\r\n              <div className=\"character-meta\">\r\n                <Link href=\"/profile/1\">\r\n                  <a>\r\n                    <Space align=\"center\">\r\n                      <div className=\"avatar\">\r\n                        <img\r\n                          src={\r\n                            character.authorImage\r\n                              ? character.authorImage\r\n                              : dummy.avatar\r\n                          }\r\n                          alt={character.authorName}\r\n                        />\r\n                      </div>\r\n                      <h5>\r\n                        <Space direction=\"vertical\">\r\n                          <span>Author:</span>\r\n                          <span>{character.authorName}</span>\r\n                        </Space>\r\n                      </h5>\r\n                    </Space>\r\n                  </a>\r\n                </Link>\r\n                {auth.user && auth.user.uid === character.authorId ? (\r\n                  <div className=\"edit-btn\">\r\n                    <WithLink link={`/character/${character.id}/edit`}>\r\n                      <Space size={5} align=\"center\">\r\n                        <ion-icon name=\"create\"></ion-icon>\r\n                        <span>Edit</span>\r\n                      </Space>\r\n                    </WithLink>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"like-btn\">\r\n                    <Space size={5} align=\"center\">\r\n                      <ion-icon name=\"heart\"></ion-icon>\r\n                      <span>Like</span>\r\n                    </Space>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <h2>{`${character.firstname} ${\r\n                character.lastname && character.lastname\r\n              }`}</h2>\r\n              <div className=\"character-image\">\r\n                <div className=\"img-container\">\r\n                  <Image\r\n                    src={character.image ? character.image : dummy.avatar}\r\n                    width={\"100%\"}\r\n                    height={600}\r\n                    alt=\"character\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"character-description\">\r\n                <h3 className=\"desc-title\">Biography</h3>\r\n                <p>{character.description}</p>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"character-relationships\">\r\n                <h3 className=\"desc-title\">Relationships</h3>\r\n                {relatives.length > 0 ? (\r\n                  <Row gutter={[16, 16]}>\r\n                    {relatives?.map((r) => (\r\n                      <Col md={8} lg={6} key={r.id}>\r\n                        <WithLink link={`/character/${r.id}`}>\r\n                          <CharacterCard type=\"show\" character={r} />\r\n                        </WithLink>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n              </div>\r\n            </section>\r\n            <section className=\"character-feedback\">\r\n              <h3 className=\"side-heading\">Feedback</h3>\r\n              <Comments />\r\n            </section>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  character: state.characters.character,\r\n  loading: state.characters.loading,\r\n  charaExists: state.characters.charaExists,\r\n  userCharacters: state.characters.userCharacters,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCharacter,\r\n  getUserCharacters,\r\n})(Character);\r\n"]},"metadata":{},"sourceType":"module"}