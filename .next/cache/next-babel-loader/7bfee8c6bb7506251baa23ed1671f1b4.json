{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nimport { Image, Divider, Space, Empty, Descriptions, Row, Col, message } from \"antd\";\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { dummy } from \"../../../utils/dummy\";\nimport { getCharacter, submitCharaterFeedback, getCharacterComments, deleteCharacterComment, rateComment, addCharacterToFavorite, removeCharacterFromFavorite, isCharacterFavorite } from \"../../../redux/actions/charactersActions\";\nimport Comments from \"../../../components/character/Comments\";\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\nimport { useAuth } from \"../../../hooks/userHooks\";\nimport { CharacterGrid } from \"../../../components/common/Grid\";\nimport Like from \"../../../components/common/Like\";\n\nconst Character = props => {\n  const {\n    character,\n    loading,\n    charaExists,\n    comments,\n    loadingComments,\n    confirmMessage,\n    userComment,\n    rated,\n    isFavorite,\n    loadingFav\n  } = props;\n  const router = useRouter();\n  const auth = useAuth();\n  React.useEffect(() => {\n    props.getCharacter(router.query.id, \"show\");\n    props.getCharacterComments(router.query.id);\n\n    if (!auth.isLoading) {\n      isCharacterFavorite(router.query.id);\n    }\n  }, [router.query.id, auth]);\n  React.useEffect(() => {\n    if (rated) props.getCharacterComments(router.query.id);\n  }, [rated]);\n  React.useEffect(() => {\n    if (confirmMessage) {\n      message.success(confirmMessage);\n      props.getCharacterComments(router.query.id);\n    }\n  }, [confirmMessage]);\n  console.log(isFavorite);\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: charaExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: character.public || character.authorId === auth.user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"main-character\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(\"section\", {\n    className: \"character-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"character-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    href: `/profile/${character.authorId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, __jsx(Space, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, __jsx(\"img\", {\n    src: character.userImage ? character.userImage : dummy.avatar,\n    alt: character.authorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, \"Author: \", character.authorName)))), auth.user && auth.user.uid === character.authorId ? __jsx(\"div\", {\n    className: \"edit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    href: `/character/${character.id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }\n  }, __jsx(Space, {\n    size: 5,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(\"ion-icon\", {\n    name: \"create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }\n  }, \"Edit\"))))) : __jsx(Like, {\n    id: router.query.id,\n    authorId: character.authorId,\n    title: `${character.firstname} ${character.lastname ? character.lastname : \"\"}`,\n    type: \"character\",\n    isFavorite: isFavorite,\n    likeFunc: props.addCharacterToFavorite,\n    username: auth.user && auth.user.username,\n    removeFunc: props.removeCharacterFromFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, `${character.firstname} ${character.lastname && character.lastname}`), __jsx(\"div\", {\n    className: \"character-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: character.image ? character.image : dummy.noImage,\n    width: \"100%\",\n    height: 600,\n    alt: \"character\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }))), __jsx(\"div\", {\n    className: \"character-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Biography\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, character.description ? character.description : __jsx(\"span\", {\n    className: \"na\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"No description yet\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }), __jsx(Descriptions, {\n    title: \"Character Info\",\n    layout: \"vertical\",\n    labelStyle: {\n      fontWeight: \"bolder\"\n    },\n    contentStyle: {\n      paddingBottom: 0\n    },\n    colon: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, __jsx(Descriptions.Item, {\n    label: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, character.age ? character.age : \"N/A\"), __jsx(Descriptions.Item, {\n    label: \"Gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, character.gender ? character.gender : \"N/A\"), __jsx(Descriptions.Item, {\n    label: \"Ethnicity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, character.ethnicity ? character.ethnicity : \"N/A\"), __jsx(Descriptions.Item, {\n    label: \"Occupation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, character.occupation ? character.occupation : \"N/A\"), __jsx(Descriptions.Item, {\n    label: \"Group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, character.group ? character.group : \"N/A\"), __jsx(Descriptions.Item, {\n    label: \"Residence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, character.residence ? character.residence : \"N/A\")), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"character-relationships\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Relationships\"), character.relatives ? __jsx(CharacterGrid, {\n    gutter: \"16px\",\n    type: \"show\",\n    columnsCountBreakPoints: {\n      350: 1,\n      750: 2,\n      900: 3,\n      1200: 4,\n      1600: 4\n    },\n    characters: character.relatives,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"character-stories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Stories\"), __jsx(ResponsiveMasonry, {\n    columnsCountBreakPoints: {\n      350: 1,\n      750: 2,\n      900: 2,\n      1200: 3,\n      1600: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, __jsx(Masonry, {\n    gutter: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, character.stories ? character.stories.map(story => __jsx(Link, {\n    key: story.id,\n    href: `/story/${story.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 27\n    }\n  }, __jsx(\"figure\", {\n    className: \"card story-card story-card-mini\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 31\n    }\n  }, __jsx(\"img\", {\n    src: story.banner,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  })), __jsx(\"figcaption\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 31\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, story === null || story === void 0 ? void 0 : story.title)))))) : __jsx(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }))))), __jsx(Comments, {\n    userComment: userComment,\n    comments: comments,\n    character: character,\n    auth: auth,\n    submit: props.submitCharaterFeedback,\n    loadingComments: loadingComments,\n    deleteComment: props.deleteCharacterComment,\n    rateComment: props.rateComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  character: state.characters.character,\n  loading: state.characters.loading,\n  charaExists: state.characters.charaExists,\n  comments: state.stories.comments,\n  loadingComments: state.stories.loadingComments,\n  confirmMessage: state.stories.message,\n  userComment: state.stories.userComment,\n  rated: state.stories.rated,\n  isFavorite: state.characters.isFavorite,\n  loadingFav: state.characters.loadingFav\n});\n\nexport default connect(mapStateToProps, {\n  getCharacter,\n  submitCharaterFeedback,\n  getCharacterComments,\n  deleteCharacterComment,\n  rateComment,\n  addCharacterToFavorite,\n  removeCharacterFromFavorite,\n  isCharacterFavorite\n})(Character);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/[id]/index.js"],"names":["React","Link","useRouter","connect","Image","Divider","Space","Empty","Descriptions","Row","Col","message","Masonry","ResponsiveMasonry","dummy","getCharacter","submitCharaterFeedback","getCharacterComments","deleteCharacterComment","rateComment","addCharacterToFavorite","removeCharacterFromFavorite","isCharacterFavorite","Comments","LoadingScreen","RedirectComp","useAuth","CharacterGrid","Like","Character","props","character","loading","charaExists","comments","loadingComments","confirmMessage","userComment","rated","isFavorite","loadingFav","router","auth","useEffect","query","id","isLoading","success","console","log","public","authorId","user","uid","userImage","avatar","authorName","firstname","lastname","username","image","noImage","description","fontWeight","paddingBottom","age","gender","ethnicity","occupation","group","residence","relatives","PRESENTED_IMAGE_SIMPLE","stories","map","story","banner","title","mapStateToProps","state","characters"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Image,\r\n  Divider,\r\n  Space,\r\n  Empty,\r\n  Descriptions,\r\n  Row,\r\n  Col,\r\n  message,\r\n} from \"antd\";\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\r\n\r\nimport { dummy } from \"../../../utils/dummy\";\r\nimport {\r\n  getCharacter,\r\n  submitCharaterFeedback,\r\n  getCharacterComments,\r\n  deleteCharacterComment,\r\n  rateComment,\r\n  addCharacterToFavorite,\r\n  removeCharacterFromFavorite,\r\n  isCharacterFavorite,\r\n} from \"../../../redux/actions/charactersActions\";\r\n\r\nimport Comments from \"../../../components/character/Comments\";\r\nimport LoadingScreen from \"../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../components/hoc/RedirectComp\";\r\nimport { useAuth } from \"../../../hooks/userHooks\";\r\nimport { CharacterGrid } from \"../../../components/common/Grid\";\r\nimport Like from \"../../../components/common/Like\";\r\n\r\nconst Character = (props) => {\r\n  const {\r\n    character,\r\n    loading,\r\n    charaExists,\r\n    comments,\r\n    loadingComments,\r\n    confirmMessage,\r\n    userComment,\r\n    rated,\r\n    isFavorite,\r\n    loadingFav,\r\n  } = props;\r\n  const router = useRouter();\r\n  const auth = useAuth();\r\n\r\n  React.useEffect(() => {\r\n    props.getCharacter(router.query.id, \"show\");\r\n    props.getCharacterComments(router.query.id);\r\n    if (!auth.isLoading) {\r\n      isCharacterFavorite(router.query.id);\r\n    }\r\n  }, [router.query.id, auth]);\r\n\r\n  React.useEffect(() => {\r\n    if (rated) props.getCharacterComments(router.query.id);\r\n  }, [rated]);\r\n\r\n  React.useEffect(() => {\r\n    if (confirmMessage) {\r\n      message.success(confirmMessage);\r\n      props.getCharacterComments(router.query.id);\r\n    }\r\n  }, [confirmMessage]);\r\n\r\n  console.log(isFavorite);\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={charaExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={character.public || character.authorId === auth.user.uid}\r\n        >\r\n          <div className=\"main-character\">\r\n            <section className=\"character-page\">\r\n              <div className=\"character-meta\">\r\n                <Link href={`/profile/${character.authorId}`}>\r\n                  <a>\r\n                    <Space align=\"center\">\r\n                      <div className=\"avatar\">\r\n                        <img\r\n                          src={\r\n                            character.userImage\r\n                              ? character.userImage\r\n                              : dummy.avatar\r\n                          }\r\n                          alt={character.authorName}\r\n                        />\r\n                      </div>\r\n                      <h5>Author: {character.authorName}</h5>\r\n                    </Space>\r\n                  </a>\r\n                </Link>\r\n                {auth.user && auth.user.uid === character.authorId ? (\r\n                  <div className=\"edit-btn\">\r\n                    <Link href={`/character/${character.id}/edit`}>\r\n                      <a>\r\n                        <Space size={5} align=\"center\">\r\n                          <ion-icon name=\"create\"></ion-icon>\r\n                          <span>Edit</span>\r\n                        </Space>\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <Like\r\n                    id={router.query.id}\r\n                    authorId={character.authorId}\r\n                    title={`${character.firstname} ${\r\n                      character.lastname ? character.lastname : \"\"\r\n                    }`}\r\n                    type=\"character\"\r\n                    isFavorite={isFavorite}\r\n                    likeFunc={props.addCharacterToFavorite}\r\n                    username={auth.user && auth.user.username}\r\n                    removeFunc={props.removeCharacterFromFavorite}\r\n                  />\r\n                )}\r\n              </div>\r\n              <h2>{`${character.firstname} ${\r\n                character.lastname && character.lastname\r\n              }`}</h2>\r\n              <div className=\"character-image\">\r\n                <div className=\"img-container\">\r\n                  <Image\r\n                    src={character.image ? character.image : dummy.noImage}\r\n                    width={\"100%\"}\r\n                    height={600}\r\n                    alt=\"character\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"character-description\">\r\n                <h3 className=\"desc-title\">Biography</h3>\r\n                <p>\r\n                  {character.description ? (\r\n                    character.description\r\n                  ) : (\r\n                    <span className=\"na\">No description yet</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <Divider />\r\n              <Descriptions\r\n                title=\"Character Info\"\r\n                layout=\"vertical\"\r\n                labelStyle={{ fontWeight: \"bolder\" }}\r\n                contentStyle={{ paddingBottom: 0 }}\r\n                colon={false}\r\n              >\r\n                <Descriptions.Item label=\"Age\">\r\n                  {character.age ? character.age : \"N/A\"}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Gender\">\r\n                  {character.gender ? character.gender : \"N/A\"}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Ethnicity\">\r\n                  {character.ethnicity ? character.ethnicity : \"N/A\"}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Occupation\">\r\n                  {character.occupation ? character.occupation : \"N/A\"}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Group\">\r\n                  {character.group ? character.group : \"N/A\"}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Residence\">\r\n                  {character.residence ? character.residence : \"N/A\"}\r\n                </Descriptions.Item>\r\n              </Descriptions>\r\n              <Divider />\r\n              <div className=\"character-relationships\">\r\n                <h3 className=\"desc-title\">Relationships</h3>\r\n                {character.relatives ? (\r\n                  <CharacterGrid\r\n                    gutter={\"16px\"}\r\n                    type=\"show\"\r\n                    columnsCountBreakPoints={{\r\n                      350: 1,\r\n                      750: 2,\r\n                      900: 3,\r\n                      1200: 4,\r\n                      1600: 4,\r\n                    }}\r\n                    characters={character.relatives}\r\n                  />\r\n                ) : (\r\n                  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n              </div>\r\n              <Divider />\r\n              <div className=\"character-stories\">\r\n                <h3 className=\"desc-title\">Stories</h3>\r\n                <ResponsiveMasonry\r\n                  columnsCountBreakPoints={{\r\n                    350: 1,\r\n                    750: 2,\r\n                    900: 2,\r\n                    1200: 3,\r\n                    1600: 3,\r\n                  }}\r\n                >\r\n                  <Masonry gutter={\"16px\"}>\r\n                    {character.stories ? (\r\n                      character.stories.map((story) => (\r\n                        <Link key={story.id} href={`/story/${story.id}`}>\r\n                          <a>\r\n                            <figure className=\"card story-card story-card-mini\">\r\n                              <div className=\"img-container\">\r\n                                <img src={story.banner} alt=\"image\" />\r\n                              </div>\r\n                              <figcaption>\r\n                                <h3>{story?.title}</h3>\r\n                              </figcaption>\r\n                            </figure>\r\n                          </a>\r\n                        </Link>\r\n                      ))\r\n                    ) : (\r\n                      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    )}\r\n                  </Masonry>\r\n                </ResponsiveMasonry>\r\n              </div>\r\n            </section>\r\n            <Comments\r\n              userComment={userComment}\r\n              comments={comments}\r\n              character={character}\r\n              auth={auth}\r\n              submit={props.submitCharaterFeedback}\r\n              loadingComments={loadingComments}\r\n              deleteComment={props.deleteCharacterComment}\r\n              rateComment={props.rateComment}\r\n            />\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  character: state.characters.character,\r\n  loading: state.characters.loading,\r\n  charaExists: state.characters.charaExists,\r\n  comments: state.stories.comments,\r\n  loadingComments: state.stories.loadingComments,\r\n  confirmMessage: state.stories.message,\r\n  userComment: state.stories.userComment,\r\n  rated: state.stories.rated,\r\n  isFavorite: state.characters.isFavorite,\r\n  loadingFav: state.characters.loadingFav,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getCharacter,\r\n  submitCharaterFeedback,\r\n  getCharacterComments,\r\n  deleteCharacterComment,\r\n  rateComment,\r\n  addCharacterToFavorite,\r\n  removeCharacterFromFavorite,\r\n  isCharacterFavorite,\r\n})(Character);\r\n"]},"metadata":{},"sourceType":"module"}