{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\explore.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport { onlyUnique } from \"../utils/helpers\";\nimport { StoriesGrid } from \"../components/common/Grid\";\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\nimport Filter from \"../components/explore/Filter\";\n\nconst Explore = props => {\n  const {\n    stories,\n    loading\n  } = props;\n  const [currentStories, setCurrentStories] = React.useState([]);\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\n  const alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  React.useEffect(() => {\n    props.getStoriesByLetter(currentLetter, alphabet);\n  }, [currentLetter]);\n  React.useEffect(() => {\n    setCurrentStories(stories);\n  }, [stories]);\n  React.useEffect(() => {\n    setCurrentStories(stories.filter(s => s.category ? s.category.includes(currentCategory) : s.categories.includes(currentCategory)));\n  }, [currentCategory]); // console.log(stories);\n\n  return __jsx(\"div\", {\n    className: \"explore-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Explore\"), __jsx(Row, {\n    gutter: [32, 24],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Filter, {\n    currentCategory: currentCategory,\n    setCurrentCategory: setCurrentLetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), __jsx(Col, {\n    span: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"alphabetic-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, alphabet.map(a => __jsx(\"span\", {\n    className: currentLetter === a ? \"current\" : \"\",\n    key: a,\n    onClick: () => setCurrentLetter(a),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, a))), __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(StoriesGrid, {\n    stories: currentStories,\n    gutter: \"16px\",\n    columnsCountBreakPoints: {\n      1600: 3,\n      1200: 3,\n      900: 3,\n      750: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  stories: state.stories.storiesFromSearch,\n  loading: state.stories.loading\n});\n\nexport default connect(mapStateToProps, {\n  getStoriesByLetter\n})(Explore);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/explore.js"],"names":["React","connect","Row","Col","onlyUnique","StoriesGrid","LoadingScreen","getStoriesByLetter","Filter","Explore","props","stories","loading","currentStories","setCurrentStories","useState","currentLetter","setCurrentLetter","currentCategory","setCurrentCategory","alphabet","useEffect","filter","s","category","includes","categories","map","a","mapStateToProps","state","storiesFromSearch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBF,KAA7B;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCd,KAAK,CAACe,QAAN,CAAe,EAAf,CAA5C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCjB,KAAK,CAACe,QAAN,CAAe,GAAf,CAA1C;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCnB,KAAK,CAACe,QAAN,CAAe,EAAf,CAA9C;AACA,QAAMK,QAAQ,GAAG,CACf,GADe,EAEf,GAFe,EAGf,GAHe,EAIf,GAJe,EAKf,GALe,EAMf,GANe,EAOf,GAPe,EAQf,GARe,EASf,GATe,EAUf,GAVe,EAWf,GAXe,EAYf,GAZe,EAaf,GAbe,EAcf,GAde,EAef,GAfe,EAgBf,GAhBe,EAiBf,GAjBe,EAkBf,GAlBe,EAmBf,GAnBe,EAoBf,GApBe,EAqBf,GArBe,EAsBf,GAtBe,EAuBf,GAvBe,EAwBf,GAxBe,EAyBf,GAzBe,EA0Bf,GA1Be,CAAjB;AA6BApB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBX,IAAAA,KAAK,CAACH,kBAAN,CAAyBS,aAAzB,EAAwCI,QAAxC;AACD,GAFD,EAEG,CAACJ,aAAD,CAFH;AAIAhB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBP,IAAAA,iBAAiB,CAACH,OAAD,CAAjB;AACD,GAFD,EAEG,CAACA,OAAD,CAFH;AAIAX,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBP,IAAAA,iBAAiB,CACfH,OAAO,CAACW,MAAR,CAAgBC,CAAD,IACbA,CAAC,CAACC,QAAF,GACID,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBP,eAApB,CADJ,GAEIK,CAAC,CAACG,UAAF,CAAaD,QAAb,CAAsBP,eAAtB,CAHN,CADe,CAAjB;AAOD,GARD,EAQG,CAACA,eAAD,CARH,EA1CyB,CAoDzB;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,eAAe,EAAEA,eADnB;AAEE,IAAA,kBAAkB,EAAED,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACO,GAAT,CAAcC,CAAD,IACZ;AACE,IAAA,SAAS,EAAEZ,aAAa,KAAKY,CAAlB,GAAsB,SAAtB,GAAkC,EAD/C;AAEE,IAAA,GAAG,EAAEA,CAFP;AAGE,IAAA,OAAO,EAAE,MAAMX,gBAAgB,CAACW,CAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,CALH,CADD,CADH,CADF,EAYE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEhB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,OAAO,EAAEC,cADX;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,uBAAuB,EAAE;AAAE,YAAM,CAAR;AAAW,YAAM,CAAjB;AAAoB,WAAK,CAAzB;AAA4B,WAAK;AAAjC,KAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CALF,CAFF,CADF;AA+BD,CArFD;;AAuFA,MAAMgB,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,OAAO,EAAEmB,KAAK,CAACnB,OAAN,CAAcoB,iBADW;AAElCnB,EAAAA,OAAO,EAAEkB,KAAK,CAACnB,OAAN,CAAcC;AAFW,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAAC4B,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAiDE,OAAjD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport { onlyUnique } from \"../utils/helpers\";\r\nimport { StoriesGrid } from \"../components/common/Grid\";\r\nimport LoadingScreen from \"../components/hoc/LoadingScreen\";\r\n\r\nimport { getStoriesByLetter } from \"../redux/actions/storiesActions\";\r\nimport Filter from \"../components/explore/Filter\";\r\n\r\nconst Explore = (props) => {\r\n  const { stories, loading } = props;\r\n  const [currentStories, setCurrentStories] = React.useState([]);\r\n  const [currentLetter, setCurrentLetter] = React.useState(\"a\");\r\n  const [currentCategory, setCurrentCategory] = React.useState(\"\");\r\n  const alphabet = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"d\",\r\n    \"e\",\r\n    \"f\",\r\n    \"g\",\r\n    \"h\",\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"l\",\r\n    \"m\",\r\n    \"n\",\r\n    \"o\",\r\n    \"p\",\r\n    \"q\",\r\n    \"r\",\r\n    \"s\",\r\n    \"t\",\r\n    \"u\",\r\n    \"v\",\r\n    \"w\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    props.getStoriesByLetter(currentLetter, alphabet);\r\n  }, [currentLetter]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(stories);\r\n  }, [stories]);\r\n\r\n  React.useEffect(() => {\r\n    setCurrentStories(\r\n      stories.filter((s) =>\r\n        s.category\r\n          ? s.category.includes(currentCategory)\r\n          : s.categories.includes(currentCategory)\r\n      )\r\n    );\r\n  }, [currentCategory]);\r\n\r\n  // console.log(stories);\r\n\r\n  return (\r\n    <div className=\"explore-page\">\r\n      <h2>Explore</h2>\r\n      <Row gutter={[32, 24]}>\r\n        <Filter\r\n          currentCategory={currentCategory}\r\n          setCurrentCategory={setCurrentLetter}\r\n        />\r\n        <Col span={18}>\r\n          <div className=\"alphabetic-search\">\r\n            {alphabet.map((a) => (\r\n              <span\r\n                className={currentLetter === a ? \"current\" : \"\"}\r\n                key={a}\r\n                onClick={() => setCurrentLetter(a)}\r\n              >\r\n                {a}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <LoadingScreen loading={loading}>\r\n            <StoriesGrid\r\n              stories={currentStories}\r\n              gutter=\"16px\"\r\n              columnsCountBreakPoints={{ 1600: 3, 1200: 3, 900: 3, 750: 2 }}\r\n            />\r\n          </LoadingScreen>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stories: state.stories.storiesFromSearch,\r\n  loading: state.stories.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStoriesByLetter })(Explore);\r\n"]},"metadata":{},"sourceType":"module"}