{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\[id]\\\\chapter\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../../../../hooks/userHooks\";\nimport { getStory, addChapter, getUserLocations } from \"../../../../redux/actions/storiesActions\";\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\n\nconst NewChapter = props => {\n  const [form] = Form.useForm();\n  const {\n    characters,\n    loading,\n    storyExists,\n    story,\n    locations,\n    loadingChapter,\n    chapId\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [body, setBody] = React.useState(\"\");\n  React.useEffect(() => {\n    props.getStory(router.query.id);\n  }, []);\n  React.useEffect(() => {\n    if (chapId && form.getFieldValue(\"status\") === \"true\") {\n      router.push(`/story/${story.id}/chapter/${chapId}`);\n    }\n\n    if (chapId && form.getFieldValue(\"status\") === \"false\") {\n      router.push(`/story/${story.id}/chapter/${chapId}/edit`);\n    }\n  }, [chapId]);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n      props.getUserLocations(auth.user.uid);\n    }\n  }, [auth]);\n\n  const submit = values => {\n    delete values.currentChar;\n    delete values.currentLoc;\n    const main = story.mainArr;\n    let secondaryCharacters = [...story.secondaryArr];\n    let charInChapter = values.characters.filter(c => !main.includes(c));\n    let newArr = [];\n    charInChapter.forEach(char => {\n      const index = secondaryCharacters.findIndex(c => c.id === char);\n\n      if (index !== -1) {\n        newArr.push({\n          id: secondaryCharacters[index].id,\n          times: secondaryCharacters[index].times++\n        });\n      } else {\n        newArr.push({\n          id: char,\n          times: 1\n        });\n      }\n    });\n    props.addChapter(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: auth.user.username,\n      userImage: auth.user.image,\n      storyId: router.query.id,\n      body,\n      status: values.status === \"true\"\n    }), newArr);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    type: \"404\",\n    condition: storyExists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(RedirectComp, {\n    type: \"403\",\n    condition: auth.user && auth.user.uid === story.authorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Add a new chapter\"), __jsx(ChapterForm, {\n    submit: submit,\n    form: form,\n    characters: characters,\n    locations: locations,\n    body: body,\n    setBody: setBody,\n    type: \"add\",\n    loadingChapter: loadingChapter,\n    loading: loading,\n    chapId: chapId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  story: state.stories.story,\n  characters: state.characters.userCharacters,\n  storyExists: state.stories.storyExists,\n  loading: state.stories.loading,\n  locations: state.stories.userLocations,\n  chapId: state.stories.chapId,\n  loadingChapter: state.stories.loadingChapter\n});\n\nexport default connect(mapStateToProps, {\n  getStory,\n  getUserCharacters,\n  getUserLocations,\n  addChapter\n})(NewChapter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/[id]/chapter/new.js"],"names":["React","connect","Form","useRouter","useAuth","getStory","addChapter","getUserLocations","getUserCharacters","ChapterForm","LoadingScreen","RedirectComp","NewChapter","props","form","useForm","characters","loading","storyExists","story","locations","loadingChapter","chapId","auth","router","body","setBody","useState","useEffect","query","id","getFieldValue","push","user","uid","submit","values","currentChar","currentLoc","main","mainArr","secondaryCharacters","secondaryArr","charInChapter","filter","c","includes","newArr","forEach","char","index","findIndex","times","authorName","username","userImage","image","storyId","status","authorId","mapStateToProps","state","stories","userCharacters","userLocations"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"antd\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport { useAuth } from \"../../../../hooks/userHooks\";\r\nimport {\r\n  getStory,\r\n  addChapter,\r\n  getUserLocations,\r\n} from \"../../../../redux/actions/storiesActions\";\r\nimport { getUserCharacters } from \"../../../../redux/actions/charactersActions\";\r\n\r\nimport ChapterForm from \"../../../../components/forms/ChapterForm\";\r\nimport LoadingScreen from \"../../../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../../../components/hoc/RedirectComp\";\r\n\r\nconst NewChapter = (props) => {\r\n  const [form] = Form.useForm();\r\n  const {\r\n    characters,\r\n    loading,\r\n    storyExists,\r\n    story,\r\n    locations,\r\n    loadingChapter,\r\n    chapId,\r\n  } = props;\r\n  const auth = useAuth();\r\n  const router = useRouter();\r\n  const [body, setBody] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    props.getStory(router.query.id);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (chapId && form.getFieldValue(\"status\") === \"true\") {\r\n      router.push(`/story/${story.id}/chapter/${chapId}`);\r\n    }\r\n    if (chapId && form.getFieldValue(\"status\") === \"false\") {\r\n      router.push(`/story/${story.id}/chapter/${chapId}/edit`);\r\n    }\r\n  }, [chapId]);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n      props.getUserLocations(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    delete values.currentLoc;\r\n\r\n    const main = story.mainArr;\r\n    let secondaryCharacters = [...story.secondaryArr];\r\n    let charInChapter = values.characters.filter((c) => !main.includes(c));\r\n    let newArr = [];\r\n\r\n    charInChapter.forEach((char) => {\r\n      const index = secondaryCharacters.findIndex((c) => c.id === char);\r\n      if (index !== -1) {\r\n        newArr.push({\r\n          id: secondaryCharacters[index].id,\r\n          times: secondaryCharacters[index].times++,\r\n        });\r\n      } else {\r\n        newArr.push({ id: char, times: 1 });\r\n      }\r\n    });\r\n\r\n    props.addChapter(\r\n      {\r\n        ...values,\r\n        authorName: auth.user.username,\r\n        userImage: auth.user.image,\r\n        storyId: router.query.id,\r\n        body,\r\n        status: values.status === \"true\",\r\n      },\r\n      newArr\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={loading}>\r\n      <RedirectComp type=\"404\" condition={storyExists}>\r\n        <RedirectComp\r\n          type=\"403\"\r\n          condition={auth.user && auth.user.uid === story.authorId}\r\n        >\r\n          <div className=\"custom-form\">\r\n            <div className=\"inner\">\r\n              <h2 className=\"side-heading\">Add a new chapter</h2>\r\n              <ChapterForm\r\n                submit={submit}\r\n                form={form}\r\n                characters={characters}\r\n                locations={locations}\r\n                body={body}\r\n                setBody={setBody}\r\n                type=\"add\"\r\n                loadingChapter={loadingChapter}\r\n                loading={loading}\r\n                chapId={chapId}\r\n              />\r\n            </div>\r\n          </div>\r\n        </RedirectComp>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  story: state.stories.story,\r\n  characters: state.characters.userCharacters,\r\n  storyExists: state.stories.storyExists,\r\n  loading: state.stories.loading,\r\n  locations: state.stories.userLocations,\r\n  chapId: state.stories.chapId,\r\n  loadingChapter: state.stories.loadingChapter,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getStory,\r\n  getUserCharacters,\r\n  getUserLocations,\r\n  addChapter,\r\n})(NewChapter);\r\n"]},"metadata":{},"sourceType":"module"}