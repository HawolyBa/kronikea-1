{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { auth, db } from \"../fbConfig\";\nexport var getItem = function getItem(item, type) {\n  return function (dispatch) {\n    db.collection(item).where(\"authorId\", \"==\", auth.currentUser.uid).get().then(function (docs) {\n      var items = [];\n      docs.forEach(function (doc) {\n        items = [].concat(_toConsumableArray(items), [_objectSpread({\n          id: doc.id\n        }, doc.data())]);\n      });\n      return items;\n    }).then(function (items) {\n      dispatch({\n        type: type,\n        payload: items\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/common.js"],"names":["auth","db","getItem","item","type","dispatch","collection","where","currentUser","uid","get","then","docs","items","forEach","doc","id","data","payload"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,IAAP;AAAA,SAAgB,UAACC,QAAD,EAAc;AACnDJ,IAAAA,EAAE,CAACK,UAAH,CAAcH,IAAd,EACGI,KADH,CACS,UADT,EACqB,IADrB,EAC2BP,IAAI,CAACQ,WAAL,CAAiBC,GAD5C,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,IAAD,EAAU;AACd,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBF,QAAAA,KAAK,gCAAOA,KAAP;AAAgBG,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,WAA+BD,GAAG,CAACE,IAAJ,EAA/B,GAAL;AACD,OAFD;AAGA,aAAOJ,KAAP;AACD,KATH,EAUGF,IAVH,CAUQ,UAACE,KAAD,EAAW;AACfR,MAAAA,QAAQ,CAAC;AAAED,QAAAA,IAAI,EAAJA,IAAF;AAAQc,QAAAA,OAAO,EAAEL;AAAjB,OAAD,CAAR;AACD,KAZH;AAaD,GAdsB;AAAA,CAAhB","sourcesContent":["import { auth, db } from \"../fbConfig\";\r\n\r\nexport const getItem = (item, type) => (dispatch) => {\r\n  db.collection(item)\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type, payload: items });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}