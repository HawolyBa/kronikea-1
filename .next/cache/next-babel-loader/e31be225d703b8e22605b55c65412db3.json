{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\hooks\\\\notificationsHooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { auth, db } from \"../redux/fbConfig\";\nvar notificationContext = /*#__PURE__*/createContext();\nexport function ProvideNotification(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var notifications = useProvideNotification();\n  return __jsx(notificationContext.Provider, {\n    value: notifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s(ProvideNotification, \"J7O0kMfYJ6l2d1GSAaB9O7mtxTc=\", false, function () {\n  return [useProvideNotification];\n});\n\n_c = ProvideNotification;\nexport var useNotifcations = function useNotifcations() {\n  _s2();\n\n  return useContext(notificationContext);\n};\n\n_s2(useNotifcations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideNotification() {\n  _s3();\n\n  var _useState = useState(null),\n      notifications = _useState[0],\n      setNotifications = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    console.log(auth);\n    var unsubscribe = db.collection(\"notifications\").where(\"recipient\", \"==\", auth.currentUser.uid).onSnapshot( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(docs) {\n        var getUsers, users;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setNotifications(docs.docs.map(function (doc) {\n                  return _objectSpread(_objectSpread({}, doc.data()), {}, {\n                    id: doc.id\n                  });\n                }).sort(function (a, b) {\n                  a = typeof a.createdAt !== \"object\" ? new Date(a.createdAt) : new Date(a.createdAt.seconds);\n                  b = typeof b.createdAt !== \"object\" ? new Date(b.createdAt) : new Date(b.createdAt.seconds);\n                  return b > a ? -1 : b < a ? 1 : 0;\n                }));\n                _context.next = 3;\n                return db.collection(\"users\").get();\n\n              case 3:\n                getUsers = _context.sent;\n                _context.next = 6;\n                return getUsers.docs.map(function (u) {\n                  return _objectSpread(_objectSpread({}, u.data()), {}, {\n                    id: u.id\n                  });\n                });\n\n              case 6:\n                users = _context.sent;\n                setNotifications(notifications.map(function (notif) {\n                  return _objectSpread(_objectSpread({}, notif), {}, {\n                    user: users.find(function (u) {\n                      return u.id === notif.sender;\n                    })\n                  });\n                }));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    setIsLoading(false); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return {\n    isLoading: isLoading,\n    notifications: notifications\n  };\n}\n\n_s3(useProvideNotification, \"cseqyJFNgHIuNYC0Rv2GaffV+Ws=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideNotification\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/hooks/notificationsHooks.js"],"names":["React","useState","useEffect","useContext","createContext","auth","db","notificationContext","ProvideNotification","children","notifications","useProvideNotification","useNotifcations","setNotifications","isLoading","setIsLoading","console","log","unsubscribe","collection","where","currentUser","uid","onSnapshot","docs","map","doc","data","id","sort","a","b","createdAt","Date","seconds","get","getUsers","u","users","notif","user","find","sender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport { auth, db } from \"../redux/fbConfig\";\r\n\r\nconst notificationContext = createContext();\r\n\r\nexport function ProvideNotification({ children }) {\r\n  const notifications = useProvideNotification();\r\n  return (\r\n    <notificationContext.Provider value={notifications}>\r\n      {children}\r\n    </notificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useNotifcations = () => {\r\n  return useContext(notificationContext);\r\n};\r\n\r\nfunction useProvideNotification() {\r\n  const [notifications, setNotifications] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(auth);\r\n    const unsubscribe = db\r\n      .collection(\"notifications\")\r\n      .where(\"recipient\", \"==\", auth.currentUser.uid)\r\n      .onSnapshot(async (docs) => {\r\n        setNotifications(\r\n          docs.docs\r\n            .map((doc) => ({ ...doc.data(), id: doc.id }))\r\n            .sort((a, b) => {\r\n              a =\r\n                typeof a.createdAt !== \"object\"\r\n                  ? new Date(a.createdAt)\r\n                  : new Date(a.createdAt.seconds);\r\n              b =\r\n                typeof b.createdAt !== \"object\"\r\n                  ? new Date(b.createdAt)\r\n                  : new Date(b.createdAt.seconds);\r\n\r\n              return b > a ? -1 : b < a ? 1 : 0;\r\n            })\r\n        );\r\n\r\n        const getUsers = await db.collection(\"users\").get();\r\n        const users = await getUsers.docs.map((u) => ({\r\n          ...u.data(),\r\n          id: u.id,\r\n        }));\r\n        setNotifications(\r\n          notifications.map((notif) => ({\r\n            ...notif,\r\n            user: users.find((u) => u.id === notif.sender),\r\n          }))\r\n        );\r\n      });\r\n    setIsLoading(false);\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    notifications,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}