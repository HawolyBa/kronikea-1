{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport StoryForm from \"../../components/forms/StoryForm\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\n\nconst NewStory = props => {\n  const [form] = Form.useForm();\n  const auth = useAuth();\n  const [mature, setMature] = React.useState(false);\n  const [visibility, setVisibility] = React.useState(true);\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      mature\n    });\n  }, [mature]);\n  React.useEffect(() => {\n    form.setFieldsValue({\n      public: visibility\n    });\n  }, [visibility]);\n  React.useEffect(() => {\n    if (props.storyId) {\n      router.push(`/story/${storyId}`);\n    }\n  }, [props.storyId]);\n\n  const submit = values => {\n    delete values.currentChar;\n    props.addStory(_objectSpread(_objectSpread({}, values), {}, {\n      authorName: props.auth.user.username,\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\"\n    }));\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(StoryForm, {\n    type: \"add\",\n    submit: submit,\n    characters: props.characters,\n    loading: props.loading,\n    storyId: props.storyId,\n    form: form,\n    mature: mature,\n    setMature: setMature,\n    visibility: visibility,\n    setVisibility: setVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters,\n  confirmMessage: state.stories.message,\n  storyId: state.stories.storyId,\n  loading: state.stories.loadingStory\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters,\n  addStory\n})(NewStory);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Form","connect","useAuth","getUserCharacters","addStory","StoryForm","RedirectComp","LoadingScreen","NewStory","props","form","useForm","auth","mature","setMature","useState","visibility","setVisibility","useEffect","user","uid","setFieldsValue","public","storyId","router","push","submit","values","currentChar","authorName","username","banner","getFieldValue","isLoading","characters","loading","mapStateToProps","state","userCharacters","confirmMessage","stories","message","loadingStory"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,SAASC,QAAT,QAAyB,oCAAzB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,IAAD,IAASV,IAAI,CAACW,OAAL,EAAf;AACA,QAAMC,IAAI,GAAGV,OAAO,EAApB;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAA5B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,KAAK,CAACgB,QAAN,CAAe,IAAf,CAApC;AAEAhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIN,IAAI,CAACO,IAAT,EAAe;AACbV,MAAAA,KAAK,CAACN,iBAAN,CAAwBS,IAAI,CAACO,IAAL,CAAUC,GAAlC;AACD;AACF,GAJD,EAIG,CAACR,IAAD,CAJH;AAMAb,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBR,IAAAA,IAAI,CAACW,cAAL,CAAoB;AAAER,MAAAA;AAAF,KAApB;AACD,GAFD,EAEG,CAACA,MAAD,CAFH;AAIAd,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBR,IAAAA,IAAI,CAACW,cAAL,CAAoB;AAAEC,MAAAA,MAAM,EAAEN;AAAV,KAApB;AACD,GAFD,EAEG,CAACA,UAAD,CAFH;AAIAjB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIT,KAAK,CAACc,OAAV,EAAmB;AACjBC,MAAAA,MAAM,CAACC,IAAP,CAAa,UAASF,OAAQ,EAA9B;AACD;AACF,GAJD,EAIG,CAACd,KAAK,CAACc,OAAP,CAJH;;AAMA,QAAMG,MAAM,GAAIC,MAAD,IAAY;AACzB,WAAOA,MAAM,CAACC,WAAd;AACAnB,IAAAA,KAAK,CAACL,QAAN,iCACKuB,MADL;AAEEE,MAAAA,UAAU,EAAEpB,KAAK,CAACG,IAAN,CAAWO,IAAX,CAAgBW,QAF9B;AAGEC,MAAAA,MAAM,EAAErB,IAAI,CAACsB,aAAL,CAAmB,QAAnB,IAA+BtB,IAAI,CAACsB,aAAL,CAAmB,QAAnB,CAA/B,GAA8D;AAHxE;AAKD,GAPD;;AASA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEpB,IAAI,CAACqB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAErB,IAAI,CAACO,IAA9B;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAEO,MAFV;AAGE,IAAA,UAAU,EAAEjB,KAAK,CAACyB,UAHpB;AAIE,IAAA,OAAO,EAAEzB,KAAK,CAAC0B,OAJjB;AAKE,IAAA,OAAO,EAAE1B,KAAK,CAACc,OALjB;AAME,IAAA,IAAI,EAAEb,IANR;AAOE,IAAA,MAAM,EAAEG,MAPV;AAQE,IAAA,SAAS,EAAEC,SARb;AASE,IAAA,UAAU,EAAEE,UATd;AAUE,IAAA,aAAa,EAAEC,aAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAkBD,CAtDD;;AAwDA,MAAMmB,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,CAAiBI,cADK;AAElCC,EAAAA,cAAc,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAFI;AAGlClB,EAAAA,OAAO,EAAEc,KAAK,CAACG,OAAN,CAAcjB,OAHW;AAIlCY,EAAAA,OAAO,EAAEE,KAAK,CAACG,OAAN,CAAcE;AAJW,CAAZ,CAAxB;;AAOA,eAAezC,OAAO,CAACmC,eAAD,EAAkB;AAAEjC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAlB,CAAP,CACbI,QADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport StoryForm from \"../../components/forms/StoryForm\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\n\r\nconst NewStory = (props) => {\r\n  const [form] = Form.useForm();\r\n  const auth = useAuth();\r\n\r\n  const [mature, setMature] = React.useState(false);\r\n  const [visibility, setVisibility] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ mature });\r\n  }, [mature]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ public: visibility });\r\n  }, [visibility]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.storyId) {\r\n      router.push(`/story/${storyId}`);\r\n    }\r\n  }, [props.storyId]);\r\n\r\n  const submit = (values) => {\r\n    delete values.currentChar;\r\n    props.addStory({\r\n      ...values,\r\n      authorName: props.auth.user.username,\r\n      banner: form.getFieldValue(\"banner\") ? form.getFieldValue(\"banner\") : \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <StoryForm\r\n          type=\"add\"\r\n          submit={submit}\r\n          characters={props.characters}\r\n          loading={props.loading}\r\n          storyId={props.storyId}\r\n          form={form}\r\n          mature={mature}\r\n          setMature={setMature}\r\n          visibility={visibility}\r\n          setVisibility={setVisibility}\r\n        />\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}