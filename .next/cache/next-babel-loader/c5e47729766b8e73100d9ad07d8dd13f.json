{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_USER_STORIES, GET_FAVORITE_STORIES, GET_STORY, GET_CHAPTERS, ADD_STORY, EDIT_STORY, DISPATCH_ERROR } from \"../../utils/constants\";\nimport { db, auth, storage } from \"../fbConfig\";\nimport firebase from \"firebase/app\";\nimport { message } from \"antd\";\nimport Router from \"next/router\";\nexport const getStory = id => dispatch => {\n  db.collection(\"stories\").doc(id).get().then(doc => {\n    if (doc.exists) {\n      dispatch({\n        type: GET_STORY,\n        storyExists: true,\n        payload: _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        })\n      });\n    } else {\n      dispatch({\n        type: DISPATCH_ERROR,\n        storyExists: false\n      });\n    }\n  }).catch(err => console.log(err));\n};\nexport const addStory = data => dispatch => {\n  dispatch({\n    type: ADD_STORY,\n    payload: {\n      loading: true\n    }\n  });\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\n  console.log(data);\n\n  if (typeof data.banner === \"object\") {\n    storage.ref(`${auth.currentUser.uid}/${imageName}`).put(data.banner).then(() => {\n      return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n    }).then(url => {\n      return db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n        authorId: auth.currentUser.uid,\n        authorName: data.authorName,\n        oneShot: false,\n        banner: url,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        likesCount: 0,\n        chaptersCount: 0,\n        locationsCount: 0,\n        secondaryCharacters: [],\n        featured: false,\n        note: 0\n      }));\n    }).then(res => {\n      message.success(\"Story added successfully\");\n      setTimeout(() => {\n        Router.push(`/story/${res.id}`);\n        dispatch({\n          type: ADD_STORY,\n          payload: {\n            message: \"Story added successfully\",\n            storyId: res.id,\n            loading: false\n          }\n        });\n      }, 1000);\n    }).catch(err => {\n      message.error(err.message);\n    });\n  } else {\n    db.collection(\"stories\").add(_objectSpread(_objectSpread({}, data), {}, {\n      authorId: auth.currentUser.uid,\n      authorName: data.authorName,\n      oneShot: false,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      likesCount: 0,\n      chaptersCount: 0,\n      locationsCount: 0,\n      featured: false,\n      secondaryCharacters: [],\n      note: 0\n    })).then(res => {\n      message.success(\"Story added successfully\");\n      setTimeout(() => {\n        Router.push(`/story/${res.id}`);\n        dispatch({\n          type: ADD_STORY,\n          payload: {\n            message: \"Story added successfully\",\n            storyId: res.id,\n            loading: false\n          }\n        });\n      }, 1000);\n    }).catch(err => {\n      message.error(err.message);\n    });\n  }\n};\nexport const editStory = (data, storyId) => dispatch => {\n  dispatch({\n    type: EDIT_STORY,\n    payload: {\n      loadingStory: true\n    }\n  });\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\n\n  if (typeof data.banner === \"object\") {\n    storage.ref(`${auth.currentUser.uid}/${imageName}`).put(data.banner).then(() => {\n      return storage.ref(auth.currentUser.uid).child(imageName).getDownloadURL();\n    }).then(url => {\n      return db.collection(\"stories\").doc(storyId).update(_objectSpread(_objectSpread({}, data), {}, {\n        banner: url\n      }));\n    }).then(() => {\n      message.success(\"Story added successfully\");\n      dispatch({\n        type: EDIT_STORY,\n        payload: {\n          message: \"Story edited successfully\"\n        }\n      });\n    }).catch(err => {\n      message.error(err.message);\n    });\n  } else {\n    db.collection(\"stories\").doc(storyId).update(_objectSpread({}, data)).then(() => {\n      message.success(\"Story added successfully\");\n      dispatch({\n        type: EDIT_STORY,\n        payload: {\n          message: \"Story edited successfully\"\n        }\n      });\n    }).catch(err => {\n      message.error(err.message);\n    });\n  }\n};\nexport const getChapters = id => dispatch => {\n  db.collection(\"chapters\").where(\"storyId\", \"==\", id).orderBy(\"number\", \"asc\").onSnapshot(docs => {\n    let arr = [];\n    docs.forEach(doc => {\n      arr.push({\n        authorId: doc.data().authorId,\n        id: doc.id,\n        createdAt: doc.data().createdAt,\n        number: doc.data().number,\n        title: doc.data().title,\n        commentsCount: doc.data().commentsCount\n      });\n    });\n    dispatch({\n      type: GET_CHAPTERS,\n      payload: arr\n    });\n  });\n};\nexport const getStoryCharacters = id => dispatch => {};\nexport const getUserStories = () => dispatch => {\n  db.collection(\"stories\").where(\"authorId\", \"==\", auth.currentUser.uid).get().then(docs => {\n    let items = [];\n    docs.forEach(doc => {\n      items = [...items, _objectSpread({\n        id: doc.id\n      }, doc.data())];\n    });\n    return items;\n  }).then(items => {\n    dispatch({\n      type: GET_USER_STORIES,\n      payload: items\n    });\n  });\n};\nexport const getFavoriteStories = () => dispatch => {\n  db.collection(\"storiesLikes\").where(\"senderId\", \"==\", auth.currentUser.uid).get().then(docs => {\n    let favArr = [];\n    docs.forEach(doc => {\n      favArr = [...favArr, doc.data().storyId];\n    });\n    return favArr;\n  }).then(users => {\n    const result = users.map(user => db.collection(\"stories\").doc(user).get());\n    Promise.all(result).then(res => {\n      let favUsers = [];\n      res.forEach(doc => favUsers = [...favUsers, _objectSpread({\n        id: doc.id\n      }, doc.data())]);\n      dispatch({\n        type: GET_FAVORITE_STORIES,\n        payload: favUsers\n      });\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/redux/actions/storiesActions.js"],"names":["GET_USER_STORIES","GET_FAVORITE_STORIES","GET_STORY","GET_CHAPTERS","ADD_STORY","EDIT_STORY","DISPATCH_ERROR","db","auth","storage","firebase","message","Router","getStory","id","dispatch","collection","doc","get","then","exists","type","storyExists","payload","data","catch","err","console","log","addStory","loading","imageName","title","toLowerCase","split","join","banner","ref","currentUser","uid","put","child","getDownloadURL","url","add","authorId","authorName","oneShot","createdAt","firestore","FieldValue","serverTimestamp","likesCount","chaptersCount","locationsCount","secondaryCharacters","featured","note","res","success","setTimeout","push","storyId","error","editStory","loadingStory","update","getChapters","where","orderBy","onSnapshot","docs","arr","forEach","number","commentsCount","getStoryCharacters","getUserStories","items","getFavoriteStories","favArr","users","result","map","user","Promise","all","favUsers"],"mappings":"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","sourcesContent":["import {\r\n  GET_USER_STORIES,\r\n  GET_FAVORITE_STORIES,\r\n  GET_STORY,\r\n  GET_CHAPTERS,\r\n  ADD_STORY,\r\n  EDIT_STORY,\r\n  DISPATCH_ERROR,\r\n} from \"../../utils/constants\";\r\nimport { db, auth, storage } from \"../fbConfig\";\r\nimport firebase from \"firebase/app\";\r\nimport { message } from \"antd\";\r\nimport Router from \"next/router\";\r\n\r\nexport const getStory = (id) => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .doc(id)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        dispatch({\r\n          type: GET_STORY,\r\n          storyExists: true,\r\n          payload: { ...doc.data(), id: doc.id },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: DISPATCH_ERROR,\r\n          storyExists: false,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const addStory = (data) => (dispatch) => {\r\n  dispatch({ type: ADD_STORY, payload: { loading: true } });\r\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\r\n  console.log(data);\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db.collection(\"stories\").add({\r\n          ...data,\r\n          authorId: auth.currentUser.uid,\r\n          authorName: data.authorName,\r\n          oneShot: false,\r\n          banner: url,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          likesCount: 0,\r\n          chaptersCount: 0,\r\n          locationsCount: 0,\r\n          secondaryCharacters: [],\r\n          featured: false,\r\n          note: 0,\r\n        });\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .add({\r\n        ...data,\r\n        authorId: auth.currentUser.uid,\r\n        authorName: data.authorName,\r\n        oneShot: false,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesCount: 0,\r\n        chaptersCount: 0,\r\n        locationsCount: 0,\r\n        featured: false,\r\n        secondaryCharacters: [],\r\n        note: 0,\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Story added successfully\");\r\n        setTimeout(() => {\r\n          Router.push(`/story/${res.id}`);\r\n          dispatch({\r\n            type: ADD_STORY,\r\n            payload: {\r\n              message: \"Story added successfully\",\r\n              storyId: res.id,\r\n              loading: false,\r\n            },\r\n          });\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const editStory = (data, storyId) => (dispatch) => {\r\n  dispatch({ type: EDIT_STORY, payload: { loadingStory: true } });\r\n  const imageName = data.title.toLowerCase().split(\" \").join(\"_\");\r\n\r\n  if (typeof data.banner === \"object\") {\r\n    storage\r\n      .ref(`${auth.currentUser.uid}/${imageName}`)\r\n      .put(data.banner)\r\n      .then(() => {\r\n        return storage\r\n          .ref(auth.currentUser.uid)\r\n          .child(imageName)\r\n          .getDownloadURL();\r\n      })\r\n      .then((url) => {\r\n        return db\r\n          .collection(\"stories\")\r\n          .doc(storyId)\r\n          .update({\r\n            ...data,\r\n            banner: url,\r\n          });\r\n      })\r\n      .then(() => {\r\n        message.success(\"Story added successfully\");\r\n        dispatch({\r\n          type: EDIT_STORY,\r\n          payload: {\r\n            message: \"Story edited successfully\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  } else {\r\n    db.collection(\"stories\")\r\n      .doc(storyId)\r\n      .update({\r\n        ...data,\r\n      })\r\n      .then(() => {\r\n        message.success(\"Story added successfully\");\r\n        dispatch({\r\n          type: EDIT_STORY,\r\n          payload: {\r\n            message: \"Story edited successfully\",\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getChapters = (id) => (dispatch) => {\r\n  db.collection(\"chapters\")\r\n    .where(\"storyId\", \"==\", id)\r\n    .orderBy(\"number\", \"asc\")\r\n    .onSnapshot((docs) => {\r\n      let arr = [];\r\n      docs.forEach((doc) => {\r\n        arr.push({\r\n          authorId: doc.data().authorId,\r\n          id: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          number: doc.data().number,\r\n          title: doc.data().title,\r\n          commentsCount: doc.data().commentsCount,\r\n        });\r\n      });\r\n      dispatch({\r\n        type: GET_CHAPTERS,\r\n        payload: arr,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getStoryCharacters = (id) => (dispatch) => {};\r\n\r\nexport const getUserStories = () => (dispatch) => {\r\n  db.collection(\"stories\")\r\n    .where(\"authorId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let items = [];\r\n      docs.forEach((doc) => {\r\n        items = [...items, { id: doc.id, ...doc.data() }];\r\n      });\r\n      return items;\r\n    })\r\n    .then((items) => {\r\n      dispatch({ type: GET_USER_STORIES, payload: items });\r\n    });\r\n};\r\n\r\nexport const getFavoriteStories = () => (dispatch) => {\r\n  db.collection(\"storiesLikes\")\r\n    .where(\"senderId\", \"==\", auth.currentUser.uid)\r\n    .get()\r\n    .then((docs) => {\r\n      let favArr = [];\r\n      docs.forEach((doc) => {\r\n        favArr = [...favArr, doc.data().storyId];\r\n      });\r\n      return favArr;\r\n    })\r\n    .then((users) => {\r\n      const result = users.map((user) =>\r\n        db.collection(\"stories\").doc(user).get()\r\n      );\r\n      Promise.all(result).then((res) => {\r\n        let favUsers = [];\r\n        res.forEach(\r\n          (doc) => (favUsers = [...favUsers, { id: doc.id, ...doc.data() }])\r\n        );\r\n        dispatch({\r\n          type: GET_FAVORITE_STORIES,\r\n          payload: favUsers,\r\n        });\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}