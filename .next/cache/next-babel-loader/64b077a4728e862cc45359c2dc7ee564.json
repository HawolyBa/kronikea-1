{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\story\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Row, Col, Space, Divider, Form, Spin, message, Input, Select } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { CATEGORIES, COPYRIGHTS, LANGUAGES, STATUS } from \"../../utils/constants\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport { addStory } from \"../../redux/actions/storiesActions\";\nimport InputGroup from \"../../components/common/Input\";\nimport SelectGroup from \"../../components/common/Select\";\nimport Tags from \"../../components/forms/Tags\";\nimport UploadImage from \"../../components/forms/UploadImage\";\nimport Loader from \"../../components/common/Loader\";\nimport RadioButon from \"../../components/forms/RadioButon\";\nvar Option = Select.Option;\n\nvar NewStory = function NewStory(props) {\n  _s();\n\n  var _props$characters;\n\n  var auth = useAuth();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var router = useRouter();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentChar = _React$useState2[0],\n      setCurrentChar = _React$useState2[1];\n\n  var addCharacter = function addCharacter() {\n    console.log(\"coucou\");\n  };\n\n  var submit = function submit(values) {\n    console.log(values);\n  };\n\n  var onFailed = function onFailed(error) {\n    var errorName = error.errorFields[0].name.toString();\n    form.scrollToField(errorName); //message.error(\"There are errors\");\n  };\n\n  React.useEffect(function () {\n    if (auth.user) {\n      props.getUserCharacters();\n    }\n  }, [auth]);\n  React.useEffect(function () {\n    form.setFieldsValue({\n      tags: []\n    });\n    form.setFieldsValue({\n      mainCharacters: []\n    });\n  }, []);\n\n  var filterSort = function filterSort(a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  };\n\n  return __jsx(\"div\", {\n    className: \"new-story custom-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Add a new story\"), __jsx(Form, {\n    layout: \"vertical\",\n    scrollToFirstError: true,\n    onFinishFailed: onFailed,\n    onFinish: submit,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    md: 18,\n    lg: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    colon: false,\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: \"A title is required\"\n    }, {\n      max: 65\n    }],\n    label: \"Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }))), __jsx(Col, {\n    sm: 24,\n    xs: 24,\n    lg: 6,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"categories\",\n    label: \"Categories\",\n    rules: [{\n      required: true,\n      message: \"At least 1 category is required\"\n    }, {\n      max: 2,\n      type: \"array\",\n      message: \"You can only select up to 2 categories\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    mode: \"multiple\",\n    allowClear: true,\n    maxTagCount: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, CATEGORIES === null || CATEGORIES === void 0 ? void 0 : CATEGORIES.sort(function (a, b) {\n    var keyA = a.name,\n        keyB = b.name; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).map(function (cat) {\n    return __jsx(Option, {\n      value: cat.value,\n      key: cat.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, cat.name);\n  }))))), __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"language\",\n    label: \"Language\",\n    rules: [{\n      required: true,\n      message: \"A language is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    filterSort: filterSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, LANGUAGES === null || LANGUAGES === void 0 ? void 0 : LANGUAGES.map(function (lang) {\n    return __jsx(Option, {\n      value: lang.value,\n      key: lang.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, lang.name);\n  })))), __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"status\",\n    label: \"Status\",\n    rules: [{\n      required: true,\n      message: \"A status is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, STATUS.map(function (stat) {\n    return __jsx(Option, {\n      value: stat.value,\n      key: stat.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, stat.name);\n  })))), __jsx(Col, {\n    md: 8,\n    sm: 24,\n    xs: 24,\n    lg: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"copyright\",\n    label: \"Copyright\",\n    rules: [{\n      required: true,\n      message: \"A copyright is required\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, COPYRIGHTS.map(function (copy) {\n    return __jsx(Option, {\n      value: copy.value,\n      key: copy.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, copy.name);\n  }))))), __jsx(Form.Item, {\n    label: \"Summary\",\n    name: \"summary\",\n    rules: [{\n      max: 180,\n      message: \"Your summary cannot exceed 180 characters\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(Input.TextArea, {\n    autoSize: {\n      minRows: 5\n    },\n    showCount: true,\n    maxLength: 180,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), __jsx(Row, {\n    justify: \"space-between\",\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, __jsx(RadioButon, {\n    lg: 4,\n    sm: 12,\n    xs: 24,\n    md: 8,\n    name: \"public\",\n    label: \"Visibility\",\n    num1: \"3\",\n    num2: \"4\",\n    label1: \"Public\",\n    label2: \"Private\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), __jsx(RadioButon, {\n    lg: 4,\n    sm: 12,\n    xs: 24,\n    md: 8,\n    name: \"mature\",\n    label: \"Mature content ?\",\n    num1: \"1\",\n    num2: \"2\",\n    label1: \"Yes\",\n    label2: \"No\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }), __jsx(Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    label: \"Tags\",\n    name: \"tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, __jsx(Tags, {\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  })))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    gutter: [24, 24],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    name: \"mainCharacters\",\n    label: \"Main Characters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    gutter: 16,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    span: 22,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, __jsx(Option, {\n    selected: true,\n    value: \"\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, \"Choose\"), (_props$characters = props.characters) === null || _props$characters === void 0 ? void 0 : _props$characters.sort(function (a, b) {\n    var keyA = a.firstname,\n        keyB = b.firstname; // Compare the 2 dates\n\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  }).filter(function (c) {\n    var _form$getFieldValue;\n\n    return !((_form$getFieldValue = form.getFieldValue(\"mainCharacters\")) !== null && _form$getFieldValue !== void 0 && _form$getFieldValue.includes(c.id));\n  }).map(function (_char) {\n    return __jsx(Option, {\n      key: _char.id,\n      value: _char.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 27\n      }\n    }, \"\".concat(_char.firstname, \" \").concat(_char.lastname));\n  }))), __jsx(Col, {\n    span: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"select-add-input-iconbox\",\n    onClick: addCharacter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  }, \"+\"))), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"You can add up to 5 main characters\")))), __jsx(Col, {\n    lg: 12,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    gutter: [16, 16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, props.characters.filter(function (c) {\n    var _form$getFieldValue2;\n\n    return ((_form$getFieldValue2 = form.getFieldValue(\"mainCharacters\")) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.indexOf(c.id)) !== -1;\n  }).map(function (_char2) {\n    return __jsx(Col, {\n      md: 12,\n      sm: 24,\n      key: _char2.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      key: _char2.id,\n      className: \"main-selected\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"main-avatar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: _char2.image,\n      alt: _char2.firstname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 27\n      }\n    })), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, \"\".concat(_char2.firstname, \" \").concat(_char2.lastname), \" \"), __jsx(\"ion-icon\", {\n      onClick: function onClick() {\n        return removeCharacter(_char2.id);\n      },\n      name: \"close-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }\n    })));\n  })))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};\n\n_s(NewStory, \"KmGeSpZ2HYSolTCFb8UESds13lo=\", false, function () {\n  return [useAuth, Form.useForm, useRouter];\n});\n\n_c = NewStory;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    characters: state.characters.userCharacters,\n    confirmMessage: state.stories.message,\n    storyId: state.stories.storyId,\n    loading: state.stories.loadingStory\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserCharacters: getUserCharacters,\n  addStory: addStory\n})(NewStory);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewStory\");","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/story/new.js"],"names":["React","Row","Col","Space","Divider","Form","Spin","message","Input","Select","connect","useRouter","CATEGORIES","COPYRIGHTS","LANGUAGES","STATUS","useAuth","getUserCharacters","addStory","InputGroup","SelectGroup","Tags","UploadImage","Loader","RadioButon","Option","NewStory","props","auth","useForm","form","router","useState","currentChar","setCurrentChar","addCharacter","console","log","submit","values","onFailed","error","errorName","errorFields","name","toString","scrollToField","useEffect","user","setFieldsValue","tags","mainCharacters","filterSort","a","b","keyA","keyB","required","max","type","sort","map","cat","value","lang","stat","copy","minRows","characters","firstname","filter","c","getFieldValue","includes","id","char","lastname","indexOf","image","removeCharacter","mapStateToProps","state","userCharacters","confirmMessage","stories","storyId","loading","loadingStory"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Divider,\r\n  Form,\r\n  Spin,\r\n  message,\r\n  Input,\r\n  Select,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport {\r\n  CATEGORIES,\r\n  COPYRIGHTS,\r\n  LANGUAGES,\r\n  STATUS,\r\n} from \"../../utils/constants\";\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\nimport { addStory } from \"../../redux/actions/storiesActions\";\r\n\r\nimport InputGroup from \"../../components/common/Input\";\r\nimport SelectGroup from \"../../components/common/Select\";\r\nimport Tags from \"../../components/forms/Tags\";\r\nimport UploadImage from \"../../components/forms/UploadImage\";\r\nimport Loader from \"../../components/common/Loader\";\r\nimport RadioButon from \"../../components/forms/RadioButon\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst NewStory = (props) => {\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n  const router = useRouter();\r\n\r\n  const [currentChar, setCurrentChar] = React.useState(\"\");\r\n\r\n  const addCharacter = () => {\r\n    console.log(\"coucou\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const onFailed = (error) => {\r\n    const errorName = error.errorFields[0].name.toString();\r\n    form.scrollToField(errorName);\r\n    //message.error(\"There are errors\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters();\r\n    }\r\n  }, [auth]);\r\n\r\n  React.useEffect(() => {\r\n    form.setFieldsValue({ tags: [] });\r\n    form.setFieldsValue({ mainCharacters: [] });\r\n  }, []);\r\n\r\n  const filterSort = (a, b) => {\r\n    const keyA = a.name,\r\n      keyB = b.name;\r\n    // Compare the 2 dates\r\n    if (keyA < keyB) return -1;\r\n    if (keyA > keyB) return 1;\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-story custom-form\">\r\n      <div className=\"inner\">\r\n        <h2 className=\"side-heading\">Add a new story</h2>\r\n        <Form\r\n          layout=\"vertical\"\r\n          scrollToFirstError\r\n          onFinishFailed={onFailed}\r\n          onFinish={submit}\r\n          form={form}\r\n        >\r\n          <Row gutter={[24, 24]}>\r\n            <Col sm={24} xs={24} md={18} lg={18}>\r\n              <Form.Item\r\n                colon={false}\r\n                name=\"title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A title is required\",\r\n                  },\r\n                  { max: 65 },\r\n                ]}\r\n                label=\"Title\"\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col sm={24} xs={24} lg={6} md={6}>\r\n              <Form.Item\r\n                name=\"categories\"\r\n                label=\"Categories\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"At least 1 category is required\",\r\n                  },\r\n                  {\r\n                    max: 2,\r\n                    type: \"array\",\r\n                    message: \"You can only select up to 2 categories\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select mode=\"multiple\" allowClear maxTagCount={2}>\r\n                  {CATEGORIES?.sort((a, b) => {\r\n                    const keyA = a.name,\r\n                      keyB = b.name;\r\n                    // Compare the 2 dates\r\n                    if (keyA < keyB) return -1;\r\n                    if (keyA > keyB) return 1;\r\n                    return 0;\r\n                  }).map((cat) => (\r\n                    <Option value={cat.value} key={cat.value}>\r\n                      {cat.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={[24, 24]}>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"language\"\r\n                label=\"Language\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A language is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select filterSort={filterSort}>\r\n                  {LANGUAGES?.map((lang) => (\r\n                    <Option value={lang.value} key={lang.value}>\r\n                      {lang.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"status\"\r\n                label=\"Status\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A status is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  {STATUS.map((stat) => (\r\n                    <Option value={stat.value} key={stat.value}>\r\n                      {stat.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col md={8} sm={24} xs={24} lg={8}>\r\n              <Form.Item\r\n                name=\"copyright\"\r\n                label=\"Copyright\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"A copyright is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select>\r\n                  {COPYRIGHTS.map((copy) => (\r\n                    <Option value={copy.value} key={copy.value}>\r\n                      {copy.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item\r\n            label=\"Summary\"\r\n            name=\"summary\"\r\n            rules={[\r\n              {\r\n                max: 180,\r\n                message: \"Your summary cannot exceed 180 characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea\r\n              autoSize={{ minRows: 5 }}\r\n              showCount={true}\r\n              maxLength={180}\r\n            ></Input.TextArea>\r\n          </Form.Item>\r\n          <Row justify=\"space-between\" gutter={[24, 24]}>\r\n            <RadioButon\r\n              lg={4}\r\n              sm={12}\r\n              xs={24}\r\n              md={8}\r\n              name=\"public\"\r\n              label=\"Visibility\"\r\n              num1=\"3\"\r\n              num2=\"4\"\r\n              label1=\"Public\"\r\n              label2=\"Private\"\r\n            />\r\n            <RadioButon\r\n              lg={4}\r\n              sm={12}\r\n              xs={24}\r\n              md={8}\r\n              name=\"mature\"\r\n              label=\"Mature content ?\"\r\n              num1=\"1\"\r\n              num2=\"2\"\r\n              label1=\"Yes\"\r\n              label2=\"No\"\r\n            />\r\n            <Col lg={8} md={12} sm={24} xs={24}>\r\n              <Form.Item label=\"Tags\" name=\"tags\">\r\n                <Tags form={form} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <Row gutter={[24, 24]}>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Form.Item name=\"mainCharacters\" label=\"Main Characters\">\r\n                <Row gutter={16}>\r\n                  <Col span={22}>\r\n                    <Select>\r\n                      <Option selected value=\"\" disabled>\r\n                        Choose\r\n                      </Option>\r\n                      {props.characters\r\n                        ?.sort((a, b) => {\r\n                          const keyA = a.firstname,\r\n                            keyB = b.firstname;\r\n                          // Compare the 2 dates\r\n                          if (keyA < keyB) return -1;\r\n                          if (keyA > keyB) return 1;\r\n                          return 0;\r\n                        })\r\n                        .filter(\r\n                          (c) =>\r\n                            !form\r\n                              .getFieldValue(\"mainCharacters\")\r\n                              ?.includes(c.id)\r\n                        )\r\n                        .map((char) => (\r\n                          <Option\r\n                            key={char.id}\r\n                            value={char.id}\r\n                          >{`${char.firstname} ${char.lastname}`}</Option>\r\n                        ))}\r\n                    </Select>\r\n                  </Col>\r\n                  <Col span={2}>\r\n                    <div\r\n                      className=\"select-add-input-iconbox\"\r\n                      onClick={addCharacter}\r\n                    >\r\n                      <span>+</span>\r\n                    </div>\r\n                  </Col>\r\n                  <small>You can add up to 5 main characters</small>\r\n                </Row>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col lg={12} md={24} sm={24} xs={24}>\r\n              <Row gutter={[16, 16]}>\r\n                {props.characters\r\n                  .filter(\r\n                    (c) =>\r\n                      form.getFieldValue(\"mainCharacters\")?.indexOf(c.id) !== -1\r\n                  )\r\n                  .map((char) => (\r\n                    <Col md={12} sm={24} key={char.id}>\r\n                      <div key={char.id} className=\"main-selected\">\r\n                        <div className=\"main-avatar\">\r\n                          <img src={char.image} alt={char.firstname} />\r\n                        </div>\r\n                        <p>{`${char.firstname} ${char.lastname}`} </p>\r\n                        <ion-icon\r\n                          onClick={() => removeCharacter(char.id)}\r\n                          name=\"close-circle\"\r\n                        ></ion-icon>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Divider />\r\n          <button type=\"submit\">Create</button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n  confirmMessage: state.stories.message,\r\n  storyId: state.stories.storyId,\r\n  loading: state.stories.loadingStory,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters, addStory })(\r\n  NewStory\r\n);\r\n"]},"metadata":{},"sourceType":"module"}