{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\CODE\\\\kronikea-master\\\\pages\\\\character\\\\new.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"../../hooks/userHooks\";\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\nimport CharacterForm from \"../../components/forms/CharacterForm\";\n\nconst newCharacter = props => {\n  const {\n    characters\n  } = props;\n  const auth = useAuth();\n  const [form] = Form.useForm();\n  React.useEffect(() => {\n    if (auth.user) {\n      props.getUserCharacters(auth.user.uid);\n    }\n  }, [auth]);\n\n  const onFailed = () => {\n    window.scrollTo(0, 0);\n    message.error(\"There are some errors\");\n  };\n\n  const submit = values => {\n    const imageName = `${values.firstname.toLowercase()}_${values.lastname.toLowercase()}`;\n    console.log(imageName);\n  };\n\n  return __jsx(LoadingScreen, {\n    loading: auth.isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(RedirectComp, {\n    condition: auth.user,\n    type: \"redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"new-character custom-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: \"side-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Add a new character\"), __jsx(CharacterForm, {\n    submit: submit,\n    onFailed: onFailed,\n    form: form,\n    characters: characters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  characters: state.characters.userCharacters\n});\n\nexport default connect(mapStateToProps, {\n  getUserCharacters\n})(newCharacter);","map":{"version":3,"sources":["C:/Users/Utilisateur/Documents/CODE/kronikea-master/pages/character/new.js"],"names":["React","Form","message","connect","useAuth","getUserCharacters","LoadingScreen","RedirectComp","CharacterForm","newCharacter","props","characters","auth","form","useForm","useEffect","user","uid","onFailed","window","scrollTo","error","submit","values","imageName","firstname","toLowercase","lastname","console","log","isLoading","mapStateToProps","state","userCharacters"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AAEA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAME,IAAI,GAAGR,OAAO,EAApB;AACA,QAAM,CAACS,IAAD,IAASZ,IAAI,CAACa,OAAL,EAAf;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,QAAIH,IAAI,CAACI,IAAT,EAAe;AACbN,MAAAA,KAAK,CAACL,iBAAN,CAAwBO,IAAI,CAACI,IAAL,CAAUC,GAAlC;AACD;AACF,GAJD,EAIG,CAACL,IAAD,CAJH;;AAMA,QAAMM,QAAQ,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAlB,IAAAA,OAAO,CAACmB,KAAR,CAAc,uBAAd;AACD,GAHD;;AAKA,QAAMC,MAAM,GAAIC,MAAD,IAAY;AACzB,UAAMC,SAAS,GAAI,GAAED,MAAM,CAACE,SAAP,CAAiBC,WAAjB,EAA+B,IAAGH,MAAM,CAACI,QAAP,CAAgBD,WAAhB,EAA8B,EAArF;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACD,GAHD;;AAKA,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEZ,IAAI,CAACkB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAElB,IAAI,CAACI,IAA9B;AAAoC,IAAA,IAAI,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEM,MADV;AAEE,IAAA,QAAQ,EAAEJ,QAFZ;AAGE,IAAA,IAAI,EAAEL,IAHR;AAIE,IAAA,UAAU,EAAEF,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF,CADF;AAiBD,CAtCD;;AAwCA,MAAMoB,eAAe,GAAIC,KAAD,KAAY;AAClCrB,EAAAA,UAAU,EAAEqB,KAAK,CAACrB,UAAN,CAAiBsB;AADK,CAAZ,CAAxB;;AAIA,eAAe9B,OAAO,CAAC4B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAgDI,YAAhD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Form, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useAuth } from \"../../hooks/userHooks\";\r\nimport { getUserCharacters } from \"../../redux/actions/charactersActions\";\r\n\r\nimport LoadingScreen from \"../../components/hoc/LoadingScreen\";\r\nimport RedirectComp from \"../../components/hoc/RedirectComp\";\r\nimport CharacterForm from \"../../components/forms/CharacterForm\";\r\n\r\nconst newCharacter = (props) => {\r\n  const { characters } = props;\r\n  const auth = useAuth();\r\n  const [form] = Form.useForm();\r\n\r\n  React.useEffect(() => {\r\n    if (auth.user) {\r\n      props.getUserCharacters(auth.user.uid);\r\n    }\r\n  }, [auth]);\r\n\r\n  const onFailed = () => {\r\n    window.scrollTo(0, 0);\r\n    message.error(\"There are some errors\");\r\n  };\r\n\r\n  const submit = (values) => {\r\n    const imageName = `${values.firstname.toLowercase()}_${values.lastname.toLowercase()}`;\r\n    console.log(imageName);\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen loading={auth.isLoading}>\r\n      <RedirectComp condition={auth.user} type=\"redirect\">\r\n        <div className=\"new-character custom-form\">\r\n          <div className=\"inner\">\r\n            <h2 className=\"side-heading\">Add a new character</h2>\r\n            <CharacterForm\r\n              submit={submit}\r\n              onFailed={onFailed}\r\n              form={form}\r\n              characters={characters}\r\n            />\r\n          </div>\r\n        </div>\r\n      </RedirectComp>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  characters: state.characters.userCharacters,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserCharacters })(newCharacter);\r\n"]},"metadata":{},"sourceType":"module"}